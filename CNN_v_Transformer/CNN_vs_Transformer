{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "toc_visible": true,
      "gpuType": "T4"
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "accelerator": "GPU"
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "**Candidate Name:** Sneha Santha Prabakar\n",
        "\n",
        "**Assignment:** Week 4 - CNN vs. ViT"
      ],
      "metadata": {
        "id": "6VkHY-MayBeB"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jsl7fQ-ftPrH",
        "outputId": "f196100e-30b9-40ea-b273-66ba1a3d8d99"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/drive\n"
          ]
        }
      ],
      "source": [
        "from google.colab import drive\n",
        "\n",
        "drive.mount('/content/drive')"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Section 1: Import libraries and dataset"
      ],
      "metadata": {
        "id": "IEy7SPdvxcgt"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install tensorflow\n",
        "!pip install keras"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xZp6KqsLfCcL",
        "outputId": "3dd568b1-0a68-4634-d53c-893a3709251f"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: tensorflow in /usr/local/lib/python3.11/dist-packages (2.18.0)\n",
            "Requirement already satisfied: absl-py>=1.0.0 in /usr/local/lib/python3.11/dist-packages (from tensorflow) (1.4.0)\n",
            "Requirement already satisfied: astunparse>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from tensorflow) (1.6.3)\n",
            "Requirement already satisfied: flatbuffers>=24.3.25 in /usr/local/lib/python3.11/dist-packages (from tensorflow) (25.2.10)\n",
            "Requirement already satisfied: gast!=0.5.0,!=0.5.1,!=0.5.2,>=0.2.1 in /usr/local/lib/python3.11/dist-packages (from tensorflow) (0.6.0)\n",
            "Requirement already satisfied: google-pasta>=0.1.1 in /usr/local/lib/python3.11/dist-packages (from tensorflow) (0.2.0)\n",
            "Requirement already satisfied: libclang>=13.0.0 in /usr/local/lib/python3.11/dist-packages (from tensorflow) (18.1.1)\n",
            "Requirement already satisfied: opt-einsum>=2.3.2 in /usr/local/lib/python3.11/dist-packages (from tensorflow) (3.4.0)\n",
            "Requirement already satisfied: packaging in /usr/local/lib/python3.11/dist-packages (from tensorflow) (24.2)\n",
            "Requirement already satisfied: protobuf!=4.21.0,!=4.21.1,!=4.21.2,!=4.21.3,!=4.21.4,!=4.21.5,<6.0.0dev,>=3.20.3 in /usr/local/lib/python3.11/dist-packages (from tensorflow) (5.29.4)\n",
            "Requirement already satisfied: requests<3,>=2.21.0 in /usr/local/lib/python3.11/dist-packages (from tensorflow) (2.32.3)\n",
            "Requirement already satisfied: setuptools in /usr/local/lib/python3.11/dist-packages (from tensorflow) (75.2.0)\n",
            "Requirement already satisfied: six>=1.12.0 in /usr/local/lib/python3.11/dist-packages (from tensorflow) (1.17.0)\n",
            "Requirement already satisfied: termcolor>=1.1.0 in /usr/local/lib/python3.11/dist-packages (from tensorflow) (3.1.0)\n",
            "Requirement already satisfied: typing-extensions>=3.6.6 in /usr/local/lib/python3.11/dist-packages (from tensorflow) (4.13.2)\n",
            "Requirement already satisfied: wrapt>=1.11.0 in /usr/local/lib/python3.11/dist-packages (from tensorflow) (1.17.2)\n",
            "Requirement already satisfied: grpcio<2.0,>=1.24.3 in /usr/local/lib/python3.11/dist-packages (from tensorflow) (1.71.0)\n",
            "Requirement already satisfied: tensorboard<2.19,>=2.18 in /usr/local/lib/python3.11/dist-packages (from tensorflow) (2.18.0)\n",
            "Requirement already satisfied: keras>=3.5.0 in /usr/local/lib/python3.11/dist-packages (from tensorflow) (3.8.0)\n",
            "Requirement already satisfied: numpy<2.1.0,>=1.26.0 in /usr/local/lib/python3.11/dist-packages (from tensorflow) (2.0.2)\n",
            "Requirement already satisfied: h5py>=3.11.0 in /usr/local/lib/python3.11/dist-packages (from tensorflow) (3.13.0)\n",
            "Requirement already satisfied: ml-dtypes<0.5.0,>=0.4.0 in /usr/local/lib/python3.11/dist-packages (from tensorflow) (0.4.1)\n",
            "Requirement already satisfied: tensorflow-io-gcs-filesystem>=0.23.1 in /usr/local/lib/python3.11/dist-packages (from tensorflow) (0.37.1)\n",
            "Requirement already satisfied: wheel<1.0,>=0.23.0 in /usr/local/lib/python3.11/dist-packages (from astunparse>=1.6.0->tensorflow) (0.45.1)\n",
            "Requirement already satisfied: rich in /usr/local/lib/python3.11/dist-packages (from keras>=3.5.0->tensorflow) (13.9.4)\n",
            "Requirement already satisfied: namex in /usr/local/lib/python3.11/dist-packages (from keras>=3.5.0->tensorflow) (0.0.9)\n",
            "Requirement already satisfied: optree in /usr/local/lib/python3.11/dist-packages (from keras>=3.5.0->tensorflow) (0.15.0)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.11/dist-packages (from requests<3,>=2.21.0->tensorflow) (3.4.1)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.11/dist-packages (from requests<3,>=2.21.0->tensorflow) (3.10)\n",
            "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.11/dist-packages (from requests<3,>=2.21.0->tensorflow) (2.4.0)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.11/dist-packages (from requests<3,>=2.21.0->tensorflow) (2025.4.26)\n",
            "Requirement already satisfied: markdown>=2.6.8 in /usr/local/lib/python3.11/dist-packages (from tensorboard<2.19,>=2.18->tensorflow) (3.8)\n",
            "Requirement already satisfied: tensorboard-data-server<0.8.0,>=0.7.0 in /usr/local/lib/python3.11/dist-packages (from tensorboard<2.19,>=2.18->tensorflow) (0.7.2)\n",
            "Requirement already satisfied: werkzeug>=1.0.1 in /usr/local/lib/python3.11/dist-packages (from tensorboard<2.19,>=2.18->tensorflow) (3.1.3)\n",
            "Requirement already satisfied: MarkupSafe>=2.1.1 in /usr/local/lib/python3.11/dist-packages (from werkzeug>=1.0.1->tensorboard<2.19,>=2.18->tensorflow) (3.0.2)\n",
            "Requirement already satisfied: markdown-it-py>=2.2.0 in /usr/local/lib/python3.11/dist-packages (from rich->keras>=3.5.0->tensorflow) (3.0.0)\n",
            "Requirement already satisfied: pygments<3.0.0,>=2.13.0 in /usr/local/lib/python3.11/dist-packages (from rich->keras>=3.5.0->tensorflow) (2.19.1)\n",
            "Requirement already satisfied: mdurl~=0.1 in /usr/local/lib/python3.11/dist-packages (from markdown-it-py>=2.2.0->rich->keras>=3.5.0->tensorflow) (0.1.2)\n",
            "Requirement already satisfied: keras in /usr/local/lib/python3.11/dist-packages (3.8.0)\n",
            "Requirement already satisfied: absl-py in /usr/local/lib/python3.11/dist-packages (from keras) (1.4.0)\n",
            "Requirement already satisfied: numpy in /usr/local/lib/python3.11/dist-packages (from keras) (2.0.2)\n",
            "Requirement already satisfied: rich in /usr/local/lib/python3.11/dist-packages (from keras) (13.9.4)\n",
            "Requirement already satisfied: namex in /usr/local/lib/python3.11/dist-packages (from keras) (0.0.9)\n",
            "Requirement already satisfied: h5py in /usr/local/lib/python3.11/dist-packages (from keras) (3.13.0)\n",
            "Requirement already satisfied: optree in /usr/local/lib/python3.11/dist-packages (from keras) (0.15.0)\n",
            "Requirement already satisfied: ml-dtypes in /usr/local/lib/python3.11/dist-packages (from keras) (0.4.1)\n",
            "Requirement already satisfied: packaging in /usr/local/lib/python3.11/dist-packages (from keras) (24.2)\n",
            "Requirement already satisfied: typing-extensions>=4.5.0 in /usr/local/lib/python3.11/dist-packages (from optree->keras) (4.13.2)\n",
            "Requirement already satisfied: markdown-it-py>=2.2.0 in /usr/local/lib/python3.11/dist-packages (from rich->keras) (3.0.0)\n",
            "Requirement already satisfied: pygments<3.0.0,>=2.13.0 in /usr/local/lib/python3.11/dist-packages (from rich->keras) (2.19.1)\n",
            "Requirement already satisfied: mdurl~=0.1 in /usr/local/lib/python3.11/dist-packages (from markdown-it-py>=2.2.0->rich->keras) (0.1.2)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Core libraries\n",
        "import random\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "\n",
        "# Visualization\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "import plotly.express as px\n",
        "\n",
        "# TensorFlow and Keras\n",
        "import tensorflow as tf\n",
        "from tensorflow import keras\n",
        "from tensorflow.keras import layers, models, regularizers\n",
        "from tensorflow.keras.models import Sequential\n",
        "from tensorflow.keras.layers import Dense, Dropout, Conv1D, GlobalMaxPooling1D\n",
        "from tensorflow.keras.optimizers import Adam\n",
        "from tensorflow.keras.callbacks import EarlyStopping, ModelCheckpoint, ReduceLROnPlateau\n",
        "from tensorflow.keras.preprocessing.image import ImageDataGenerator\n",
        "\n",
        "# Set seeds for reproducibility\n",
        "tf.random.set_seed(42)\n",
        "random.seed(42)\n",
        "np.random.seed(42)"
      ],
      "metadata": {
        "id": "HuK74betw72B"
      },
      "execution_count": 3,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Import dataset"
      ],
      "metadata": {
        "id": "C9Jn67ttye2D"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "We start by importing the dataset, splitting it into test and train sets and normalizing it.\n",
        "\n",
        "In order to **normalize** the data, we **divide it by 255** as this is an image data with pixel values typically in the range [0, 255] representing 8-bit color channels. Neural networks train more efficiently when inputs are on a standardized scale—ideally in the [0, 1] range or zero-centered like [-1, 1].\n",
        "\n",
        "Here, we normalize the pixel values to be in the [0,1] range."
      ],
      "metadata": {
        "id": "-t8rk_uWzWmC"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Load dataset\n",
        "(x_train, y_train), (x_test, y_test) = keras.datasets.cifar10.load_data()\n",
        "\n",
        "print(f\"\\nx_train shape: {x_train.shape} and y_train shape: {y_train.shape}\")\n",
        "print(f\"x_test shape: {x_test.shape} and y_test shape: {y_test.shape}\")\n",
        "\n",
        "# Normalize pixel values\n",
        "x_train, x_test = x_train.astype(\"float32\") / 255.0, x_test.astype(\"float32\") / 255.0\n",
        "\n",
        "# Class names\n",
        "class_names = ['airplane', 'automobile', 'bird', 'cat', 'deer',\n",
        "               'dog', 'frog', 'horse', 'ship', 'truck']"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AF_fc6-Dx3oL",
        "outputId": "b61c4bc1-d8d4-4102-c889-a8a07cd32501"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Downloading data from https://www.cs.toronto.edu/~kriz/cifar-10-python.tar.gz\n",
            "\u001b[1m170498071/170498071\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 0us/step\n",
            "\n",
            "x_train shape: (50000, 32, 32, 3) and y_train shape: (50000, 1)\n",
            "x_test shape: (10000, 32, 32, 3) and y_test shape: (10000, 1)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Total data size: 60,000 rows\n",
        "\n",
        "Pixels: 32 x 32\n",
        "  - Each image has a height and width of 32 pixels\n",
        "  - This suggests that these are small, low-resolution images\n",
        "\n",
        "Colour channels: 3\n",
        "  - Each image has 3 colour channels - RGB (red, green, blue)\n",
        "\n",
        "The training set contains 50,000 images\n",
        "The test set contains 10,000 images"
      ],
      "metadata": {
        "id": "ubh67cNJ3kEn"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Section 2: EDA visualization"
      ],
      "metadata": {
        "id": "efxcGiSr0P-e"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Class Distribution"
      ],
      "metadata": {
        "id": "_PLcCO2n58-2"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10,5))\n",
        "plt.hist(y_train, bins=np.arange(11) - 0.5, rwidth=0.8)\n",
        "plt.xticks(np.arange(10), class_names, rotation=45)\n",
        "plt.title(\"Class Distribution\")\n",
        "plt.xlabel(\"Class\")\n",
        "plt.ylabel(\"Count\")\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "Q5L7MLO1zFVg",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 539
        },
        "outputId": "0a8d8fc3-54dc-4441-9b19-87d5f074dc4f"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Sample Images"
      ],
      "metadata": {
        "id": "yIIEdKcz6AnY"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10, 5))\n",
        "for i in range(10):\n",
        "    plt.subplot(2, 5, i + 1)\n",
        "    plt.imshow(x_train[i])\n",
        "    plt.title(class_names[y_train[i][0]])\n",
        "    plt.axis('off')\n",
        "plt.suptitle(\"Sample Images from CIFAR-10\")\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "1zsygDl35_b4",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 493
        },
        "outputId": "9e0ff6ca-b1fe-45ec-be8a-ad2c30bd2938"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x500 with 10 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAA94AAAHcCAYAAAAgOnIJAAAAOnRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjEwLjAsIGh0dHBzOi8vbWF0cGxvdGxpYi5vcmcvlHJYcgAAAAlwSFlzAAAPYQAAD2EBqD+naQAA5iJJREFUeJzs3Xl8XHW9P/7X7EsmyWRP06ZJm5bSlkKl7FuhCFhZRGwrepGCIEUELl7Qq6CUTVERyhUuICoFsdevbKIIFORSFqFIWQqUtnRLui/ZJtvsM+f3B7/mEj6vD6SkQwFfz8fDh/SdT86c5XM+55yZzOvjchzHgYiIiIiIiIgUhHtPr4CIiIiIiIjIZ5kevEVEREREREQKSA/eIiIiIiIiIgWkB28RERERERGRAtKDt4iIiIiIiEgB6cFbREREREREpID04C0iIiIiIiJSQHrwFhERERERESkgPXiLiIiIiIiIFJAevEVEZI9yuVy46qqr9vRqfOZks1l8//vfR319PdxuN0499dQ9vUoiIiL/svTgLSLyGfDWW29hxowZaGhoQDAYxPDhw3Hcccfhlltu2dOr9rFrbGzESSedtKdXY4+76667cMMNN2DGjBm455578N3vfndPr9KHyuVymD9/Po4++miUl5cjEAigsbERZ599Nl555ZX+dnfffTdcLteA2lVXXQWXy0X/d8cddwx4ne9///twuVz46le/StejpaVlwO+73W6Ul5dj+vTpWLx48aC35yc/+QlOOeUU1NTUfOgbTJs3b8asWbMQjUZRUlKCL33pS1i3bt2gX0tERD7ZvHt6BUREZGhefPFFHHPMMRg5ciS+9a1voba2Fhs3bsRLL72E//qv/8JFF120p1dR9oCnn34aw4cPx7x58/b0qgxKIpHAaaedhoULF+Koo47C5ZdfjvLycrS0tOC+++7DPffcgw0bNmDEiBEfuJzbb78dkUhkQO3ggw/u/2/HcfDHP/4RjY2NeOSRR9DT04Pi4mK6rK997Wv44he/iFwuh1WrVuG2227DMcccgyVLlmDSpEkfuk0/+tGPUFtbi8997nN44oknrO16e3txzDHHoKurC5dffjl8Ph/mzZuHqVOnYunSpaioqPjQ1xIRkU82PXiLiHzK/eQnP0FpaSmWLFmCaDQ64Gc7duzYMysle9yOHTuM/sBks1nk83n4/f7Cr9QH+N73voeFCxdi3rx5uOSSSwb8bO7cuYN+A2HGjBmorKy0/vyZZ57Bpk2b8PTTT+OEE07AQw89hNmzZ9O2+++/P84444z+fx955JGYPn06br/9dtx2220fui7Nzc1obGxEW1sbqqqqrO1uu+02rF69Gi+//DIOPPBAAMD06dOxzz774MYbb8RPf/rTD30tERH5ZNOfmouIfMqtXbsWEydOpA9Z1dXVA/49f/58TJs2DdXV1QgEApgwYQJuv/124/d2/rn2M888gwMOOAChUAiTJk3CM888AwB46KGHMGnSJASDQUyZMgWvv/76gN8/66yzEIlEsG7dOpxwwgkoKipCXV0drrnmGjiO86HbtHnzZnzzm99ETU0NAoEAJk6ciLvuumvwO+U9dv7Z8C9/+Uv893//N0aPHo1wOIzjjz8eGzduhOM4uPbaazFixAiEQiF86UtfQkdHx4Bl/OUvf8GJJ56Iuro6BAIBNDU14dprr0UulzNeb+drhEIhHHTQQXj++edx9NFH4+ijjx7QLpVKYe7cuRgzZgwCgQDq6+vx/e9/H6lUakC7v//97zjiiCMQjUYRiUQwbtw4XH755R+6vYsWLcLbb7/d/+fSzzzzzIB9cfPNN6OpqQmBQADLly8H8O6n5EceeSSKiooQjUbxpS99CStWrBiw/J1/0r1q1SqcccYZKC0tRVVVFX784x/DcRxs3LgRX/rSl1BSUoLa2lrceOONH3qMNm3ahF//+tc47rjjjIduAPB4PLjssss+9NPuwViwYAEmTJiAY445Bp///OexYMGCQf/ukUceCeDdc24wGhsbB9XugQcewIEHHtj/0A0Ae++9N4499ljcd999g14/ERH55NIn3iIin3INDQ1YvHgxli1bhn322ecD295+++2YOHEiTjnlFHi9XjzyyCO44IILkM/n8Z3vfGdA2zVr1uDrX/865syZgzPOOAO//OUvcfLJJ+OOO+7A5ZdfjgsuuAAAcP3112PWrFl455134Hb/3/u5uVwOX/jCF3DIIYfgF7/4BRYuXIi5c+cim83immuusa7j9u3bccghh8DlcuHCCy9EVVUVHn/8cZxzzjno7u6mD2aDsWDBAqTTaVx00UXo6OjAL37xC8yaNQvTpk3DM888g//8z//EmjVrcMstt+Cyyy4b8KB/9913IxKJ4D/+4z8QiUTw9NNP48orr0R3dzduuOGGAfv3wgsvxJFHHonvfve7aGlpwamnnoqysrIBD435fB6nnHIK/vGPf+C8887D+PHj8dZbb2HevHlYtWoVHn74YQDA22+/jZNOOgn77rsvrrnmGgQCAaxZswYvvPCCdTurqqpw77334ic/+Ql6e3tx/fXXAwDGjx+PRCIB4N03YJLJJM477zwEAgGUl5fjqaeewvTp0zF69GhcddVVSCQSuOWWW3D44YfjtddeMx4iv/rVr2L8+PH42c9+hkcffRTXXXcdysvL8etf/xrTpk3Dz3/+cyxYsACXXXYZDjzwQBx11FHWdX788ceRzWbxjW98Y9DH0+b9b5p4PB6UlZUBePfNjgcffBCXXnopgHf/lPzss8/Gtm3bUFtb+6HLbmlpAYD+5e0O+Xweb775Jr75zW8aPzvooIPw5JNPfuCfw4uIyKeEIyIin2pPPvmk4/F4HI/H4xx66KHO97//feeJJ55w0um00TYejxu1E044wRk9evSAWkNDgwPAefHFF/trTzzxhAPACYVCzvr16/vrv/71rx0AzqJFi/prs2fPdgA4F110UX8tn887J554ouP3+53W1tb+OgBn7ty5/f8+55xznGHDhjltbW0D1un00093SktL6Ta8f91PPPHE/n83Nzc7AJyqqionFov113/4wx86AJz99tvPyWQy/fWvfe1rjt/vd5LJZH+NveacOXOccDjc3y6VSjkVFRXOgQceOGB5d999twPAmTp1an/t3nvvddxut/P8888PWOYdd9zhAHBeeOEFx3EcZ968eQ6AAftrsKZOnepMnDhxQG3nvigpKXF27Ngx4GeTJ092qqurnfb29v7aG2+84bjdbufMM8/sr82dO9cB4Jx33nn9tWw264wYMcJxuVzOz372s/56Z2enEwqFnNmzZ3/gun73u991ADivv/76oLZt/vz5DgBnyZIlxnq9/38NDQ39bR544AEHgLN69WrHcRynu7vbCQaDzrx58wYsf+d+uvrqq53W1lZn27ZtzvPPP+8ceOCBDgDn/vvvH9R67tTa2mr08/f/7JprrjF+9t///d8OAGflypW79HoiIvLJoz81FxH5lDvuuOOwePFinHLKKXjjjTfwi1/8AieccAKGDx+Ov/71rwPahkKh/v/u6upCW1sbpk6dinXr1qGrq2tA2wkTJuDQQw/t//fOgKpp06Zh5MiRRp0lMF944YX9/73zE+x0Oo2nnnqKbovjOHjwwQdx8sknw3EctLW19f/vhBNOQFdXF1577bXB7poBZs6cidLSUmO9zzjjDHi93gH1dDqNzZs399feu996enrQ1taGI488EvF4HCtXrgQAvPLKK2hvb8e3vvWtAcv7t3/7N+MT0vvvvx/jx4/H3nvvPWAbp02bBgBYtGgRAPR/feAvf/kL8vn8R9pu5itf+cqA7xxv3boVS5cuxVlnnYXy8vL++r777ovjjjsOjz32mLGMc889t/+/PR4PDjjgADiOg3POOae/Ho1GMW7cuA9N5+7u7gaA3fKp7oMPPoi///3v/f9775+SL1iwAAcccADGjBnT/3onnnii9c/N586di6qqKtTW1uLII4/EihUrcOONN2LGjBlDXs+ddv4VQiAQMH4WDAYHtBERkU8v/am5iMhnwIEHHoiHHnoI6XQab7zxBv785z9j3rx5mDFjBpYuXYoJEyYAAF544QXMnTsXixcvRjweH7CMrq6uAQ+m7324BtD/s/r6elrv7OwcUHe73Rg9evSA2l577QXg//5k9/1aW1sRi8Vw55134s4776RtPmpg3FC25+2338aPfvQjPP300/0PiTvtfMNi/fr1AND/ULeT1+s1/kx79erVWLFihTVwa+c2fvWrX8Vvf/tbnHvuufjBD36AY489FqeddhpmzJgx4M/6d9WoUaMG/Hvnuo8bN85oO378eDzxxBPo6+tDUVFRf53tz2AwaASblZaWor29/QPXp6SkBMC7b2oM1VFHHUXD1WKxGB577DFceOGFWLNmTX/98MMPx4MPPohVq1b198+dzjvvPMycORPJZBJPP/00fvWrXxnf69+2bduAf5eWlg54o+bD7Gz7/u/2A0AymRzQRkREPr304C0i8hni9/v7Q5r22msvnH322bj//vsxd+5crF27Fsceeyz23ntv3HTTTaivr4ff78djjz2GefPmGZ+oejwe+hq2ujOI0LQPs3MdzjjjDGvS9L777vuRlv1RtycWi2Hq1KkoKSnBNddcg6amJgSDQbz22mv4z//8z4/0SXQ+n8ekSZNw00030Z/vfDMgFArhueeew6JFi/Doo49i4cKF+NOf/oRp06bhySeftK77h9kdD3LstT9q39h7770BvDsf/eTJk4e8bsz999+PVCqFG2+8kQa+LViwAFdfffWA2tixY/H5z38eAHDSSSfB4/HgBz/4AY455hgccMABAIBhw4YN+J358+fjrLPOGvR67ZyvfOvWrcbPdtbq6uoGvTwREflk0oO3iMhn1M4Hg50374888ghSqRT++te/Dvi0cuefNe9u+Xwe69atG/Ap4qpVqwDY056rqqpQXFyMXC7X/8Czpz3zzDNob2/HQw89NCAgrLm5eUC7hoYGAO+G0h1zzDH99Ww2i5aWlgFvGDQ1NeGNN97AscceC5fL9YGv73a7ceyxx+LYY4/FTTfdhJ/+9Ke44oorsGjRot22j3au+zvvvGP8bOXKlaisrBzwaffuNn36dHg8HvzhD3/YLQFrzIIFC7DPPvtg7ty5xs9+/etf43/+53+MB+/3u+KKK/Cb3/wGP/rRj7Bw4UIA76bOv9fEiRN3ab3cbjcmTZqEV155xfjZP//5T4wePVrBaiIinwH6jreIyKfcokWL6CeKO7+Xu/PPh3d+Gvnetl1dXZg/f37B1u3WW2/t/2/HcXDrrbfC5/Ph2GOPpe09Hg++8pWv4MEHH8SyZcuMn7e2thZsXW3Yfkun08Y8zgcccAAqKirwm9/8Btlstr++YMEC48/wZ82ahc2bN+M3v/mN8XqJRAJ9fX0AzIRuAP2fCLM/Tf6ohg0bhsmTJ+Oee+5BLBbrry9btgxPPvkkvvjFL+6212Lq6+vxrW99C08++SRuueUW4+f5fB433ngjNm3a9JGWv3HjRjz33HOYNWsWZsyYYfzv7LPPxpo1a/DPf/7zA5cTjUYxZ84cPPHEE1i6dCkA4POf//yA/73/E/DBmDFjBpYsWTLg4fudd97B008/jZkzZ+7y8kRE5JNHn3iLiHzKXXTRRYjH4/jyl7+MvffeG+l0Gi+++CL+9Kc/obGxEWeffTYA4Pjjj4ff78fJJ5+MOXPmoLe3F7/5zW9QXV1N/8x1qILBIBYuXIjZs2fj4IMPxuOPP45HH30Ul19+ufW7zQDws5/9DIsWLcLBBx+Mb33rW5gwYQI6Ojrw2muv4amnnqIPo4V02GGHoaysDLNnz8bFF18Ml8uFe++913izw+/346qrrsJFF12EadOmYdasWWhpacHdd9+NpqamAZ9sf+Mb38B9992H888/H4sWLcLhhx+OXC6HlStX4r777sMTTzyBAw44ANdccw2ee+45nHjiiWhoaMCOHTtw2223YcSIETjiiCN263becMMNmD59Og499FCcc845/dOJlZaW4qqrrtqtr8XceOONWLt2LS6++GI89NBDOOmkk1BWVoYNGzbg/vvvx8qVK3H66ad/pGX/z//8DxzHwSmnnEJ//sUvfhFerxcLFizoD92z+fd//3fcfPPN+NnPfob/9//+3we2vffee7F+/fr+PIXnnnsO1113HYB3+8DOvzS44IIL8Jvf/AYnnngiLrvsMvh8Ptx0002oqanpn/pMREQ+3fTgLSLyKffLX/4S999/Px577DHceeedSKfTGDlyJC644AL86Ec/6k/GHjduHB544AH86Ec/wmWXXYba2lp8+9vfRlVVFZ1DeKg8Hg8WLlyIb3/72/je976H4uJizJ07F1deeeUH/l5NTQ1efvllXHPNNXjooYdw2223oaKiAhMnTsTPf/7z3b6eH6aiogJ/+9vfcOmll+JHP/oRysrKcMYZZ+DYY4/FCSecMKDthRdeCMdxcOONN+Kyyy7Dfvvth7/+9a+4+OKL+xOqgXf/vPjhhx/GvHnz8Pvf/x5//vOfEQ6HMXr0aPz7v/97/5/nn3LKKWhpacFdd92FtrY2VFZWYurUqbj66qsHBOHtDp///Of751q/8sor4fP5MHXqVPz85z83wtgKIRwO4/HHH8fdd9+Ne+65B9deey3i8Tjq6uowbdo0LFiwAMOHD/9Iy16wYAFGjhyJ/fbbj/48Go3iiCOOwJ/+9Cfr9+53qqurw9e//nXce++9WLt2LZqamqxtf/e73+HZZ5/t//eiRYv6v9pxxBFH9D94FxcX45lnnsF3v/tdXHfddcjn8zj66KMxb968D3yTSkREPj1czu5IwxEREXmPs846Cw888AB6e3v39Krscfl8HlVVVTjttNPon5aLiIjIZ5++4y0iIrKbJJNJ40/Qf//736OjowNHH330nlkpERER2eP0p+YiIiK7yUsvvYTvfve7mDlzJioqKvDaa6/hd7/7HfbZZx+FZImIiPwL04O3iIjIbtLY2Ij6+nr86le/QkdHB8rLy3HmmWfiZz/7Gfx+/55ePREREdlD9B1vERERERERkQLSd7xFRERERERECkgP3iIiIiIiIiIFpAdvERERERERkQLSg7eIiIiIiIhIAenBW0RERERERKSA9OAtIiIiIiIiUkB68BYREREREREpID14i4iIiIiIiBSQHrxFRERERERECkgP3iIiIiIiIiIFpAdvERERERERkQLSg7eIiIiIiIhIAenBW0RERERERKSA9OAtIiIiIiIiUkB68BYREREREREpID14i4iIiIiIiBSQHrxFRERERERECkgP3gW0ZMkSHHbYYSgqKoLL5cLSpUv39CqJ/Eu46qqr4HK50NbWtqdXReQTQeeEfBrt7Lcisuc0NjbipJNO+tB2zzzzDFwuF5555pn+2llnnYXGxsbCrdynjB68CySTyWDmzJno6OjAvHnzcO+996KhoWFPr5bIx+LFF1/EVVddhVgstqdXReQTQeeEiIjsdNttt+Huu+/e06shHzM9eBfI2rVrsX79elx22WU477zzcMYZZ6CsrGxPr5bIx+LFF1/E1VdfrYcMkf+fzgkREdnps/jgfdRRRyGRSOCoo47a06vyiaUH7wLZsWMHACAajX5gu76+vo9hbUQ+mfL5PJLJ5J5eDZFPDJ0TInuW7stEPhq3241gMAi3W4+XNtozBXDWWWdh6tSpAICZM2fC5XLh6KOPxllnnYVIJIK1a9fii1/8IoqLi/Fv//ZvAN4d6C+99FLU19cjEAhg3Lhx+OUvfwnHcQYsO5FI4OKLL0ZlZSWKi4txyimnYPPmzXC5XLjqqqs+7k0VMVx11VX43ve+BwAYNWoUXC4XXC4XWlpa4HK5cOGFF2LBggWYOHEiAoEAFi5cSL8XBKD/d97/rvDKlSsxa9YsVFVVIRQKYdy4cbjiiis+cL3Wr1+PMWPGYJ999sH27dt35yaLfCCdEyIf7h//+AcOPPBABINBNDU14de//jVt94c//AFTpkxBKBRCeXk5Tj/9dGzcuNFo989//hNf+MIXUFpainA4jKlTp+KFF14Y0Gbnd8iXL1+Or3/96ygrK8MRRxxRkO2TT6/169fjggsuwLhx4xAKhVBRUYGZM2eipaVlQDtbJsHdd9/dP+YD735n+u2338azzz7bfz04+uij+9uvW7cOM2fORHl5OcLhMA455BA8+uijA5a58xpx33334eqrr8bw4cNRXFyMGTNmoKurC6lUCpdccgmqq6sRiURw9tlnI5VKDVhGNpvFtddei6amJgQCATQ2NuLyyy832u305JNPYvLkyQgGg5gwYQIeeughuk7vv269Xz6fx80334yJEyciGAyipqYG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fO9734PH48Fdd92Fqqoq443RKVOm4Pbbb8d1112HMWPGoLq6GtOmTcMPfvAD/PGPf8T06dNx8cUXo7y8HPfccw+am5vx4IMP7ravq+63336YPXs27rzzTsRiMUydOhUvv/wy7rnnHpx66qk45phjBrTfa6+9cM4552DJkiWoqanBXXfdhe3bt2P+/Pm79LpTp07FnDlzcP3112Pp0qU4/vjj4fP5sHr1atx///34r//6L8yYMWO3bOMn0p4JU//ss00nVlRURNv39PQ43/3ud526ujrH5/M5Y8eOdW644YYBU2E4juP09fU53/nOd5zy8nInEok4p556qvPOO+84AJyf/exnBd0mkV1x7bXXOsOHD3fcbnf/NBoAnO985zu0fWtrq/OVr3zFCYfDTllZmTNnzhxn2bJlxtRJjuM4y5Ytc7785S870WjUCQaDzrhx45wf//jH/T9/79RJO8XjcWfq1KlOJBJxXnrppYJss8gH0TkhYvfss886U6ZMcfx+vzN69GjnjjvuoNMzPfjgg84RRxzhFBUVOUVFRc7ee+/tfOc733HeeeedAe1ef/1157TTTnMqKiqcQCDgNDQ0OLNmzXL+93//t78NOy9E3q+zs9M5++yzncrKSicSiTgnnHCCs3LlSqehocGZPXv2gLavvvqqc/DBBzt+v98ZOXKkc9NNN9HpxLZt2+aceOKJTnFxsQNgwNRia9eudWbMmNE/nh900EHO3/72twGvw54zHOf/pi5bsmTJgDrr65lMxrn66qudUaNGOT6fz6mvr3d++MMfOslkcsDvNjQ0OCeeeKLzxBNPOPvuu68TCAScvffe23jtwUwnttOdd97pTJkyxQmFQk5xcbEzadIk5/vf/76zZcsWo+1nictxyN+iyafK0qVL8bnPfQ5/+MMf8G//9m97enVERERERETkPfQd70+ZRCJh1G6++Wa43W4cddRRe2CNRERERERE5IPoO96fMr/4xS/w6quv4phjjoHX68Xjjz+Oxx9/HOedd54xZ5+IiIiIiIjsefpT80+Zv//977j66quxfPly9Pb2YuTIkfjGN76BK664Al6v3kcRERERERH5pNGDt4iIiIiIiEgB6TveIiIiIiIiIgWkB28RERERERGRAtKDt4iIiIiIiEgBDTqN64ipR9N6LNZh1ALuPG1b7udfJx9ZETZqVeVFtG1lNELrfo/PqHkDIdoWHr7ZHZ0xWk9nzfUui5bStu5chtZTqZRRSyaTtG0wFKT1HHJGLZ7opW1LoyW0DsdcRjqVpk09MPcpAHg8HqNWHOHHpaiIH0efj29jgqyL47K8P+Tmx5FtT9Zx0bbfufYOvuxB+M1fn6L1TStfNWqtzSto21yOb0PNyL2N2sim8bRtWe1IWg+GzGWvevtF2nb9mjdpPdPD+5eHrHdJGT8nvEHz/AaAgw43p78bs5e53QCQ7DLHGQB4e9nrRi2f5/05neHn2/K33zJq3bE22jaVNs9jAMikzXOioz1O2/bG+Xpkc3zZVVXlRq2snJ9vOaeHL5sMS8kEH48ffugJWh+KfJ5fE+R9LIkrLpc5fiX6eP9q7+B9t7y8jNZzabM/hsL8nPX4A7RuG6PzMNfbPFM+Hdzuj/Y5RX0dvwaGQub9CTvOAOB1873G1imbN6/x///CaTnW1W3Ugm4/bVtkueb2pMxpTgHAHTb7SyhgWbblXqG0NGrUOjv59SDdx8dQdlpl0vxejXRZAIDHax4Dv4/3idIifn8zrMo8Bzdv307b9qX5cSwp4edxNmNuZV9fF207Yji/P/T5zONrC+2975GltD4Y9z+6mNbZdSIU4GOOP8j3cd7D22cd81h5LaORx3IK+dhlzBKT5Xh538i4LO1JzZ2zXBAcfm/O+kDObRsPeNmGxYFZI8Isy87nefsc+QVb+JjtNVnfyeUs225btqWepdvO72m+ecrED30dfeItIiIiIiIiUkB68BYREREREREpID14i4iIiIiIiBSQHrxFRERERERECmjQ4WpvL3+b1mNtZpBLOc88gKuC/6AyV2y2DVXTtn15HqrRS0IIHBcP8YgnefhSPGEJTsqZX6Jv8/D0gKCXfz0/mzWX4bEElQQsYRLxZJ+5XEuQlCtZQessoyVDgt8AIOTlx6uXhJd15LK0bTjMA1Ncbh4O4SIhebCE2sSTPBwlmzHrHi/fp0PRbQl4qYiaYVhOVQ1t63h5yMmwkaONWi7Pt9ed5yFL+bh5TJKd7Xw9Ejzwa3glPw9H1o8xavVjGmjbuuEjaL262twnPp8lGCXKw57qR9SabbP8nEgmeQBQrNMMkGtr48fW67cNbuaJVVbBtyVYxNejq7uT1gNBc5zIO/x881n6eXdXzKilU7Yokd3vowZTiV0qzoOTOjato/WNK3j7rm7zunL4tGNp2xJL8KftPXwXCc35V+sJPhJGCgA5kniYJ/caAODy83uZVNYcB1gI2LsL4fcs0WJzbC2xBJ2le8y+AgD5BB9zwz4zQK40zENvw5a+FfGb9wRtlnu1vMPrwaA5LlZVVdK2nZ18HGaht3XD+PXRY4lpqq427w18lu1u3riF1v0+y3GMmscswg8jKkp5ECo7X/vi/JgPRd4SvuUNmMc6bQkL7OviQaK+Ir5wD+mLsITuslBIAMiSYLSc5T402cWv837SFwEgB/Pc77WEJ7tdfBmRIvO4OmS5AJC3BI/ZAh5Zj7YFnVny46zhamx/23LbbEGtbF1s4Wq2bcxbzts8WfZQAmP/1a6BIiIiIiIiIh8rPXiLiIiIiIiIFJAevEVEREREREQKSA/eIiIiIiIiIgU06HC1kNeShkC+499gCVFrrOGBDtVVZuBEyBbKZflSfCJlhkMlMzxow7Eswx/ioR/IkuC2PF92aTkPgcpmzGX4WdgDAEseADx+c2en0jwUK5Pl2xgmy/AW8fUIkrYAkHWZYRtuhwcNZC0hFZZsOkSKzP3X28fDwzIknAYA3GTZPd08WGhISIgbAKRTZj0e5+EzjXsNp/XePnMfpzP8WJdX8vPK6zPfVxs7di/a9rBDDqD14TU8GK20tMqoZby844YtYSIsh9BFwoIAINHHQ0ZS5BiEQ/wcLIvyIJym0ROM2ooV79C2cPFjnkqZfbS0pIy29fGcJHR1b6d1B2bfsYWUdHbyIJxE3ByvbOElhWALYZGBbPvJTdJqtm1spm3fXPwcrWcSfBz1Rcx+mrCMlyXl5rUasIcROS5zDPq09gTbvceH8XstwXNk35RV8lDUPtuxy5lBalnLGOqy9K1htea4WFvF16N5zVpar/Tya1BtnRl+6c7y/eG27F8W6FdRagbyAoDj4fcypSRMLEzuNQDA4+b7r6rGDGMLkuA3wH6/kXXM60dplO+74eS+EwA8lrt2r89sH/Dwa28+za/VJcVm2KuT+eghUjbdlut5hlzP21p5IOymzTto3RPkzw6RYnOcC7j5/rFkriHNAhEzvL/Ee/g2hiwBsnCb+7knzQPk0mm+gqNHjTVqY5p46G0oyJ/TbKFhtG7ZT47lB3lb6hop266Fu+NewjaWu23rbQmo+6j0ibeIiIiIiIhIAenBW0RERERERKSA9OAtIiIiIiIiUkB68BYREREREREpID14i4iIiIiIiBTQoFPNgy6e3FdcbC5ir+E8zbciZCZwAoAvb6Y193bwFOhcnr9XkIib6+e2pAeXRCO07rWkeMe6zGRBr2XPlRfzpMyebpJSnbQkECd5cjJLCowU8QTHTDpB6+6cueK+AN/uXI6vh5dEkqdIkjcA+C0Rzu4870+p3k6yIjzFMMC7E7IkfbGrj6fQD0U2yfexK2smhgb8PG21q62N1itqzTTxkRPH0LbV9XW07mP73pIEn8nyxPSVW3miaHxdq7kMNz9n33nrDVo/cLyZJn7UQQfStrYky26SHrth/Rba1u/jKZ5+v5nkWlnF0+Y3bFzNlxEkafwJfn53d/Nj7vVZUn1LzGUnLCnHOX5aIZs1z4lAwDJAFsBHTYT+V+NY0lMzJDV/y8b1tG1JmI814ShPgt7RaV7f2rdupm1r6kfSOtx8MGZnrYtNO/EZVlrC93uQpHVXV/OZF3a083E4SK7dXZ0x2ram0pyJAgAC5EIaCvG07uH1Zko5ABRZ70PMAckPPu4ELPdf8YR5na2v4/vJ8fHzx0/GunSaX68qKyyzhJDU6VSKj/HFZMwGgETK3JaeLnLPAyCV4snjFZW8P4WKzHs7r4svw5vmxyDZZ65f1nJvNxQvvrSY1ntJ2rkbvC8mUvyeIJnj54rPb9Y9lueJnGWISjpmf85ZkrqL/Px+I+TiDw9Bch7mLPdUfX38mLzy5utGbUcbvx8aPWoUrVdWmun9ABAKm33ascyukrNMzZS3zH7kYsehgDOhOJbkdtuMV+z+05b+Phj6xFtERERERESkgPTgLSIiIiIiIlJAevAWERERERERKSA9eIuIiIiIiIgUkB68RURERERERApo0KnmZQHeNERSNUuLeKpqVQlPJ8zlzQQ8nokHeLyWKGu3+R5CKm9J5bZEknstiXs5kkTpePh7Fjt2xPgyMuYW9cR5MnE8x5MMIyEzfRmW5EuPJR3XTRIYPQGevpjo40nXYZ+5Hl5LAmEyybclkeHxy3mSgxvr5esRi/Pj20sS7pOZ3f8eUyrOE00jJK22pJwnyu6/32Rarx891qj1ZPk+e2fdRlrvJv2rNxajbdtjPAl06zaeuFpSSrbHzZPj//anB2ndN8s8JlMPPYK39fFjXVtLEt0dnhoeI+nNAPDa628aNa+PJ+wWFZNzEECWJO+ne2O0rWXoQFVVOa3nyHjQ3sG30Q2epsvGvGiUp/dK4dlS+tn4DACtHeb52dKygbZNkbYAUBzkScbx3m6jtvINMx0XAGobm2g9WstnAWDJtLaw2s9q8n1lZQWts1TcdJJf62pqeYp3OGjeawU8/B5pWBW/BmUy5nWivW0HbVtsSWj3+viglk+b2+jz8uPsdvOOkYib/ZNM8PLuMoJ821NklpdUml+vApZZXnq7zetHUYSPt7ZU5/YO83oa8PFEeNvpkLasd08vSwTnC0l38/VLp83rrG3mnKGI9fIZYRzHXF8XnRsB8Pr580TYkhrucZt1W8J+0vIEkiWfVfZY7gMTfbwecPE+GnHMfuexPKH5AvwZK0nulddu5DNUrN+6jdajJfy+oH6EOdNOlWVsi5bxma28ltkvPOTZy3aNtGGTH+Ut/d+2bMfyDJinqeYfPXVdn3iLiIiIiIiIFJAevEVEREREREQKSA/eIiIiIiIiIgWkB28RERERERGRAtKDt4iIiIiIiEgBDTrVvCrKk6+LfWZKXdCSLOn28BS4UMhM6MtkeaqgPaXOTP5NZ/nr5UhyIwDkHV53SKqw4+VpiD1pnmSYy5n7JJ7jCXpZS72nz1y/zR389XxuvoySXnP/ZbbxhOREF09dH1k5xqhVV5uJhwDgKu6i9VQnT97t7TW3p6uHJ722dfFkzJaN5mvmbPGQQxAI8FTNjMdMfk2EIrRtczffhqX/eNmodbSbqaUAsHnLdlr3ecxjbesXqSxPn7el0g+rMvfnjm3raduSgOVciZlptauam/nrDaukdZ/PXI9h9bW0bZ2lvmGbmQr/zls8Kb56GE8GbtlAzqGMJSGTJP0CQM7Lx7yg30w7DXh530sk+TJKSshMBF6e3isfB1uqKj9+mzdtMmrNG8waAGxcs47WK4v5GDSi0kwt3rqBn8tvvbKE1g84OkrrYZaQ+9kML7dyW2YYSafM61rOklidtY3bSfMa7bVMm9Ad66B1F0lwdiyp3Ju3bqX10ghPOw+T+6TuFL8nsCUN+4PmGJ/J8nu1jGX/ucisN3nbPaaH1wMsRdsSbBxP8PXwB8wUdL9lBo1wkJ8oAcv1tIvMWNIV4/s6EuTJ1S6SiE/P4SFKWK6B7HpuGzCcnOV+HbzuIsfVMokE0hl+z5khq1cc5uNqTze/f+4mCfsAkCKzHPj9/FgX+/mKezxm+74s74uePB8nUm28z8Ri5v1nUYSnqw8bRmabAdA0ajStR9g9jmXbMxnLuU+6lAP+LJq3pJfb087NGktRHyx94i0iIiIiIiJSQHrwFhERERERESkgPXiLiIiIiIiIFJAevEVEREREREQKaNCJU3VVZgALAJT4s0YtEuZfindZwstYQoXL8uX3VIIHFrhJAENFMQ+FKCriQXHdXTxkrJQEE/Uk+bas38yX0Zsyv+Tv55uI4WF+WLw+M5ShpT1G26YcHirgI2kSpSU8GOWwCQfQevdWEsYS50kDpZU8BCoV59vY22u+FxTw8WXU1/L1rq6uMWrbu3lYxlCEw+brAMCOmHlOrNnIw7qWv72M1t0kZCSX4n0u0cMD9jwkkCeRMgPNACDWw+s9fTzQrWXTCqNWFOLHY1zTOFoHCXR74flnaNOGUaNofa9xexm1igp+3gdISA8AlJaYwR7uLA8Y6Uvx9yoTcTPAJBHroW1zOd4XgyHez3u7zeWUFJtjEgAELMGWaRIoGY/zsbQw2GC3qylbuyGVyxKI4rAfWK5BcPH1cO3S+9h8Gfm8OXYAPEyqJ8770abtPERru6Wey1UbtRHVfFtWLjFDHwGgunYYre914EGkys9Dt2PZr+yYWXa1ZRHW+4ld4vpon1O4LJ3O7zf3gy3cJ2sJkkolzXuCshC/V/O5+c7xus1xJ5nm44g/wO+d0ikewpnuNq9Nfksgky1IykUCfHOWwKhQkC87Q8a/4pIobRsM8m10ucz7np5efn3MpHlAm4sEqdleD5YQqRS51gBALm32T7+XB3+VlJdbXtIcf7r7dv91IkGCBQEglTG3wWUZb237zZZ5xcaGvCVdzVbvI/dDwZAlBI/0WwDIZXj7ZMo8l7MuSwiYZf38bvKa1mGLL8Pr5evNXrMnzvt/12rz/hAA2tr581ExCfsbMZwHNpeVldG6P8DOfct1Nsuvs1nLZSJLdmLOEoQ6GPrEW0RERERERKSA9OAtIiIiIiIiUkB68BYREREREREpID14i4iIiIiIiBSQHrxFRERERERECmjQqeblxTwt0puOGbUASWQGgHAgTOuphJnemLGku0ajPNGOpYGmc/x9hUyGJyqGIzwBckurmSK5dj1PPW7t4esdJ+WGEE8PPPXIybQ+Ypi5fg+8uo62XbxmG61n82b6qNfN0w17Yq20Hu8190dxMU9kRs6WSMnb+0kqc9jF22ZzfF+PrK8z16+DJ0wPRbS8ktbXbFxl1La2NNO2YR9PKO3q6zRqvd07aFtXnkcxxnrMxMlYgvd9b4Dv48oaM/EYAEJkxoDhjfvRtvWWpO3mNxYbNY+Lp+NmcjxBsrWt3ahNmjSeth0zdjRfv2FVRi1yyOdo2zdXbqD1VNJMWE35+HHJgyeS5x3en7dt22LU/AEzHRcASsv48QLMdOFEwkxRLRxb1uyuLGEXUs2t0bb8B+z64YAfD2t6uTXt3Kzbt4T/ZGRjo1ELW5Ltu/ssx9WSyr1sozmuhLy8f3mT/Px8+8Vnab1iuDnzQ9kIfh66svzYuEgcsa0v5C3XMkt5l1gO74dyu/l+d/LmSoWK+H1W0pJu7C8yE8xzffyaAhe/L6utMY9Rtt2yw8hMFABQ5Of9JUWuQaW1PFF7V2ZZqKwxx2wASPXy9fOQewgfSRgHgCBNRwaSCXNbAn7e1u3n95Jd5NhkMvza5rHc3yQtM+ogb15nQ5bkb68lQT6ZMfdfaxu/DxyKtGWWAVfOrOct9zd5S0q/VYCMIx5+bubdfN97ySmUSfPx1u/l+z4S4vs+njbvzbKWa1DKcnqmyBgacPPz3gNLernl+saeybLgfdc25m3r4PewW1Lmfdya9fxeq6qK33fX1dUbtUiEz7QTtMzO4LBUeAAZh6SaW+5JB0OfeIuIiIiIiIgUkB68RURERERERApID94iIiIiIiIiBaQHbxEREREREZEC0oO3iIiIiIiISAENOtW8uryC1hMdZhKf25Ke2RvnaYyJtJmW53XxdLm4JQGSvYOQIAmNABAt42mw6RyPCly3yUwV7ujm6+F4eWKhh6QnlgT5Mqq9PIE72GEmYo4tqaVtt5bz91S2x8xUwVSc76fXV5np3ADgzpopk5kivk9RaiamvrsQ3kdKS83k+2KS/goAyTTvT06626g1Vpnpr0O1du3LtL5y7RqjtmXrWto212OmTQNAcam5vuPGNtK2+4zfh9a3tpppm+tb+etV1fLj1NA0iq9fhZmevb2TL9tp44nuG0hqZWvMTLcEgPETaBnH7WUmmPf18pTRvCWE0kmb/f/tl8zEdQAYO24yrdcMjxq1l15+jrbdtt3snwCQyVhSbBPm+nV28jEiFDHXAwDyJEW2L86PV2EM/T1e1y4kU7OUcgCAZSzJO2bnyFgSnP2WRGCXdQVZKretKb/ulZWZSa5HHHU0bfvW0pW03tK8ntZzWXPb13j4rBjBRnPGCADIvbOar8uzLxi1g0/midShME+CZhNj2BLGbTnH2V1I1Wcp9MAu3Cy9z+ZWPgMK66NFKZ7gHCHXAwBIps1jF/HwxN7hw/iMMIGwub0ec1INAEBZmPf9aJi/ZnGt2W9Tloj5VWT2BgCIRs17ixSZ9QMAkmz6GAA+sk8y3ZbxNsVT4fPk3PT4+Pna28vH5yy5NNnuO6uifBag8hJ+HFf3mDPcVJTxtpZhBiUkVT+f4cnQQ5G1pJozOcsMR0nLPvay6HHwccTr5mM8mUgBAODzmT/w2kYGSxq77UIW8ZvJ+1nLZTNvqWfIa2ZzfBvdllkuHHJ/DwA5kmCe81jGVdu9lqW5i8w6kM3w9ejews/99VtbjFrAz8elcJifW0HLLAABcs33+SwzOWFfS/3/6BNvERERERERkQLSg7eIiIiIiIhIAenBW0RERERERKSA9OAtIiIiIiIiUkCDzgspq+SBKGURM4zB7eZfOo918y/FZ/p6zWXk+Lfz8+BfuHd85qZEIvyL8hnw+op1PEysL2WGEAWDAdo26Oe7NFRkfpm/zMNDI15ds53Ws2lz2alSHq5WVca30QUzqCSTNQPyACCe5iFVfXEzISGd5dvisgTc2VJwfG4SROTmSSA+S4hGloSjOJYAk6F46bm/07q3ZpxRaxo/ibYNpXl/Hj9hrFEbt9cI2jaX5PvHcZvHrw9ttK3Xx/uLxxOl9UzW7P99PR20bSkJTwSALDkmG3bwMSIY2cyXTYJmRjc10raO5X3GRCxu1Fb+cylfRoIfr31O+IJRm7TvaP56r/BwtbVrWmg9TEKnSqM87NKWatJNxt5UytzugmFpNbYkLOsy+DnskOAsa8iWw/vi6jVmOFgiwcPn9h5vBvoBQCDAz0O3LQmMyDt8GXlyqT7s8CNp2w3N/Fz57R2/pfUsCe/b0BqjbQNhft0bawnzfOf5V4xa1Qh+Xux9+EG0Hod5zHyWdCG/ZV93xHnAWSptXitY2BwAjKrhQZMfJmUJK+roMMfLcJxfi8st11Ef6RfBiCWILc7HnV4WSGbpsh7LdT7VwwPJqorNseud1TxsMxLkgUeRkHmPmUrxe5OyYeW07sqR8KY4X+eg5a64J2n2i0CAXze3bedBccib2xIpjdKmyQQfn7MZHiobCppjR3ERD8Pr6DHvuQEgmTL7X3GEhx4ORcrSn13k/M1bAjFtAZpZS99IkOudjwSaAYDHEjwW8JrtHRc/v122sdwSuuaQ9FfLpiOe4+dhmjwfuS33z2nLWOmzJMs5bhKq7LaETFvW2+2xpPq5SEi35WNh2518nlwT0gnez7v7LOlvliA6pMzlsL76rm9Y6v9Hn3iLiIiIiIiIFJAevEVEREREREQKSA/eIiIiIiIiIgWkB28RERERERGRAtKDt4iIiIiIiEgBDTrVHJakcpeP15lAkLcNw0zh9FreE3Bbou4yJM0vECqlbdu29dB6vI0nKo8uN5MrSfgjACBI0ssBYFzTcKPmtiwk6+H7iSUTez08rbXYz5NNK8qajFrT2JG0bfOGJbS+cpWZmuv38oRQx+Gpgtks73pur5nCaUuetKVD5kkkq8uSUjkUOzbyhPDP7XeiUQsE+KwA5ZaQx2F1Zvp8R4z3241reJp4Om8mELtdPM3R4+X7Mufw4wpy/HKWNFEnx5cdKa00au29PEnabenPeRqfacm95KuBSNDc14119bRt0MOX7YbZzyftw1OQo9Eorf818SStb9tqnvfDq+to2xxJBwUAH5n1obubpxwXAjtOLsthsqXVOpYkV3pqWxJHN27eQOuPPPY3o9bdzcfWw9p20PoxU6fReiBgnoe831q7KLLkHIoUF9O2J33pJFpf8w6fteOpx83ZGbozfF+v3LyN1stcZlozAAST5sF5aSHv594Knp7srokatb4YPzY+kgwMAFu7N9F6V4+5nGSSn0OjvngerX+Y6nJ+nLJJc8wojvDUeCfL03Y9XnP/hkI8ydqWNBwnqfbprCXV2RL5PX7cGFrfts2coSWV4itSWcWvkdmcmeKdh+Ve0pLono6b548nxMcIjyWpua/D7CtdlrT80hLzmgIAvWRGmFyep5QHLPfWGUuy/PCR5jWL3QsBQGc3vy9j91TRcn5chiJuOce87P4+b3lMsdz/Jfr4rEB+v7nvy2v4TDEhS+i1m1yDPLbzzc2Pa1dnO60nes3rccMoc4YcAOjJ8H7e2Wn2x0CAP5NkbMnylplR6DWLd0Xr9c02uZAf5r5yW2Z9ymZ4n86xmS4s9/0OmakKAPKxjbTevnkdWchHf6bQJ94iIiIiIiIiBaQHbxEREREREZEC0oO3iIiIiIiISAHpwVtERERERESkgPTgLSIiIiIiIlJAg041TyR5Qp8rw5KMeRpdXx9P0U1nzOf/rNtMEgeA3jhPdu4m9eH1fPOcLF9GQyVPy2uqM9Ml40nedvhe+9G63zFTHDu7+D4NRStoHe1mBHZ97TDaNNbHU/tG7z3WqJWU8dTDkrLxtN7Zau6/zi5Lyqwljdrt8PTWDEmltYRXImdJ3nWTQ2NLSh6KcKSc1n3kpWIxnoQcKI/SejxrbrQlCBShMp6aG8iTHZHkiZWOZSRIZuK0HgyZv+B28ZTMvJsvPFJhJnP7HZ7Q7gmV0brjN8+JvIuvsytn6Ysec/18RTypNBTh9WzKPCfaN/N01YoinhL7pS+eQOuvvNFi1HpJEjEAJFOttJ5KmON0tDhK2xYG6XeWxNFOS+prVyfvGy6P2c+3tfLzbfErL9P6q2+/YdS6O2K0bcqSBjtx0j60Xl1lpvd7SJ8DgO4e3ndjMXNdGkfwRN66EdW0fta3zqD1jZvXGrV/vvEmbZvq49MwrN7E087DtWb79mXLaNv4Q7SMpsP3N2qdvZaZSeL8HiPlitF6OmPO2pDP795rRSTA99n4JnM2kVCYX4vZGAUA2zZuNWrZLJ+JoijC+0Ws17yweFx8nHNZUrJ7uvjxaN1hzvyR4bc9gCWpvLfXTODOO3wh8Ti/7+ntNrexJMyvm2mSsAwAjoskWltm2SmxzDgQCpvH0evl/aO4mN8De9y8PUskb97AU5pdZPYYAPB7zGX3xC03HkOQsySzswlJygJ8xoQSywxCCbKPAQDk/sTXy2diCVpS/aurzXMoGeLHKZ213N8H+Xp7wuZ2hi3p+NEift9fW8nGM34DnbTcE8ct7be1mvczmb4YbeuznJ/eLO9Lnrx5bDIZPqZ4PXz/5WEeB9u9JxKW58gtLbSe6jS3vbfXMuPPIOgTbxEREREREZEC0oO3iIiIiIiISAHpwVtERERERESkgPTgLSIiIiIiIlJAevAWERERERERKaBBp5rnXJY05JyZTmhLkA4FeTphpNhMqdvSytMGmzfx1F4viZL2b99C2ya382WMreapmscebSaBr93ME3aLh/PE4sqKWqO2g6QEAkA0aklfzpvr57ckXO5o3Uzr3mDMqLXGzGRUANi81UwTBQCfzzxe0RKehJhI8L7gePl7Pi4SSZ4nSecA4HbxhFUXSRrN7f5QcwwbOWrQr59M8rTd7d38FPRHzSTkTNaSNOvj/TZB0mAzDt/vXi9Pmc96eJ2lbVZXxGhbp4Ofy2mSSu/K8/ULhfjYwbp/3uGJqbmcpR/5zIU4Hr4evX08DdNFkkADlsTbbst5HwrzlPyjDt3XqL2zdj1tu2w5T5fu7TbTfv0+nsY6NDzpk57D/PRFV7eZhAwAz7/4D1pfv2WTUWvrjtG2nZbj5yYp9sEUH4d3tNvW73lab2ysN2qBAD+vNluub5m0mfqaiMdo294eXvdZrvbjDxxt1JaueYu2TffwgXRTjI9vYb+5nSNKeb9rfuU1WvcEzPPIXcfPla4sT4XnV0kAjnncU6mPnlbLRMjMCwBQFDb7l8/Px/LSKN/eEDmHOtv5rABvr1hF61ky5gb8Edq2vIjPLrFlM7/faG8zz5Vklh//bksyOpv9wLHMdBKLddI6m4ggneKzE4TD/HiVV5Saq2aZmSGVtdwvk8T8RJJfHx3LWJq1JIKzfpuz3DuFSN+z8fr4fceQZPm+LyVJ81FLSvnmrRtoPUHGHABIkWcV1zZ+HR1VwWcAqK4fbtRWbuHPGQ6bVQZAuI8f79Ii87x4a6M52wYARGp5en8kYI4fzauW07Y5y7kcHWvebwBApG6MUetbv4K29fTy60GJw58p4r0xs9bDZybx+/jY1J00z9tQlD+PVbCBE0CvZUYDdq/C7vMHS594i4iIiIiIiBSQHrxFRERERERECkgP3iIiIiIiIiIFpAdvERERERERkQIadLhaNMq/0J71moEFvb1J2tbJ8KCHrp4uo7Z+Aw8g6iWBUQAQCprvIWxt5l/wrwnysIjhwxtoPVpnhmj5eizpHkEejjJiv4PMptt4IEkoywN2cjD3a18f39fDwjxUIJ0z19tVxI/tiKI6Wi+OmkFxPe081GnHdh70knHx/ZRMk0ARNw/0KQrwkJZ0wuwjttCaoXBcPIQlQ0LD4j08OCZgCQ3r6TbD+9JJHrYS7+bL9pFAiOIiHjxSVcbDe0rKeQhLVdRc75zXDJ8BgESAh8F0NJj9K5XjQX/I8NCkHAlpyVtCTXJufs66SLhatJwHj+RzlvUgx7y0lB9bv4v355glFMvJmP158njzHASAaDE/vn/725NGrXU7DwkbirdX8DAYr9c8/1hgGAB0xmK0Hus1rxMAsGGrOY6WVlfQtuWWY1JRaY6XrWt5X1yxjAeP/f2pv9N6aYn5mh4vHztSad430ilznF/4BB/7fZa30+tG8MCgcKV5bPabvDdt+/o/3qH1OPi5tardvI6HcnxMKcuawUoAsOalV41arIqP/R2Wc9yX5u2zbKyO83Mc3+blDzOilu93FnxVFuXjjsdyrfFVmu1rq3jf/99Fz9J6Pk/Gv2I+hm7byvtcTRnfv9FS894itoOHS7Xt4PcQ0TIzyLOIhCECQClpCwDFReb1rbiUX6+KIvxeIZsw13vdGh7O5fHy9YuTQLe0ZRxMp/j9sscS/Oki52AoyK8HOcv9VyZjhktlyNgzVO4cD7GqjZj9ZXsnD9nKWPqot5iPI25yDmUzPIyvYf+JtN5J9nG6zAwbBgCPiz9euUv4uRIj93E9luC9vCVYM5Uk9yGW19toeZbqa+X37A3RqFGrG8eD2GLLeZ/p28zPl87tZr27j69HLsv7f1fC7A+hMv4cVFzP69k4f2ZMJsx7b7cl2How9Im3iIiIiIiISAHpwVtERERERESkgPTgLSIiIiIiIlJAevAWERERERERKSA9eIuIiIiIiIgU0KBTzXtiPGHOmzaT+Hwuy/O8JQTO6zF/ELck2JYV80TUaJGZ3Jfo5Al11XU89XP4vlNpfdkmM3Vy1RqeRHnYMJ4OHYuZ7Wua9qNt3eCpqumUmXYedXiKa/cOfrxCaTNNcli5ZZ1zPBHTt6+ZpJqI8QTgFx77K61v2siT2z00fZynVyZ4ADAy5P0kN0nrHDKSqA0A3rxZL+XBkqgv5du29+ioUYsEeSKzx3K+9XXHjFoyzs+rUBHfP+PG8r5R3zDCqLl9fFaAXktKdf2wYebrNfME05JyvgPLSYqt15Iom7f0F4eMS8EinlSaJamhAA/e97n5cUmCp9NXVPLZBXpJynJfjCcAD6/iaZ2nnny8UXv40ado26F48eUXaT3R3WfUioJ8LD/ppC/Retbh49Grb600aqXFPB06kedpq3XVNUYts50nynb18fE5vponfpcFzH5QVMq3PWJJYQ0WmeN8aZRfUEtLeLJzSQnvX6GI2dePnnYwbdvVxsePZcvW0XouY45vG2KWNHYfT1r2bjPPuZ5Ofh5mi/kY6Q5V0vrmjeZ1q5v01aFwLNfoALnW2RKrM318nQIec/86bDoLALk8X7bbba6H9ROZPL9ONDSYM78AQCUZj0Zs5WnKgQA//iXkXPGQ7QaAHTv4TDGHHWzOKlNbx2dtyTq8f3a3m/csnW08Fbs9xo+X12NeKKoqebp63nLByud42nkpSQTv7OIznjhuvv/SCXPb2YwdQ1VewpPHKyNmPdbBZzgqt8wgFLD0fzaDQXXTONp29LB6Wn97gznORQP8fiOb4feH1bVRWneT63+f13LOFvPX7Gw17wsaqs17NQCI+y2ziuR43+3oNPu/e9hI2nbEhENoffMm81oNAMmEeU31Wc5xJ8fPCw8Zm1Ixfj/ZCn5eZC0zWrjJuGw5DQdFn3iLiIiIiIiIFJAevEVEREREREQKSA/eIiIiIiIiIgWkB28RERERERGRAtKDt4iIiIiIiEgBDTrV3BIwh1zCTKh0LCnUbvB0xJzLTGfttIRQd3fzRDsnZSb0DbMkxx54zDG0PmIcT+J7aP5dRq22iCfEetI8CXfzurXmMkZPoG2DFWNovcgxk/jiHTy1L5Tnqb5pkh7Y1sOT/KJVPKm0orbRqCV6eZKum5eR8/PkUBdJ28xY0iFdWR4r6HLMejY76K4+aFMPnULroyeYafVbNvO01eF1PDV8r7FNRq22qpq29Tj8fOvpiRm1VIYfa7bfASBSZElfjpgp4x4/TxT2kZR3AEj0mSmZ++/Dk9Eb92qk9QxJsnQs7ydm83z8ccjg5vHx/pJJWpJmSWKq25JI6gpaBlNL+xRJ5Pd6eKJrLh2j9SqSmHrEkQfy9RiCdS083bprh5n+O3bUWNo2FOJ9bssWPtatb95g1CJFvC9a+3+3OW4nYpY0X8u5MqZpNK03VZmpxcUkjR8AduywzOZRbvaNYfV8P/V0823083BtBPPm9beErDMAHPcFfu3ssMwgsn2TeczaUnxFwl2WWUhISrvXxc/D4cV8PC2qqaX1zS0tRi0d54m3H9WGjZtonY2tPT08UdiWnJyGOTbkvHxsCBfzJOl0gqQ9V/H7h4Cb3980jR7O25P1dvv4uem3pJqHQiR13XIOOgl+7FLd5n1qppRvS8Uw3vfdWbN9Qz1PjA4EeV/u7osZNb+fX2u8Ll7PWmZo8XjN8zhH7osBwGOZUcLJmjNuRIr4OTUUDbV8madNn2bU1q9rpG17kjwdP5Xk25xNmf28sY6ncjuWRHmn0hxHuiz3p31xvn4jKvl9XJbMftDbx++TnSCf4SPimOetJ8/vk2tK+XnYt4PPONS72byuZCxjeVENPy/qJh5J6/mMed3bscV8ZgKAeK9lfCbbWVLEZ/7wgp/7juUxIRM3l217zh0MfeItIiIiIiIiUkB68BYREREREREpID14i4iIiIiIiBSQHrxFRERERERECmjQiVOWLBPkSNCDy82f5y3ZQXASZBmWIJjyijCt14bN4IT9D9iLth1/GA9R69zBwxACWfOL/6NH8PCAvGXFa6urjFo2ycN74jEe1pDOmu0zCX4Ic+Dhb2s3m0Evby17hbY97BC+HhW1FUatu4cHH/n44UJlIw/3yJO+k0vzcIisJTikqzVm1FI9lhUZgin77k3rEz9nhqsl9jHD0gCgqJSHLLFe5LgsoYWWoK3yIjMIxLGcg7Z34PJ53p+zJEwMltCXVMoSyDPGDDYJ+Xm/SPTx0CnHTfq/JZTGsQxieces5yz7Om8JXUknzG3M5fm2uL228El+FHrazVCT9c0badvDj/gcrcczZiBJ2BbyNgR9Xfw4xZPm/gmEzYA+AOjq4ctYv7GF1qPkHMpZQmlcSTM8CAC2bltj1ra08WW4+TJmfeU0Ws/3dhi1p//xDG27/k0ewlhRaoZUbVvNj99wS2BQV2Y7rcNnjt3lFTW06aRx+9B6+lR+zt31u3uNWqKHH5stMX79hdfc9lSaj0u9be20XmcZZ/0kuKuyOsrX4yOKJ3h/yZNwnrQlMLS8iodR5UlgZDLJx+H6+npaX77sHaPms4xRw2rN+xgAqLKEsXnI/ZCPX67gD/A+FCbjhMeW9pvgIXqJbjPsrKOV37M4bt4/Q2S8ZOsGACXF/DrRHTfHAifHj1coyMOvXOR8AHgIbUmI3/fkLMe3JGwu28fzqYakxMP38aH7m2PXQRN5cF9PnJ9XGctNTiZrHpNsnN+bJCzXiVFpc13iKX7O9vbxZfsswa2dpI8GR/FjnUjx9XOilUZt87attO1qEkoKABPKePjbhlaz74IEcwJALsiDHCMN+9P6kU2NRq1jIw9Xe+e1V2l9xzZzHCtymaGuAIAUD7FM5vj2uMh9sHcIJ4Y+8RYREREREREpID14i4iIiIiIiBSQHrxFRERERERECkgP3iIiIiIiIiIFpAdvERERERERkQIadKp53pK2mUiZaW/+Ip6o7fXyOEuP20xjHFPLUzKDIf5eQWODmdi53xHH0LbDxu1L60sXz6f1kfXmutROnETb+qt4erU3XGrU4kme4proNhOIAWD7FjPJuHO7mVIOALmMmYQMAKFiM4WzspIfl41bXqf1mmFmsmM2zrfFsSS6uvp42mDOMZMgbWnUoQBfb3+tWe8O7P4E51ART62OBANGrShsOdW8PBmRhWe7bKnmtgRuxzw38xmeBsySvQH7DAVZkrvutuxix8WXEYmaSb3ZHF+/nCU9E3nzRR3wscptW8GcWc9ZxioHlukdsuYY5srz9QhYtsWX4/upKGm2d7bzxNTWdTy5esQ4cxaGNrclRXoI0pYE+zhJEV3TbCaJA8CfH36Q1v/x7LO07nLM47e9m29b63qeBu8j3S5jOX7+WnMsB4AXnnue1lPdZjr68tWraNu+7Xymi1iruS7RCp6o3LqNL6O7iye5lkXN9OR0jq/fM8+8RuuhEnOmCwAoqzQTctsyPHk8nuLrvZmkoDuW8Txs2UaPJcE6WmEeS49n0LdFg2KbdSKVNMeMgCWxOpXm19FA0Bwz3JYxPpfm52ZPZ8yoxXvNhGUAGDWS39+ELMcjEjbTjUvLeFp3JsvTvXM5cz95PHysrKzkaco7dpjbvpWlNAN4ddmbtD6GzMKxo5Xvpy1bW2k9C/M4Rkv4Ovvo3CZAIMDP+yy5l0gleXo4uWwCAMLlUaPW3bv7rxO9Hfz+b1PzMqM2Yvgo2nb4MD7zgpf0OQDIk9lOutv4zBWxGF+/inJznOsjszIBQDzBZ93p6+VjVE+vORaNaxrNl9FnSeUms6tUhcz7UQDwpfh6Tzn4MFrviJvtW7bxGUjSbt5HcwneH1FmzpZQty8/7lX7Hkfr2U7z3qdjxT9p2+ZlS2i9bS2/7rn95v52ey1Tbw2CPvEWERERERERKSA9eIuIiIiIiIgUkB68RURERERERApID94iIiIiIiIiBaQHbxEREREREZECGnR8p8+S9NnZY6Zn55I8MjEU5mmWHreZFFxdEaZtN26N0XrT/l8waiMmmbV38cT0TA9PCiwtNtMGq/aaTNv2ec2kZgB4+3UzRS+V4K/X3R2j9bbNG4yahyR+AkAwyI/X8FFmIvm+e42hbbMentrt80TNmp8nJHotqZrx9ZtpnaXnZy1vD/V6eDp0uMJc75o6nro7FMWl/Fg7JMU2nuLHyUnxtNoUaW9Lw0xn+LJTJLUym+VJjJkMP34Zy7LjcfO8j/fxNP5snr9mcbl5XhWXRmnbaHElrQf9ZgpwLs/XGS6emuyGWS8m6f8A0L6DLzuZMJNf83k+zrjAk4vzOd4XSorNVNKGkTzRNRHnfcTJm9tYWszP76EoJccUADLkHO62JCcvX7qU1rc3N9O6m1zGwpZUer+b73snbR5XN/h1bASZ1QEAyov58e6Mm0mzoxvH0bbrczxNN9ZhJoHnAlHadnufZcyN85T2WIeZBuuyjK1Jl2X94mtp3e03r/l5j+UY+Plrxkm6c84yjhWR1wOASCk/NiwdO+/w/fRR1VbW0nrAZ752OMD3TSjM+2KWXP99bEoMACVBPv41DTfHkqjlXq2uOkrrkQA/diVF5jiadPNl+/N827u7zPUOFvFl+ML8vN/Wao7PGzv4zC/vrOEzQ2zbYZ5X3V088TuT4fUJ44cZtUiQr3Muzq8HsMyK4ZCZSYJ+y7ItsxS5yH1+Nsf7zVBEQ/za09O+zahttdw/VNbyc6LU8qxSVBwljXkCusfF74eKSbcrjfBlOJZrTdZyT7Vi+UqjVlVlpn0DQDhsJuwDQJzcI+7XyK9XUw/Yn9YTWT5+xEk3GFvP+9H2dj6DwpZtfCaBbc3mbCMbcnw9kpbU+lDUnLklug9/Bpw87lBaH97MZzR488XHjFrrNn4/Mhj6xFtERERERESkgPTgLSIiIiIiIlJAevAWERERERERKSA9eIuIiIiIiIgUkB68RURERERERApo0KnmqQRPSg0HzEW4gjx10efm6YgOSU0MRfgyTvnqKbR+2PRjjVpJJU/+3b5uBa17LOsX6+kyaq0t79C2W3p4yt8zDz9s1CIhnjiZTPFEzNoaMzG4xJJM3LzJTAkEgDTZxvK6Rtp2r0lTaB05M2W5I7aJNo1bEu47E3xfuxyzPyUTPNWyl6R4AoDTa/bV8VHadEge/uvjtJ7zPW/UOjt5UmpvVxutk6B/mnQOANu382XnSLpteVU1bVtWyVPfA5aE0L6OmFFbtZqfV929vD/Xj2owah4fPydKivn6jRplpnuOqOcpwqNGW9KoA2YfLbYkzeZLS2gdJAU6Y0mD9Xj5+50esh4AUNNoJroHS8xzEAAylkRmFiRdXm7ZliGIWFLNvWScSrfzBPa2VXzsqo/wZbtIemyP5XqVtIzxrpCZvhxw8WtQ63aezPrqP9+g9ZpiM4W1vTNG23YleBpsLxkCE208FR6WNHavJU085DPHiSRJeQeA1liM1nNuywwTXjMG2OXm/d9tuW8ASTWHw1OH+/r4/uvu5vWyiih5Ob7/PirHsr3BkDlzi88yNvgCvJ7sMZOvMxk+BpQW8/N98mRzfGF9AgB8Pt6HvF5ez7FEajc/NwN+fq2JRMyx2G8ZK508X4aPHIPlK/k9XF+c9y3kzPGKzRwCAH4yswkAuN3muO24+Lbk3fw4dlvGiJ64uV9t53w6zcfBbMpcRtoy88pQDLNcJ1xpc392bN9B277x5hpaf30ZP641w+uN2pFTj6Jth1fx9Ut2mkn4HjLGAQAsqeZeL++jI+vMmRdClvuQgJ+PByV+MhtUMV+PTI7P9NCT4H06kTP76YrVLbRtZ6qV1vcfzVPae6vNfdK81Uy4B4AV6830dwB4Y53ZH3osM39UlvBZsybU8HvEA446zqi9vvjvtO1g6BNvERERERERkQLSg7eIiIiIiIhIAenBW0RERERERKSA9OAtIiIiIiIiUkCDDlfLOzxsBXkzAMKV5WFYWUsgistlBnkEA5YgkCk88CtAQpmWL32dtu3cspbWUyRYAgB6Os0wnY1rltO2vQ4PWvDlzGVHvDxMpiTIA9OqyszAh63beQBBNsP3dbzHDLra2LyBtgXeptXe3h6jFvTyMJZsgId5tWf58Q2RkKNwMd+nIS8PmOqJm6FD2TwPExmKvy96kdajI8YZNSfHA8Zef3ERrTeMGGHUKit4wNjmTZY+QM7NcHmUtk27+Tm73RLSd+xBhxq1yftOpG3jlvPK7SOBGhvW07arVvNz9q1l5jkeLY3Qtl+Z8WVaP3ziXkbN7/D3JEcMMwNaACBNwtVcbktojiUUMAMepuP2mvVA1DxPACBkCXLKe8zxm8e2DE3eEvrikGAWv8cSJGUJhxpZUk7rWRLs1WMJIPKU8L7h9pv7M7HdDNUEgFTMDNgBgJ52c1wEgLa8uZ2xFF9G4/770vq21nZzGZ18/SIRfv1IxnmYXcZnbnsyxcfLRIaPE25LXw+S/eq4+LUpx0LUAHhIGJE7y8+hPAvzArCjNUbrWdLVvP7dG66WzvB92dNn9gF3MQ/9ScR438pkzX0ZDplhfgDgsYQ9xdrNfpSyhKt19fLzyhbU5JB+5PPy/euzBPTFcyTciw8RSCd4EBgLAd62bSttm3L42JrymPvabwmV81iCAuNxc8WzliDDgJ8vuyvJj8G29k6j5sASWOjwY+BymesXIvtuqN58fQmtO+3m9b+0ggdyvfo2D9laaQn8OvwYM4D5DwvupW1PPvYIWi8LkmcVy/nm9VnO5SQf+6sqzHvlfICP5Z27EHjnslxnM5bPXV3kegAAa9abAcrzbppH27bt4AGkBx/C9+tJM79h1Kpr+XEvyvL+X5c1+/TbMX49yFtCVndY7j/HjjSDukePm0DbDoY+8RYREREREREpID14i4iIiIiIiBSQHrxFRERERERECkgP3iIiIiIiIiIFpAdvERERERERkQLahbhCSzpc1kxktKX55ViEKIA0zIS5mlKekvnEX/9G6+U1ZgJ3tS2BOM7TYH0+npIdKTITuL2WBM4ikq4OALXVZiJ1osdMoQSAkIevR3trm1HLpPk+LQ7yJPB0r5muvfr1V2jbrStX0XqKpQr6+P7I2fbTCJ7WiCKzP7kDPBU7aEkqL4O57eMnjuKvNwQzv3YmrQeqxxq1eA9PHl/91hu0PqzW7LtuS2J1KMgT4tN58zjttY+5bgBQNoynz8cr+Xl40vTPGzVb+nyfJdU8T4JVsw4fZ5JZvowdJD1zffMW2jYc5vtp2yYzMbrl7dW0rTvJ12Pdth1G7aDjD6BtGxrraD2T4/3ZHSTptj5+3rts6f0krdbv4vt6KGKW9OVU3Dyvi9J8bKiq5funfb25jwFgTYuZRNqa4cepvJwno7vJeNmX5+NzLsMTgbNxnjSbTJEkYzKTBwC0bjPHeADo6zWTcJ0MX0Y4wK+/6QTfJ66Aeb3JJvm2+Iv4uO3kLOdtyjzueTdf7zS5lwCAgM/s//6g5Vod5qn1IUs9Q/ahbZz9qNo6Y7ReR+4JWNI5AGTzlv5cYfbnnm7LMrK8niKp2nl+iLByTTOtuy1jCZu5YKRl/HNH+DFN9pnnT86SBJ5N88TjAFkP26wAqzbzZONRVcOMWnmxOdMMAHjL+bWmr89MRu/M8vXw+vnteY/lPO4k9bxldg6X5dbf5zKvH32WcW0oWi0zQ6z0tRo1zw7z+gwAG7byVPqjjj2a1i//0RVG7ZZbb6NtH33kr7S+93DznPX5Lfe4xbwP5HL82l1eap7LVeVmmjYAeMlMDwDgJ0n4bhdv22u530h7eZ+5/Y75Rm35yrdoWzZmA8Cf/3o/rY8YN8moTRprzjYDAKEAT10vccztqePDPrKWbewjs68AgJM2z4GG4SP5wgdBn3iLiIiIiIiIFJAevEVEREREREQKSA/eIiIiIiIiIgWkB28RERERERGRAtKDt4iIiIiIiEgBDTrVPM8iiAH4vWaiX9BrSct1WxLjPGZSaj5tpj8CQFsbT4fubTXroUw3bZsHTyEsLzMTCwEgWldl1LI5nvS4eQtfPwcsPZXv/nSWpw16XGZielGQJ9hmLYfAw35gSdjNpXnappv0he44TwBOB3jKaHEd3399oZhR68nzBNNkH3/fqKJktFGrJAmyQxXw89dftXKZUevusvQLh+/7DElt7e3to21dLn5eBQNmf8nEeep0Vytfj+0bNtL64088btQ6eyzL7uX9qLjETP0sLeOp00UlPPF20yYzwby6cjhtGyzhye3PP2puS8fqN2nbnGVcWrNtu7lufXx/jB3Pk+VLS/i5XFpmJueGwjzZs7SIz6rgC5pjXjjM9+mQJPjrg5zuWRdPPu3jwzO2uvgPtpIxrTdtGQDbeV/0+MyU3XieL8OxXAsTlnHbcUiivCX1dTOZuQIAsiQ13AW+Hq2dfCyGZZxwSMquL8RnKCghqbmAfcYSNr55LImyIfC+4yaJ1D7L/nNZ1s+xHEsXWbYtBfij2riFz7LgIzOB2FK56+traZ0lTneTBHwAyGb5GO8hM4/ELQnzK9aso3XbLC9bNprJ05XlfKaM0tIora9evcaosfspADjlxENpPeCY15qyaDFtG+rmY3x7LGbU8pZxhh1bAOjuNcf4vhS/rsctfcHtt6S/Z8gY4eF9OW85HzrJtbrSMlvJUAxvHEPrOZjXzIxlhgp/EY+sHlbPr/8Ouc+trxtB2z71lwdpvWeb2XfDIX48ApYxFJZxO+A1xz/bLA3hEL9XYNeVoJ+vh2OZGaI1we9b3l6x3Kh9/vPH0rb7Td6P1n/zWzMZHQAWP2feg42ujdK2/jA/t9q2mffYb6zmMzP5ivg+qSnhr5lLmNe3kOX+fzD0ibeIiIiIiIhIAenBW0RERERERKSA9OAtIiIiIiIiUkB68BYREREREREpID14i4iIiIiIiBTQoOM73S6egBcMmOlwDni6a5Elia+ouNKoxS1JhhXFPLXUS14z3WUmDQNA3s2XEffxpMeamlHmMkjqNACM25enJL646H/N9XN4+qjPkj6bIGmlJcVmWicA+L380HpcJAE4yfd181aejhuLmfs65eLJnFV78fd2hkd5qmDaMY9NZxvfT/4kT8EtGm4mmCfiPHV3KHraeVL503951Kht3LaJtnVneHLpm2+SRH5Lv8ha0pRBjvXf//Y0ber38fN78uf2p/W030yE7U7x47Ruww5ab29fYS43yc/BLdtaaL25xVzGAZ+bQtte/J3/oPWXX1ps1LJd7bRtd4qn8SdIyu66V3gi/POvmkm/AFDk5Wm6Pr+Z4ukJ8ONVbEk1H9HQaNS+9JXTaVu+9wbHS2ZeAIAMSbfuTfB92dHNZ6PoSPP2WZ851jlZnnyaTPCxzpUyx/OMw/ui25LgXFTKx2KPhxw/y/jsWN4Kp+ngZLkfVHdbZhVxk9fMsyIAt+01LTOZ5PLmuOvY1sO63ua62GZygIuvd56sBwCwodM6nn5EWcvMFe1dZoJ0iWW2AltSOetHtllb+hJ8GexQO3nLbCQhvuwdHXzZS99ab9SKQq20bSrJxz/A7Ft+MksDAKxYbb4eANSEzXtM21hZW2u2BYD29eb13uXl/XBHK9/GESPMe5OcZZaElCWFPm6ZLSNLlpOzHccSnpadzpuv2WebIWIIsuDnY468vj9geW7gw631XNm+wzwmbR38HnfTNn79d7JmH2XPQACQyVhmeqBVIECuY0VkZhoA8JDZpAAgFDTHj6Bl5qO8h/e7Da38uQmO2f7UL3+ZNj3ssMNofeNGfh/8578+YtRef6OBts0l+bNX53ZzPE23b6ZtvTk+o0E820vr6zrNe7lwgD9HDoY+8RYREREREREpID14i4iIiIiIiBSQHrxFRERERERECkgP3iIiIiIiIiIFNOhwNb+XP6PHSdiQJ1hE2+Y9PBAoTgKmPD4eQRDw8yADn898TX+4lLYtLeHrt80SKhAfbgamVdePoW0372ij9YkHHm7Uelu30LbrVr1N6329MaPm9fDwjFJL0I+LBJVs3czXY8N6M6wAANwBc/+V1PAAh6pyy3pYAt1cHeayyzp5Nx1eXU7rI6Lm8VqznAehHcOzIQZlWM0wWh/baIbxOWS/A4DXzeseEh7k9vBz0CGBJADgZ+ehj4f31NUNp/WjTziB1ovD5vEuDZbRtsuXvUHrq9asNWq1wxtp26QldcpDAhuXrVrJ12PVKloPN443alu28G0pi/J6td8M2ghH+FjVsY0HALVvXkPrrW3muJTM8WOesQT1bI2Z59Bhx1oCqoagt4eHk3R3m+GLfb187Orrs4wNltUtiZpjTCDErzU2LpIwFfLy8BSfny/bFmrmI6E5tnC1XJ6PByxczRbTY8nygscSmAaX+Qu5nC2MjAeP8fUDMqR9zrLetsAgL9lXttcLknAhgAcXAYBDQtcCluDCj6qsgod1lZD7kKBlPTu6eaBWiIx/mTQ/duksr3t9Zr/wW4KD0jkegLajg69fMmsuu7w4StuOGM33UyZj9qHunhht27KJh5r5q8yQKrfD+3IkzLfdVW2O/SUhfn/TG+MBkS3rW4xa014jads0CbMCgHSOj4/sFsMWxDbScl8WCprbnkrwMKuhaIvx8LJM1tw2r2Xcciz9+fU3l9H6pP3M2NDX33yLr4flM8m017ympzN83Nq6lT8LJFP8+LFAZB9fNGxXbp/f7Ofs+gMAOUt4aG+SX5fLK2uMWmWFGRYIAD2WgNTaYbW03tFpnrdPPvkYbZvs5UHO7e3mvUefJWzTa7k/8FjOubKaKqNWXcO3ZTD0ibeIiIiIiIhIAenBW0RERERERKSA9OAtIiIiIiIiUkB68BYREREREREpID14i4iIiIiIiBTQoFPNa6r4M3qm3UwnTOR4Wl4fD6OD4zbTCVmSKQCUlPAUPb/PTPNL9PFkvZAl5Q9pXn/lxReN2uhxPAF90yaenu12m2l54YC5zgDgsaS/h0JmCqotGTiR4PVs1kyojFgS/g773F60Hiw2EzGzHp4QmsvE+fpt5MmO7h4zlbY6XEzbfm6vibReHTXTF1/d2kzbDkVHawetH3LwYUbtsKlTadtAwJLkSxLM3ZZ0z7wlndIDc9m2xNtEmh+n9k18v3UkzXTbjja+P9aR9HIA2LLDPFci1XW0LQI8rdjlN1N901lzpgUA+Puz/6D1hqZJRq2+nKe8B918jAj7zHMoleSJsuu6+awFEXJeAUCOpO9u6+Tp4ZWVjbQez5h95OlnX6Ztz/3WmbQ+GG3kegDwfpdM8rTcdJrXfUE+XvpIEq9t/LPNDOB2k/OQ1QA4luTTbI6PgW4yI0gozMdclq7+/7+oUbIloNu4LLHwLmtGrike5+OELQXdS661DrkWAvZtZ+ttSzW35v1amgeDZkrx7k4177Hss3zeHEPraqppWz9JLweAeMo8V4rClplEvPwYuTzmzvH5ed9ykZRyAIgn+LL9IXPcjlREaNuMm58/Wa9ZD0b5/sh7+RjR02seg7GjG/jrbeNja7bPHFO6evk1b+yYsbS+aeNqo5axpHO7LLfnvd2W/kQ+R4uQ2UferfPk9r4+c9key/3XUORclv7lMder13L+JHr5cdrWyq9BN99yq1Fbv4bPMNJruU9as9lM37bNKmMbEzOW5yNXjswQZfls1DZmu8h56Lj4eWUd9S1ja6jIXL92y/U+QGZ5AYDuLv5MlkqZ69jSsom2dVnOF3KLAyfI+7/t6uH38fUuCphjVryPr8dg6BNvERERERERkQLSg7eIiIiIiIhIAenBW0RERERERKSA9OAtIiIiIiIiUkB68BYREREREREpoEGnmo+s52lvpS4ztXLNRp5CuL2VZ8mlc2aKaCTCV60v3kXrubyZcGhLBOywpB729PL0v2TGfE2Pw9ejOFJG69u3memXm/p4snfekppbU2UmurtIMioAdMY6aT1QZO7raClPrfRbEoBTLPHRkibal+LLSPfy9kV5s/2Y+lratq6WJ9xv3GQmzre38j45FEWWZOL2bvO4vv7mq7RtdTXvLzXVlUYtk7Ec684YX8GkuR5eS38ZPoqnideX8b6xedVWo9bXy9PEq2v48QtXRI2aJ8gTeeMJfq4MGzbSqG3bwtMw29r5OTuszpxuwWVJ9uxN8f0Hr9kXMnmeehkgsxMAQMCSOp1uN5NU4ebnT83wRr4Mkn5sDYYegkyGJ5LDMc9rr2XMsIVKB0JmAjUAGs/qslzZPB6eVM6CaXOWcdiWVuuxpKB7/Gbd7ePjot+yT1iKt2097InfHOumthkUotEordvGphRJqM+5+PrZUtfZ9mSzlgTsrOX8zFnqJN/Wtl8/qnART9bNkRlGUpb96PXxvuUjKby2Pm77nIUNJV7friXmpyzXFZfXXJdwKb+X7Onhs0CEyHnfaplRxOvl16uykLnt4Si/1kSCfEaEmqpSo9bm8PuscJifx9XV5j1LTzdPerYEa8MyKQBKSqNGrbiEj5ndXTFab2trM2qOm6fQD0V5RbnlJ2Z/SfTy6ZBSRXy93C7ez2PkPqmiis8iUFpeRetZcqHIO/yal83w+6GcZezKZMwDns/sWmJ6ilzn87brgWU2HLdlnIiRfvrCiy/Qtscccwytv718Ba2zzUlb0uLZbD0AkCfH3ZYgn7Pdx6X5a25cv9Fcj8BHT/vXJ94iIiIiIiIiBaQHbxEREREREZEC0oO3iIiIiIiISAHpwVtERERERESkgAYdrlZSxsMiEiS0qqzaEu5hCRlp226GECRJKAsAeP08EIM1z5OwAgDI5HjoQVeCB2UUhcy0n2Schz0lkmY4BQCkybrkLOvnOHz/9Xab+7rEEp5RUmIGgQBAImEuo62db3ckwkOgXCR4x5XloQR+L1+/gJnJ9257EkTUOKaRtk3E+Ws+99xyo/bmqh38BYcgYAmgSSVjRu3FF/+XtnUyvB+VhM39lslYwv8SPAzGS95Xa2isp233OWQCrTeN5KFrsY1mgNm2Tt73/eT8AYCmCjN0rbXVDEkEgEnj9qH1iZPGGbX/94ff07Ze8FCfDAk5TKf5cXGylsSboHlsPJaUsMZRo2l9x8Z3+LJJaFeIhCQCwPjxe9F6Mm7u1/phPFhmKCoqeOChG+b1I5fj528mawlEsYRyJZNm/3d5eAKRyxK8k8+br5m2BLN48rbwKo6FXeUdy7XJsu0uliBnYckoQ94SVpMlfTpvOTYeEpb17jIsgUGknsnztm5LKBgLXbMFyNmCxdwkRA3gIUWsLwxFMMTHHbfLrCfS/N4kYOlzoYC5DBf4/vVbAtpAzpWSUh5+lezmAZVpr+V+LWDuy4RlbPV4LOMz2SXpBD+eWy33X+XDh5vL3crvCUKWcSZYbO6/qlI+hra1b+DrUUruXy1Bmb1Z3hfGDePX5Dy5b4zHeYhUvI/Xy0lAm+W2Y0hy4OcYO/e8pI8DQCDAnye8Xv5YU1ZmBtbCcj23jZVsjMqmeXBvPsfPiZzlusK23ZaLlrUclN4+8zqfSvF+ZAtCzVn2CVvO3x59lLZdtty8BweAV159jdZd5BzIWa55WctOyZGwOMdyPc3nLOGctAq4yT1Y0LEFdn44feItIiIiIiIiUkB68BYREREREREpID14i4iIiIiIiBSQHrxFRERERERECkgP3iIiIiIiIiIFNOhUc2+QNw2WmImD5RH+PO9N8HQ9X8hMnuvutKxaji87FDTTJXOW1OlcKkbr/jB/TZ/X3EaPhycqpkiyHgCkSYKg41iSdy1Jhg5JA83xgFD4vDwpE34zDTnWyVPNE2me2lcaNZM5vSTpHADcZN8BQNySH7i9rceodfbytj19PGH1qWdWmsvlwZNDEicJ8QAAsi9OmH4SbZpP99G6h6RW5i1pmI4lyddD9n3QMrPAthhPRu+JraL1joS5fq4gj6p/Z+k6Wm9f3GrURo8yU8oB4MAxY2k9nTBPgBDp4wDgZCwJr2QZbg8fC/KWxOgES2O1JGc2jOCp5snedlqfUGLOLvDyq6/TtlvW82T0RJ/Zz5w4P++HoqSEzzqRz5Ed5/AxI2UZd7pJMjsAeElas8eS4MxSrN/9gVnyWca0rCX1Om9ZNk0wt6SruyzXBFhSdnlT3tY6fpD33/O261iCJ+FmLOdWnqWJu/k22raQpv1aWoctY5DfksbuJonptlTkj8rv4cc6HDbHYlv/9LAOCsBDEslzOX4ssll+7Byyfj09fH8lurt3af2C5L4xbUlkzpBrCgDEu8z7RttsKcXlUVpn9z2ZOL/mefyWGVpIurbj432l2DLbTID0w2h5FW3rdHfQusvN93WyxxzjE3HLcSF9D+AzCFijtYfA5eL9y+cjM+ZYZqgAu6YA8Pks975kMxzLFBAByz0VmzLCbxkuXOBjkS2RPMeuK5Z9b5sBoqLSnI3ANhuOYxnj7anrZl/q6+P3wNu2b6f1xsZRtN5DUvbjltl6bFcKlnbOks4BwLFcw2371U3uBdyW69hg6BNvERERERERkQLSg7eIiIiIiIhIAenBW0RERERERKSA9OAtIiIiIiIiUkB68BYREREREREpoEHHd/b2WpICPRGjFCniUdu+EE+jKwqY6X+lpTx1rrebJ931dpsper2WRMdMkteL/RW0HiQpidkUT2j3evl7GX5S9gV4gp7LkngbjpiHy205gllLorI/ZP5CSZQnXHZ0mAnjANBDkgJLyvm+i1uSVFe38ATnlW9tNGo15TwpuWYEX2+4zfWrLC3mbYegKMIT20tJNy+u2ou2TVn6UZC8J+Z38ddzQpYE1bDZPp/kydA9PZa02jDf99VNUaPWFG6jbVc3r6V1kGRTX5gnkm/euoHWKyrLBlUDgHSCJ8inUmY6fl8fH8NSlmTtTMpM9/QGef+sqeMptuu38iTQ7RvM/Zfs5Yn+a99eSusVFeZrOmVmAupQuSzv5brIVA3pDO/7yRQf4zNkZgiAJ5HaZllwLImt6aw5Xqay/DrhsqSZumwzO5AkXJaSCgD5LL9GsqotU5VvoT3Bl6XpOi5L6qvXkiTssdwf0PWw1C0JvrmcWbeGvFtSbN2Wayprn81Yku8/oiLLLAtecgRtn4QELWntvb3meOSxJPP6A3w9QmSmC2tbywomumK0XlM90qglLQno0SK+jb4qkiZu6eQZ8DGF3Q+FIuZsEQDgI9dNAPSEy1jOqcoq874YAPx58/7LY5mBJkDuiwHAcfg2hsPma4Zs22LpIwmSJM1qQ+U4/PUdMm2IyzLSWXY9nQUBsKSdW2Y7oOnu4GO5bRkeyxjvswxebGYI6ywctjGULNvj4v3L9oxgC3Rns3yEiqO07fCRvN/lLdueSJvbaUtjtx1fF5mdwXZNsS3DNnay42C7dx8MfeItIiIiIiIiUkB68BYREREREREpID14i4iIiIiIiBSQHrxFRERERERECkgP3iIiIiIiIiIFNOhU803reT0VM5MXi6t4Gl0wZKb2AUApCYAsL+er1ttnpgcDQCxm1jvbebJeJw/UhifPE+3yJBnPmjaY53X2DoctHdfj5dueyJHUPr6r4cvzfZ2Ndxi1XILv05wlbTPWa7YnoYQAgA5LCn3LGn4QYu1m8nS6jy+8trSW1sc3DDdqltUYknjPKv6DvHmcfC6ecrp9O0+nXr28xagFvTy93F8apfXKajPdu66ylLa1pUBXlPK0ehYOnUx00rbV1TwZfXidmaq9dds22nbVqhW03pgeZdRsaZM9PXxfx+Nmmnh3F095t6Wa59JmB/MEeGru28sqaT2d4qnd1dU1Rm34vvvwtlVmWwCorDLPlaBl/YbClhaaIttmSylPp3mivG3/pEn6ad4Se2xLyGVppkFLsrPbkmKbI8noAE9WtSazui0puywB23LO+m2xtBbJpLm/s5ZtsSX12tJg2bbbzs94nA/SLGHYlvJtW79smr8mSzsPBvlx/6h8lmRdN0kV9nv4td/Wb1kfsPUtP0t1Bj/W+bzlHs6yf0uL+fWN3eIE/Xy2h7zlJiIcMdtnLGNB0nIvw2YoCPv5vvZZUuj74uayg8X82pZI8/2XIOvtc/hx8VjGAreH931ye4h4gveFWIxfq1lf8PstyehDkLbMLMTOdRJWDYCnbAMfkFhN7qtdlrHcofNIAHlSt81C5LakiftCvO54zHv2gG3jrcz9Z0v2to3xmTQ/t9g11baMeJofA9tzUzJrbrstWR4eXnfIsh3bWGjp017LsxcTDltmVRoEfeItIiIiIiIiUkB68BYREREREREpID14i4iIiIiIiBSQHrxFRERERERECmjQ3yTP+XggUMZ/gFFL5S1BJtk2Wg+Wml+Wj1bxAIkyN/8yf3nc/BJ9rIOHUcXaeKBCoo/vjlyWfBHfsQQ7ZPmX+ZMJM8DG9gV/jyXwoSdpLjvRy4OIfA4PSCh2Fxu1vJsHSWUyfH8EisywhqCPB5JE/Xw9RiNK65P2MwOfxu27H23bOGYMrR90iBmCsmkLD8UairwlBMpN3s/yZvgxLfHx/vLqS88atW3b+fnjsuz7gw6aYtSOONQ8XwGgq4sHj7352j9pvY8EMq3asJG2XdfSQusJElbjODw4I1hSRevd3T1GraeT76e+bh4ow17RawnwKC3mgRp1o8yQt7KKYbRtdR0PBaz73CRaLy8xzwlbgJYt5AouUreMYUORyfBQRxakZgtmgSUMxhp8QkKILLEs1v3DQqocS/hlxrLetvVjgTIuS3iPx8ODd9xsGy3hM7YwnV0JmrEFt7EgNsB+LH0k0GtXjgHA95/t9fyWYLRwgJ+3bA9aQ30+opCfH1O2XY4lnNXWL0pKzHAva3CfZbtY0JZjCVcrDfF7qoglqMwhgbWJlCVYK28JtMqY43lxEQ9zs3R9sFfsswTu+TJ8XycSZvusmwcCtnWZ1yUA6G0377WiUX5v3d7Hr1fBED9PHMc8Bp0dPGyuh1x7ASBEji+rDZXtOs/OyBwJxnu3Ka8HLKGY7NqUy/Hrlc9yzrJzywvL+U1CPwEga+mjNITTcp1wW65N7Bx3WcZVX8ByD+HjzyVs2bawNNsYlCEhagDgJuNN3rLsrKXuIX0qvwuBpx9UZ2zXq0H97kf+TRERERERERH5UHrwFhERERERESkgPXiLiIiIiIiIFJAevEVEREREREQKSA/eIiIiIiIiIgXkcnYlxk1EREREREREdok+8RYREREREREpID14i4iIiIiIiBSQHrxFRERERERECkgP3iIiIiIiIiIFpAdvERERERERkQLSg7eIiIiIiIhIAenBW0RERERERKSA9OAtIiIiIiIiUkB68BYREREREREpID14i4iIiIiIiBSQHrxFRERERERECkgP3p9hjY2NOOmkkz603TPPPAOXy4Vnnnmmv3bWWWehsbGxcCsn/3KuuuoquFwutLW1fWC7xsZGnHXWWUN6raOPPhpHH330kJYhsjsMtt+LyIc7+uijsc8++3xou5aWFrhcLtx9992FXykRkUHSg/cuuu222zSQi4iIiIjIp9KWLVtw1VVXYenSpXt6Vf6lePf0Cnza3HbbbaisrBzyJ3KfJEcddRQSiQT8fv+eXhURvPPOO3C79Z6giIh8NA0NDUgkEvD5fHt6VUQ+kbZs2YKrr74ajY2NmDx58p5enX8ZursVuN1uBINBPezIJ0IgEPjQm6W+vr6PaW1EPtkcx0EikdjTqyHyieJyuRAMBuHxePb0qoiI9PtMP2mtX78eF1xwAcaNG4dQKISKigrMnDkTLS0tA9rt/A7e+919991wuVz97RsbG/H222/j2WefhcvlgsvlGvA90nXr1mHmzJkoLy9HOBzGIYccgkcffXTAMnd+n/q+++7D1VdfjeHDh6O4uBgzZsxAV1cXUqkULrnkElRXVyMSieDss89GKpUasIxsNotrr70WTU1NCAQCaGxsxOWXX2602+nJJ5/E5MmTEQwGMWHCBDz00EN0nd77HW8mn8/j5ptvxsSJExEMBlFTU4M5c+ags7PzA39P5L3a2towa9YslJSUoKKiAv/+7/+OZDLZ//P3f8d753n47LPP4oILLkB1dTVGjBjR//M777wTTU1NCIVCOOigg/D8889/nJsjMiixWAxnnXUWotEoSktLcfbZZyMej/f/fLDj+s7sjieeeAIHHHAAQqEQfv3rXwMA/v73v+OII45ANBpFJBLBuHHjcPnllw/4/VQqhblz52LMmDEIBAKor6/H97//fev1Q+Tj1NPTg0suuQSNjY0IBAKorq7Gcccdh9dee21Au+XLl+OYY45BOBzG8OHD8Ytf/GLAz9l3vM866yxEIhGsW7cOJ5xwAoqKilBXV4drrrkGjuN8HJsnslts3rwZ55xzDurq6hAIBDBq1Ch8+9vfRjqdRkdHBy677DJMmjQJkUgEJSUlmD59Ot54443+33/mmWdw4IEHAgDOPvvs/mcafZW28D7Tf2q+ZMkSvPjiizj99NMxYsQItLS04Pbbb8fRRx+N5cuXIxwO79Lybr75Zlx00UWIRCK44oorAAA1NTUAgO3bt+Owww5DPB7HxRdfjIqKCtxzzz045ZRT8MADD+DLX/7ygGVdf/31CIVC+MEPfoA1a9bglltugc/ng9vtRmdnJ6666iq89NJLuPvuuzFq1ChceeWV/b977rnn4p577sGMGTNw6aWX4p///Ceuv/56rFixAn/+858HvM7q1avx1a9+Feeffz5mz56N+fPnY+bMmVi4cCGOO+64Xdr+OXPm4O6778bZZ5+Niy++GM3Nzbj11lvx+uuv44UXXtCfdMmgzJo1C42Njbj++uvx0ksv4Ve/+hU6Ozvx+9///gN/74ILLkBVVRWuvPLK/k+8f/e732HOnDk47LDDcMkll2DdunU45ZRTUF5ejvr6+o9jc0QGZdasWRg1ahSuv/56vPbaa/jtb3+L6upq/PznPwewa+P6O++8g6997WuYM2cOvvWtb2HcuHF4++23cdJJJ2HffffFNddcg0AggDVr1uCFF17o/718Po9TTjkF//jHP3Deeedh/PjxeOuttzBv3jysWrUKDz/88Me5S0QM559/Ph544AFceOGFmDBhAtrb2/GPf/wDK1aswP777w8A6OzsxBe+8AWcdtppmDVrFh544AH853/+JyZNmoTp06d/4PJzuRy+8IUv4JBDDsEvfvELLFy4EHPnzkU2m8U111zzcWyiyJBs2bIFBx10EGKxGM477zzsvffe2Lx5Mx544AHE43GsW7cODz/8MGbOnIlRo0Zh+/bt+PWvf42pU6di+fLlqKurw/jx43HNNdfgyiuvxHnnnYcjjzwSAHDYYYft4a37F+B8hsXjcaO2ePFiB4Dz+9//vr82d+5ch+2K+fPnOwCc5ubm/trEiROdqVOnGm0vueQSB4Dz/PPP99d6enqcUaNGOY2NjU4ul3Mcx3EWLVrkAHD22WcfJ51O97f92te+5rhcLmf69OkDlnvooYc6DQ0N/f9eunSpA8A599xzB7S77LLLHADO008/3V9raGhwADgPPvhgf62rq8sZNmyY87nPfa6/tnOdFi1a1F+bPXv2gNd9/vnnHQDOggULBrzuwoULaV3k/XaeZ6eccsqA+gUXXOAAcN544w3Hcd7tt7Nnz+7/+c7z8IgjjnCy2Wx/PZ1OO9XV1c7kyZOdVCrVX7/zzjsdAPQ8Ffm47ez33/zmNwfUv/zlLzsVFRWO43y0cX3hwoUD2s6bN88B4LS2tlrX5d5773XcbveA65TjOM4dd9zhAHBeeOGFj7SNIrtLaWmp853vfMf686lTpxr3cKlUyqmtrXW+8pWv9Neam5sdAM78+fP7a7Nnz3YAOBdddFF/LZ/POyeeeKLj9/s/8NwR+aQ488wzHbfb7SxZssT4WT6fd5LJZP8zx07Nzc1OIBBwrrnmmv7akiVLjHNECu8z/afmoVCo/78zmQza29sxZswYRKNR48+Whuqxxx7DQQcdhCOOOKK/FolEcN5556GlpQXLly8f0P7MM88c8AnxwQcfDMdx8M1vfnNAu4MPPhgbN25ENpvtfx0A+I//+I8B7S699FIAMP60va6ubsCn7SUlJTjzzDPx+uuvY9u2bYPevvvvvx+lpaU47rjj0NbW1v+/KVOmIBKJYNGiRYNelvxr+853vjPg3xdddBGA/+vbNt/61rcGfF/vlVdewY4dO3D++ecPCAY866yzUFpauhvXWGTozj///AH/PvLII9He3o7u7u5dHtdHjRqFE044YUAtGo0CAP7yl78gn8/Tdbj//vsxfvx47L333gPG8WnTpgGAxnHZ46LRKP75z39iy5Yt1jaRSARnnHFG/7/9fj8OOuggrFu3blCvceGFF/b/t8vlwoUXXoh0Oo2nnnrqo6+4yMcgn8/j4Ycfxsknn4wDDjjA+LnL5UIgEOjPbMrlcmhvb+//6tHufvaRXfeZfvBOJBK48sorUV9fj0AggMrKSlRVVSEWi6Grq2u3vtb69esxbtw4oz5+/Pj+n7/XyJEjB/x754PC+/88trS0FPl8vn99169fD7fbjTFjxgxoV1tbi2g0arzOmDFjjO+v77XXXgBgfNf9g6xevRpdXV2orq5GVVXVgP/19vZix44dg16W/GsbO3bsgH83NTXB7XZ/aH8cNWrUgH/v7OvvX57P58Po0aOHvqIiu9H7x/yysjIA7/7Z7K6O6+8/FwDgq1/9Kg4//HCce+65qKmpwemnn4777rtvwEP46tWr8fbbbxtj+M5rgsZx2dN+8YtfYNmyZaivr8dBBx2Eq666ynigHjFihHFfU1ZWNqi8GbfbbVwfPso9kcie0Nraiu7u7g+cyz6fz2PevHkYO3bsgGefN998c7c/+8iu+0x/x/uiiy7C/Pnzcckll+DQQw9FaWkpXC4XTj/99AE3IyxYDXj3naJCsSVt2urO+4I/bOtcKPl8HtXV1ViwYAH9eVVV1ce6PvLZMdi+/N6/YBH5tBnM2D6UcyEUCuG5557DokWL8Oijj2LhwoX405/+hGnTpuHJJ5+Ex+NBPp/HpEmTcNNNN9HlKhdB9rRZs2bhyCOPxJ///Gc8+eSTuOGGG/Dzn/8cDz30UP/3twd7nyTyr+inP/0pfvzjH+Ob3/wmrr32WpSXl8PtduOSSy6x/jWUfHw+0w/eDzzwAGbPno0bb7yxv5ZMJhGLxQa02/nJQywW6/9zPcD8lBqw3xg1NDTgnXfeMeorV67s//nu0NDQgHw+j9WrV/d/mg68G+4Wi8WM11mzZg0cxxmw3qtWrQLwbjruYDU1NeGpp57C4YcfrgcgGZLVq1cP+MRuzZo1yOfzu9Qfgf87p1avXt3/p7LAu18raW5uxn777bdb1lek0HZ1XLdxu9049thjceyxx+Kmm27CT3/6U1xxxRVYtGgRPv/5z6OpqQlvvPEGjj322I/9zVuRwRo2bBguuOACXHDBBdixYwf2339//OQnP/nQ4LTByOfzWLduXf+n3MBHuycS2ROqqqpQUlKCZcuWWds88MADOOaYY/C73/1uQD0Wi6GysrL/37oG7Bmf6T8193g8xjugt9xyi/FJdlNTEwDgueee66/19fXhnnvuMZZZVFRkPLgDwBe/+EW8/PLLWLx48YBl3HnnnWhsbMSECROGsikDXgd4N2H9vXZ+gnHiiScOqG/ZsmVAIm53dzd+//vfY/LkyaitrR30686aNQu5XA7XXnut8bNsNkv3iQjz3//93wP+fcsttwDALt9UHXDAAaiqqsIdd9yBdDrdX7/77rvVH+VTZVfHdaajo8OoTZ48GQD6pwqbNWsWNm/ejN/85jdG20Qi0T9bgMiekMvljD+Fra6uRl1d3W6d7u7WW2/t/2/HcXDrrbfC5/Ph2GOP3W2vIVIIbrcbp556Kh555BG88sorxs8dx6HPPvfffz82b948oFZUVAQAul/6mH2mP/E+6aSTcO+996K0tBQTJkzA4sWL8dRTT6GiomJAu+OPPx4jR47EOeecg+9973vweDy46667UFVVhQ0bNgxoO2XKFNx+++247rrrMGbMGFRXV2PatGn4wQ9+gD/+8Y+YPn06Lr74YpSXl+Oee+5Bc3MzHnzwwf6gg6Hab7/9MHv2bNx5552IxWKYOnUqXn75Zdxzzz049dRTccwxxwxov9dee+Gcc87BkiVLUFNTg7vuugvbt2/H/Pnzd+l1p06dijlz5uD666/H0qVLcfzxx8Pn82H16tW4//778V//9V+YMWPGbtlG+Wxrbm7GKaecgi984QtYvHgx/vCHP+DrX//6Ln9C7fP5cN1112HOnDmYNm0avvrVr6K5uRnz58/Xd7zlU2VXx3XmmmuuwXPPPYcTTzwRDQ0N2LFjB2677TaMGDGiP/TzG9/4Bu677z6cf/75WLRoEQ4//HDkcjmsXLkS9913X//c4CJ7Qk9PD0aMGIEZM2Zgv/32QyQSwVNPPYUlS5YM+MvFoQgGg1i4cCFmz56Ngw8+GI8//jgeffRRXH755frKnHwq/PSnP8WTTz6JqVOn9k8LuXXrVtx///34xz/+gZNOOgnXXHMNzj77bBx22GF46623sGDBAuO+qKmpCdFoFHfccQeKi4tRVFSEgw8+mGaIyG60x/LUPwadnZ3O2Wef7VRWVjqRSMQ54YQTnJUrVxrTFTmO47z66qvOwQcf7Pj9fmfkyJHOTTfdRKcT27Ztm3PiiSc6xcXFxpRFa9eudWbMmOFEo1EnGAw6Bx10kPO3v/1twOvsnLrr/vvvH1Df+Vrvnx5g51Q0753mIpPJOFdffbUzatQox+fzOfX19c4Pf/hDJ5lMDvjdhoYG58QTT3SeeOIJZ99993UCgYCz9957G689mOnEdrrzzjudKVOmOKFQyCkuLnYmTZrkfP/733e2bNlitBV5r519efny5c6MGTOc4uJip6yszLnwwgudRCLR3842nRibOsNxHOe2225zRo0a5QQCAeeAAw5wnnvuOWfq1KmaTkw+EdgY7jjmdJW7Oq6/3//+7/86X/rSl5y6ujrH7/c7dXV1zte+9jVn1apVA9ql02nn5z//uTNx4kQnEAg4ZWVlzpQpU5yrr77a6erq2r0bL7ILUqmU873vfc/Zb7/9nOLiYqeoqMjZb7/9nNtuu62/zdSpU52JEycav/v+exbbdGJFRUXO2rVrneOPP94Jh8NOTU2NM3fuXGP6JZFPsvXr1ztnnnmmU1VV5QQCAWf06NHOd77zHSeVSjnJZNK59NJLnWHDhjmhUMg5/PDDncWLF9P7or/85S/OhAkTHK/Xq6nFPiYux1EahYiIiIh8dp111ll44IEH0Nvbu6dXRUT+RX2mv+MtIiIiIiIisqfpwVtERERERESkgPTgLSIiIiIiIlJA+o63iIiIiIiISAHpE28RERERERGRAtKDt4iIiIiIiEgB6cFbREREREREpIC8g21495zzaD3RlzZqHi9/nnfVD6P1WDhk1PYt9dO2G958ndYfWbzUXG4qQ9t6PJb1c7lo3RcIGrXyqkratiTElz12ZJVRO/rwg2jbbIavd1uXOfekr7iMtl2xZj2t/+8zi82i5XgFfLxe6vMZNb83R9umLduSzfB9DSdvrocnQJvGHbPvAUBn0owtcPPVwCMvvMR/MAgLXp9J6y88vd2oFQf3pm2LwiW07nOZp2akyNzvAFBZWkfrZeERRi1aWkrbbm3bQOvrWt+g9ZLhZl+sGN5H2/oCcVpP9MWMWjDIz3uPK0rr+VzWqOVyPbRtWYm5PwAgEAgbNS/4Mrq6U7Tevt08Xslevq/jqQitO+BxG50dW81lxPl6dPd2WZZt7qfODj6X7R+ufJHWB6N+DO/nbsfsu56why9jHL9OWIZntKzdYtTyeX5pKy4tttTNMT7i5+s3bFgtrcd6eZ9pj3UatfIKfv1IdyZovXd7u1ErK+bbUtswnC8jm6T1rnZz2b09/Fz2WG4ZMik+/nd1m/0xVGZe7wEgk+ODdIZcQ3J5/nqOpe738fUOBc3jnk7z68obLyyl9Q9z/d9baJ1tQy5vXv8AgI/8gN9tXqNdHj6GpvP8BOpJm33OcosEJPlYXhLm1+iSiLl/s+ZQ9O56ZPj55iYnfgb8OOcdvo0uS/3jxiKVHPBjDkv8Ut4ay7QL27gLyU62++K50xsHv5D3ufLK79F61zbzWpfs4+OWN1DEF07OCQBoGtNk1EY3mTUA1n2/edNGo7Z8yRLatmXdOlrPWc4tNxmjAiHz3gQAosX8vrGE3N+xGgCUlfNnh9LScloPR8z2xcV82aEIX+9g2FIPmcfS4+fXibyln7OzyNnVj5ZzlnOOjMtuyyB54H7jP/Rl9Im3iIiIiIiISAHpwVtERERERESkgPTgLSIiIiIiIlJAevAWERERERERKaBBh6uJiIh8ECfDw0lYkFTCEqa1basZRgYA1ZU8TCdIwiHdLh7M4svzAKdUpxkaVVbFg2BG1FTQelGIX07j3R3kBXmw3fjxPBit9jAztC4S4oFWgQivp/I8NCyVMkMHu2M8KI6FPgJA65ZWWm9eb4bS+Mt5MJAnyI9NzmWud6jEDO0CgGCAB4sVB3nf8XnN7cnndyF5ahAcD49GoyFBlo9CEimeSJbMmcvwW9bf5eahRF63uQ9ceUsCmmUFbaFmfUkzGMvj4sfI5eb7yU3Csty2IDFLTplrV4LHdgNbD2J7z2M5Lm5LgFwmY6lbtp3Zpaw5W6rlEJRV8UDYqooaozZyRANfRrkloNLF+5HLa/Y7FnYHAMkkD7kcV9to1Jr23pe2XbdqFa13dZLrAYBYh1nfsL6Ztt24gde95FCF/Hx/5NI8KNHn5eNwMGiGq3lJ8DQABIv5eBsq5sGy0QozfDpazvtIaZSHwkVKzetKMakBQCjCg0k9JGgXADzkOuH18P00GIN+8O7cbDnQOfNs93ktiYAOT+JdnTBvwPYdP5q2zaf5MmoqzZMwRJb7LsuFyTLAxFPma3Z18JvDXhcfFFPkRN5v/4Np20ycpzi2tZuvWRO0JP+lu2k9FDC3PW+5WlVbTpJ9Ro8xaq07NtO2iQS/gevt5TeeIBffgJffBNTV8kTFjL/aqK1Z3sJfbwgsYesoqjS37c1XeVJ0fe3+tF5cZB7XZJqf6Ike3p8TUbM/Z118sC2r40PB2HpeTwTN5PaefIy2zXfzG61AzhycHdI/ASCT4+vt9Zh9tLyEX5DDfsuy+8xBuLuPJ2v3tPPzasMqcxYBT8ByJ+Tj49KmzdtovThi7r/eHj7OZLN8X7MxzxKgLCIiIiIFoD81FxERERERESkgPXiLiIiIiIiIFJAevEVEREREREQKSOFqIiKyWwT8/JLikBCoXM4SQZTlWQbVZfy7+8kO8/v/iV6eCxH08EyMcNgMVRk/zsyyAICxezXSelevJZAsSN7fdvNtnzCJL3tUoxk0k0710baOm2+725IF4/WZuRr5tCXAqY8HtKX7amn9kOR4o+by8UAed9gSruY3MxHcPAMHbh/PafFbApfcJNfFFrj0UWWyPEzBIf3fFmPlthw8tux8nmdIuG2RXx7SP0l2DwD4/TzYJGsJPIlnzL4Y8vHPe9xey35ie8USUGE/dmzPWvb2rhx+Sy5Q3rJ+LEfI7eL7w7YtjmUFd6Xb7kof393nAwDsNc4cFwBg9TurjVpbFx9Xw8U84ycQ4ud6Mmlm7/j9PBMln+bhan0p81pTVc3zYA4d3kjrmze00Hq8K2Yu4/AjaNut23mmkt9nnodRS5DYsjeX0Pqz//sYred2rDNqbkswoGM5LzyW8Et2HDx5vgyf5Zh5A+a2h0lWEgCUkhA/ACguN4NGAaCsrNyoVVTwkNUp+5hBqO836Afv5qRlYE10GTW/i4eDIcdPFDdJuWxbb4Y3AcCrWzbR+sodZvCYY0kCtYWoBYP8hiCTJTchJGkTAIKWpNlYwhyIX37LHGQAYFgF30+pLFtvPigGLEfWx25MLCFL45qaaL1xpJkyGS3md0LbtrbQej7D+0ikzBzEcj7LzXKAB7TVVZqBWxs9lju1Idi8o52//igzddHj4YNfeYSHCALmzdPmZnPgA4DmzVtpfXideZHoc/h6lHl5WGC2ZCWtuyPmtqcy/ILXE+PnYbnXPCZ+SwBaSSkP+isOmQNlKsNvPNNZHowGcvPatd1M2QSAznX8xFr1ylKjVlTPt3v4GDP8DwCCRXz/dfeY651KWlKHLQ8Ybe1m6nTacg6KiIiIyO6nPzUXERERERERKSA9eIuIiIiIiIgUkB68RURERERERApID94iIiIiIiIiBaRUcxER2S2KovyS4s2b7/EW53iYZSjA6y4eqI2w12yfTPIgvXhvG607YXP9dmzh6/F6zgwtBIBkOkXrFdVmmN6wETwFfFgdT24PRc114dmugCU4FkE/T8Zm6dqZPr4tCPGFp/yWZOaUGVzozlluOwI89DRUbYaNZkM8hDFl6SSOi7dn6dN5x5I2+hFZ06l3Q1q0y2Wuq3W5HsvxJ+1tAbSZFE979oPvdz85N3n8o12GpL9as8ttsfDMblnIrmH9LWM5Xra1yDu2z8sG329tx5fZ/ZnmQFkxD3kdPWasUdu0cT1t29HBA5hLbGnnQTOk1+/hW1dkGc8SSbOfsxk7ACBryT8tLTXDdwEgTc6tbI6fV/WW4ONQMGrUImGzBgCV9aNoPW7pj0/++U9GzZPlbf0efpb78nx78gmz7s7xkNykJUk9T/p0q+WccNbwYGtYQpg9ZFaJAElRB4CzL/w2X/Z7DPrBO+HhG9vhNhO/XTnLDYiXv1ykxOyIyT4zLR0AYj182d1J8yA5ZN0AIJfjdQ9ZBgB42R8GZHiH67PcfEVIZ375jTdp273G8Gls9m4aaa6bn3eUxkZ+YvblzRNi+1Yz8RgAunv4RRbBIqN0wFH70qZLlzxL6wnLqNSTMbenvY8PVOUJnso83GNOP5Hs3f0X01Wr+DQXjaPNROxR48xjBwDrVq+h9b64mdheZEmO7yEzCwDAsnfeMmqROvPCBgAVxXxAzLr5wLVpHUl0d/j6lfnNqZAAwIHZB4J+niZeXsqnf+jtMh8EVq7gfausiD/sFJeY53emgt+k9m3my9i2PWrURo3gywhH+EU9m+f7L02mQfFabgw6O3ifjPeZ54rLMr2UiIiIiOx++lNzERERERERkQLSg7eIiIiIiIhIAenBW0RERERERKSA9OAtIiIiIiIiUkBKNRcRkd2icSIPwQskzZC+bA8PqNy8OUbr77xJAv0AuB3zMpbq5snjriwPjHST9O3mV3ho4QY/v2xmLWnYlTVmqnmnJdW8KM9DKqtLxhu12mF8GeEA368BS7J3moRo9qZ5QGG6m4cw9rZYAjp3dJLX46GYCfBw08q96o2au8xMKAaAYHWE1l1RniToIgm5PpJgOxQZSy60i6WJW5Zhq7tJkm8mw4+dx5Jq7nKbn7/kYAmgtXxUE/bxNSwihykb5+dmys3DJVMY/PGw7SeHnpufjHRJa+r9LrYvnN0fTLvirTdovaTCHCtDXkuQaPsOWk+QhGwAqK4dbhYtAcwZS3J8mqR4u/L8eLgtdZ+PXz/KykqM2gsvLKJti0M8UXvCxIOMWsqS1J3mm46SKn5dyXjNk7mz0xzfASDs5dfCsCXtPECCt11evo223s92t2Ppunw8AJDm4bTsnOuJf/TzcNAP3gFXB60PC5uDfNQyYUS55WLZ7JgbWxTiO8Z28xB2mZuSKeIHLpO1xNSneCJ5jvxhQCjMO7M/wLe9tn6YUasbYd5QAEBbL78x2dZt3iAdfLB5ogFAx/ZttH7aVw43ao/97QnadvGLL9H6yH32N2rT9p1C267dvI7Wm19YQutdaXOaid4s7wvjDzTXAwASGXMwqKzkUwMNxcYNfORyYB6n7oqNtG3azW/uc/9fe2/WI1t23fmtM8acEZFz5r1557pVdWskq8hisTmpJLHVaqlbLdvyg2zAMAw/+MGAv4Htj2DAT91vtttuwAANTe0eRLFEsjjUwKJqvPOU8xAZc8SZ/VCyocb6LzLz5o22Yfx/j6s29zln77WnjMvf9nWOttrzsOwzz+JrIfb2dd2jBOfW33yCDzWpsTC1FoEdHYxjEZGghJ/ZntffU6/i65QGfTyDHu7pMZvHeForz+ErTPqxtuZ/NL0Cy0bzCzDuLusrT6pl3KbHXTyX7mzj9ksjPccmEW7T4Qhfo5WCWwTKIZ4fCSGEEELI04f/1JwQQgghhBBCCJkhPHgTQgghhBBCCCEzhAdvQgghhBBCCCFkhvDgTQghhBBCCCGEzJATy9XCGi56paEthJeBZVZEpBkagqvepgpVW1j8MwqxETMPtATq9VexfGtlWb+ziMi9O3dg/PGjLRVzDTtfkWLpURlIqt58A7/fAf5E+fnbP1CxmzcvwLLZxKikpkVS3RGWyg0T/HeZOztaGjXKsSF0lOI69rv4mVFZW2mfuYhFV62VdRg/ONLv99ZbL8CyZyGNcA5097VVMxlj+2OphmWB7VUtHitK2Fa7fA2bfPv5UMWGhvGzIljcdnSE87kRNlVs/XwLlk0E20d7ua571DmEZcuefp6IyBBIqhtzeO5IQ9wH+yM9H/zF93A75cU2jF8NdR1egcfE4TYWoMVTnAuer8Vy0wQLIgtgORYRqTd0+zmW8vMM/M4ffBPGRw90DvzkX2J5oxeNYHzcx6K/LAPyS8N92qziMVsD68eCYYNtVXEuim9YkhMdd7dwDnz4Zz+G8Ycffqpi3/nu12HZF5+7BOO1AL9f2NPzinOI2/roERYDTj/fgfHRrradTyNslt/ud2H84W0tpvQXcB9UL+j1TUTkxm+/BONBVc8VSWYYb58Qa5gBobp4hkHarkPnvmnyNcaEDyzLrvEenofrSDK8Nk2HWhg53Ma5snj9RVw3+H3I8K1KbpikUZs4udHWhqwYlT7tDIqqNq3mp7WXPxXZOVJDP32LeqeLb0H4+MOfqVhgdPbq5YswHhvlq/WajlW19FhEpDB+k0RVjydYimpdjpDEeO/7+S/fV7EPfvCvYdlaTX+LiMjakv6elQ0stQ4Nu/pLN16Bcf8//a9UbOuxlsqKiPS6eB836OP1Ywjm/tEI7wMmE7x+JGBPZM15Dpg3RURCYG4XEQkDvW+oGoLtk8BfvAkhhBBCCCGEkBnCgzchhBBCCCGEEDJDePAmhBBCCCGEEEJmCA/ehBBCCCGEEELIDDmxXI0QQgj5Vbz46jkYvzPRQpneMRZALlQbMJ4aQrnDgRa2rLVCWPZaC9fti5aJBQ5eHttzWBIaVrDwJgN/3y6XscSlVsO6pt6+/sabf/ZXsGxr92UYX27PwXg61SLBPMbvEUywrKZkSK3GSLJjiLGyHs6H7qGWF1UPsHgn6WLRUfQlLOj0Luk+znCaPTFb9x/hZzu6IQJD0OeEWAroeDq3SgHOfTfHwrwg0nXkPs79smfoxFJcd1rodymtXoJlj8dYOjUCIiTfw99YODgP80K3tWP87uS6xu9RKMdN8ZghbgNxq4bTKs0cZOuz9G8F/kYko8qdpzwgRGSuieWI98daCHu4uwfLTnL8Xo1FLE92gHi0UsZz+cISFvf6vh6HkSEyrlRwjt6+9RmM/+RHP1QxN8PjqnuI5WXbm1pEWWoswLJhFUt5W00sqPzmd97S7wdzTmQyNQSpYzw/jwY9FdvbxOK2B/fvw/htIMe2JHTnz2/A+MLCCoxXKnq9np/HQuKTcOKD9zDGE3/T0x+WHGJ78OOutoOLiHzjledUbBLjjjtnLNrlqp4wvtbCjX5jaRHGx8bm4bCkzafjHv7GDMuQxY91wl18hBOo0sWG0PmlloolH/8ClrWs6z/5VA/6m9vY1DxN8UK49Uhb6PePsKXyq1/6GoxfbOHE/x/++f+hYvFkF5Z9/108+ezt3VWxL/+mzrGzUnJwGycTbetur67Cslt7eFHpT/VYKdxbsOwrL16H8Tf/vn5mLcQHj2SM47duYYNk/1j3d6WCbeJZiBePzb7ekC408GK63saLWGNeT4ihsaEapXh83wUT/L0f6YVARCQe6NwSEXE2dPnxPjZXr13ENsyKcVgUV+eTa2w8q4a1OwY2+8B9cisnIYQQQgg5Hfyn5oQQQgghhBBCyAzhwZsQQgghhBBCCJkhPHgTQgghhBBCCCEzhAdvQgghhBBCCCFkhtBqTggh5KnQbGK52+HhkYoFLpZf1j1smj3OsehPCi2fCwtsW73QwM+slLRNOjb+LB3F+D0GhpU7rGhxYRHg96s6+NuXF7UQNPQNk/hjLKPc2ccCzBQYQV0XW9elwNZtv4S/B8kPoz6WdlZL+Ns7QyAu3NOWdxGRZgO/d90xxI+uFpnGp9VJ/xo+eLSD/0OhpZOWUTsAZm8RER9Yq5F5+Ys68IcFoEunhgx7uYnN+JfmcXy1rLeY9Soeg5OpHsciIk6uX/C4j+WXkxjXkaW6nz3D/h6GOFeQ8dsz7O/RFOe4A/rLBbZtEZEoxqZe9C0iIn6g+71i3J7gGjc2oAxJZ/HznI/buNXWpui9ew9g2bJhE+9v4lsE9oDI9v0PPoBlb9x4BcarNZ3ncYRzzhB+y9988HMY7/W7KpYatwXkGbZMo0cWhnk/ibHIdlhgsXUVuFhLAc6vCmgnEZFmGxvny+DWhtDF81jfWGffeuuqiq2sYEt5vYHfzy9j4Wye6/YuG0b8k3Dig/eSsRk6J3pSnJvDhuQPj7UNW0TkONKT6MXVNVj2P9y/DONBXyfLwm38vNJdvBBmxvUEl0A2BxkeVa6P2ykDBuzo53jQNw2beL6oF6wsNTTvfTxg5zx9hUA0wgNtHu+xpFrojWd/F6v/zz2PjduNGm6nr17V1xHt9/ACtDvEA3A81puye7dvw7JnYXCsr74QEZlb1BPdUR/nXLmO82g40otrYkzCn3+K7fg7W3oBajRwu6+sYMv88iW8ORk/1Dnz+AAbvysNnKMLS3rya88Zi5iLx7If6u8JXXxVSRrj2wzyBPRBjm8teP4lvOF77rKON6p4HLeXcHuMx3hDGse6DwZH2IafxbjuSggWlOwpnzAIIYQQQogJ/6k5IYQQQgghhBAyQ3jwJoQQQgghhBBCZggP3oQQQgghhBBCyAzhwZsQQgghhBBCCJkhJ5arPdfAtrfa0aGKeS4W/Fw/fx7GB3vAtmpYac8ZZs5qqMt7QLIlIuLkuA6s8BKJkGnUMF8GhkHQBxK0wMUyt6SBrWbFWMua0gg/L4N+Q5EVV3/lWxVD6uRgsVa2rk2B5QcPYNkxrkLEEPC98Nw1FVsb455ZS7Dd8/rVdRW7tqilcmfFyS3Bno4PJ11YdmUFWx490YKw7W2cL/0CC9P6x7rd/DI2Gx+NcLzZaMN4ua5tlnMLeHxXSniaWWlrgSKyS3+BMVYSLZxLEm3QFhEpAvx3xv7xkorNYemlfOe3F2C8JPsqtraKcy40vvHWR3je7BxrieC0j83ahSHga4L8z4yyZ6FizIsOeNbguAvLuobI03dwDhRAu5umuO2TBJtSa1UwP3s4XwYDLKMMDYNwo66/JwhxDoxGWNgomR5D8y08b08jLPXLjO5OIpBfI7x2DgZYaFmt4Ym+Xdf9sN/H83nZMMoW+UC/n2HkffwIG90vP8bz2/IlPWdlOW6/J8WptfB/AHsFS3doLPNwz5JZtRR4vayC/VCS4fatjbH8sqgblup5nbdrDbxuei08Zg97erzd3cd5eOcIj03HQ+MN1+EYe8ySp+eOwMXj2DJdI4G5Ib82reZJgvsGGfHLptXc2GMWeh40pioRecH6D7+WqSEFDsEcYJnj0wS3T+HjF97d1mv03fuPYdmf/OSnMO6CHPA9/H5L8y0YlwTnhg+Wm0Ffz30iIgsNa2+h52HHuCkhyw1jeozjAbgFoNnC+0PLuj41bi64dfMzFfvxD74Pyz54cA/G19e1mPnw2NgLGqPOL+M1Fd0YkBrj8Df//m/B+N+Fv3gTQgghhBBCCCEzhAdvQgghhBBCCCFkhvDgTQghhBBCCCGEzBAevAkhhBBCCCGEkBlyYrkaIYQQ8isxhIcB8LUExt99W00sXqzmWLr2uK+FShGQkYmIDKaWOEaLlvwSFkZZUp/zG1gu2FyYV7HDIyx9SYy6U/A5iSFfKgEJjojIdGJI1yb628d9XLbf6cN4kWKJU31Jy3cSI0eGIyyrGUdAoJhiAdb0EMuI7t/CEqXFN7WI0w9Mm9QTURiyuwJIzRxk3xKR3NSuIVuXpevCwqPU0fFygceJm+O+2+1h2WMOyj/oYqlZlON274K86I3xe4wz3E59kHOuMf+gfhER8V0UN0RnRt0OkJcZPl6RAo/jPMdzW4G+3RBoFkb/opcx0+kMtBaxVHbvtpZs+VCMJzIF85aIiIS4fQIgvbXEr0MgMhbBQq3cx/3U72rxtIhINsUCwGarpWKxkYuWQHM41HJOS/42nOI65hrYLJsnOncPd/dg2dEIz8M3b+n+FRF5792fqdi9ezdx3eAbRUTuP7yrYkGAvz035N2uh/vSAzmYpngO+u/++/8Wxv8uJz54d7axSS5K9QdMPDzBj5vYxFcZ62SefqYbUUQk8/CEkdb0p7iesTExjIqO4I1dCjopy3EdBbDfiWBbqTXf+stXYLzR1ZP5FL+yxBexbbCd6qStTY3NXtfYIO33VGy8/WNYdue9X8L43AvXYfxoV9tn46reuIqIpHitl/HRsYr1A8tZ/+QMB3hy8Ua6nxrGBJCM8eLhAuNqpYQnStfBSdBot1Qs83CfTmJs/R3v4Xa7fE4bTZsVbQcXEZEEZ3rS0/NBu4bNxmL03xgtYj7+xtxYgO7d0WO2vYIPXV9+DVvNK/KMiiUZXiCmIzzppwlexOKJzrOSh9+vUsNxtHdxjNsnCCGEEELI04f/1JwQQgghhBBCCJkhPHgTQgghhBBCCCEzhAdvQgghhBBCCCFkhvDgTQghhBBCCCGEzBBazQkhhDwV+kBsKCIyAvF2FdvLyyEWxMURNgjnvhZujh1sXjyO8N+aG3NasBcYOt+5GjZ4t5pYDNioa1Nqr4sloUd9La4UEfFEiwiX5nH7WUwNi63EWn4Yx1i8NxxOcXyERYKlkv72zMXtemjIKo/Be0+BYfeLOP7G7S1sGEY5lfuW9vTJyAz7LdKrOkbb5IbMFVqoXcOojQzoIpI6uo6Gi/OzbPxUczjEktBposeVCySxIiJjkIciImVPv3dujM2a8d5xouNZhucZ67aFQnQdOXg3EZEc2MtFRApgkDeKihjmZcuCnpt6dADo87+tXUdm4ODc2LgE47fefUfFjnp4Tpwc47F+/tIFGHdBzrjWWDFM7gVojLzA4zuNcS7WKliG2wfz32CEv7FivPf7H3ygYg+ADFlEpNHEAuZatQbjoaPH8q1bn8Oyx10s633w4LZRXt/ykRnmfevWATS9ZZlVB66iyK0xp59p5c5JOPHB+2jYhfHHI70Qp8aVE6GzCuPV9qJ+HjD5ioisWjbfqW6ErI83alGM47Ko30NEpHb9mopNgR1cRGR4iK9bKYEO9YwrAaID/O1S0gPFaWFTvG9MrHlf91flBWxRlxDXXd3Xm9rR1hYs2/38Dn6PR9jg3ACbyU4Lj5KjXdwHO/ubKnY5XINlz4JXwgNvMtX5NXyI+zQ6xAeE5XXdf7UKzv3epAvjDV/n1/wKvprj4MCwYWc4B7JI1zM1Nl8lB0/krtdSsc4hrsOvGQeVgf7GiXHdhPj6eSIij7f0NLh2Hi9W5Toe3z64GWAywQexIsLvcf4cNrc3gel99yG+kqRWN57p6rrBOkoIIYQQQmYE/6k5IYQQQgghhBAyQ3jwJoQQQgghhBBCZggP3oQQQgghhBBCyAzhwZsQQgghhBBCCJkhtJoTQgh5KuSGuDIZaGnefB1buXtdLLA7mGDh3eJFLZ1s17A5bndzF8bnplq+WPJxHQvzLRivV7Gt1ve0HHJuDpfdfoSt4aMRMDsbpuuhZZge43gOnH7HQMIpItIdYAFgXuC4v6tt4mEDyxaHhpS1B6zgkWF8jgwr7TTHUskUGHKzBH/Lk+IapnIHqZMNnTIsK9i2a5U1pObigN9fsgL/JlNyjZzzsem/D+zztQp+ET/EQthSoLepvQmeZ2oB7ud6qOt4cIz7eWz8HhUAgzlqOxERx/pJC5nHjX4BgvFfWR49EuWHiEiRY1npvy+qHp7/1oDtPDGksqlxy0Vk2PG7YE5LjHkkMMzjTqbzOTNui0hdvH4UhiDaL+nyfoT7KTLG58e3tTX86P0PYdlqBYtzQx8fCwvQVpOJsaZYRnJDJ+55qK3wWBbXyGlkHveMI65xG4F1ZQAeR9bA/fWc+OB9PMUL8e5YG4STPjbuLq4swXixsaxipTbelJX6eHH2t7W+PjY2IEPBnZ/V8eIRXNTXE/iOcVVACz8zufVIx4xN6tTF8ca3bqjYuIuvSZGbWPMvKRiwO7iOKO/CeLC6rmKr3/4aLFuq4MHTuXUXxltjXb55EU9Uj3axGb3i6UESBPpam7PiGNdIFFOdG0tz2JjvTYyrKAZ6IspLeLjGU2xMPzzU47AIjGtYArwZXlrWfS0isrygv2eppcexiIgkOAcCT/dJ4mEjeX+Er6fY3LuvYrubOC86OCxp9LKKNVr4ebuHn8J409E28Wqox6uIyPL6dRhfP4fnPCfVm4DB83iuio3bFjJHz0vjCBv1CSGEEELI04f/1JwQQgghhBBCCJkhPHgTQgghhBBCCCEzhAdvQgghhBBCCCFkhvDgTQghhBBCCCGEzJATy9U2Ns7DuHt/S8UqhrMnM2yDJUeLpI5H2Gz7zuNNGF8HgqnnBL9IZEjNJlv6W0RE4g+0UGliKCedc+dgfHp9VcXGqRYyiYi8fBVLmUauthBOth/AsmEPy/DSOS20ih9p8ZuISLKHJXnB8r6KjVewWCuYb8J4+ze/DOPdxzsq1lrEcq4v1y/C+L/50bGKlVpY7HcmEtzGIbAh10MsiAsyPATTWAvanBJ+XrWM6z7a13me4Srk+SsbMH5u4TKM+77Oo+kIWzwDwSIwB5glh8YccfM+ztGdro67CRYf5l38fvOFnieut/HfJNMxbsDY1wI0L8HSQsfFdYcVXPfK4jMqtjinhY8iIv2Rzn0RkSjR5tWavwDLngXfMgI7Os/jCbbB9gdYEDcp8Lz9jd/+uoq9cENbykVEfvS//AWMH27pHFhrzsGyzQa2wcYx7r8IWLnzzDDyRoZRG9h0jzodXDbH7WqZjEdDXXfXWD8yB881rmGA3z3S6/haC7erVPE8Mcj12h7lxvh08FrhVXGfZVAsbumknxTLSI4lr7jsyd/JLAsM7iIiGbCgT0G+iYikQzynFQ5e54OSbvcVsAcREal4uE8vLmqR5+VlvHeqlXEd4GIB+eEdfMPBD27jb+zEup08ax9omOXTVJe3usu005vm5ZNblo1UMN7j5GVPyhTcciEicm5d70PqrXlYdrKH9/edY3z7xWis58UUzM0iImLcRIDm7TzDdcRGbhz38dkmDPUc6hjvMTHWiWGk52209ouIpCleDzxjDUfpZe1lXCNprJs4UD66p5yHM2POwpyubnx7xKmq+HfgL96EEEIIIYQQQsgM4cGbEEIIIYQQQgiZITx4E0IIIYQQQgghM4QHb0IIIYQQQgghZIacWK5GCCGE/CpKBZYerS5dVbH3sz1Y9liweGf9BSxw/Pp3tIzyuefXYdmFKl7y/s//9S9VrN/FkrfxqAbjnUMszYmB3Kbw8d+8BxE2tgyBELRtyOlKgqU5mSES6gLRUQwkUCIiQaglgiIi0wTL4o6nWngTGALFiYcFaBPRks9YsEhnnOI+8xpYClet6e/JTiEyOwmJIdJDGeA6htjoNO90WikXeKTh/JRAcPu+3sLt+8prr6vY8hyuPEcvIiKhq4V5G0tY5ucaAsE01XX4z67Asv0JruNf3e2qWFHgso4hevKB/K8wBFWF2Y+GRApIvjKjPaxf3AoknTqFtO2kRFMsRvM9nRvtuTYsmxp1WN6s8USXD30sY5xMsVwyB/OcDySxIvYwdF38gtOpnoet+cCqPI4NOSfAmlNyI6dhPhqyNFzD6d4lNzrSNYRzpozwjO/xt/9Bh87wnBMfvFfX8SQ12NIGyGrbaADDiBqAhtw5PIJl/9kvP4HxZxf0ov1fl/EGqWrkcjHCi0rnI2017yxhi+e9CJvAkeFw/TreHF5o47rjHb1RrQMLuIiIkxsDcKDbuuRim2x/gjfA2b17KlZsY0PosbHhqT2LLfnrl/UGfbqLN+hLVdy/X3rxmoptXMbPOwtzTXzIKNd0exY+HhO1Ft5sphkycOLcGvZwP3lDnXMlH/e1TPBGRibaKCsi4vjaEp+l+FtKAY6jDWkPS7ml6D8P45VEG08rBf6WkodvHNjtvqdil3x8yDtffhHGE1d/y2SM55NejMds3sE2VifXB7pWDR/ychePt0FfL4VhDW9oCCGEEELI04f/1JwQQgghhBBCCJkhPHgTQgghhBBCCCEzhAdvQgghhBBCCCFkhvDgTQghhBBCCCGEzBBazQkhhDwVxn3D4FyaU7HI8PytX9yA8d/5j78G49ee1QLAsIKdoy98QxvQRURSsBL+6J/+KSz74V0tlxQRcSK8nGYpML+G2KbbMUzl821t3/YrISw76Q9gfNDDsr8R8HB6wC4sIhKlWNrZMyzAY2Ck/mzrAJZ9dIjrHgBDdG7YZyPBEsu5RSwsrde0ILMzxBLLJ6UwDNfIElwYxmOzbmTbNUzDjtE2BTDEez6213uNS7huw1gbjbQwsuNjKWqjip95+0CLJN/9vAvLjo62Yby6elnF3Ay3RzLGc1jd1e00zY02dYy5ABbGz8uMfrTs9Hmq68mNOkwTN3zc0z8mjMfYovrwwW0Vq5TxPNeaa8B4ZNyw4HZ1bGlBy1lFbDv4ZAxugDCeF4ObKEREfMOk7nl6DCUJvokiTY2bK1B/W7cZGF5uK+3EAeUNk7hlB7fM42jOcgx7+Syx3htGz3D7xYlHVC/DA8Uv9MQa+Lja2MMv2k215r8zwWVTYxLoB3oXtxVg63SrwMkcuzheFHoz1MuxSXpzHy/ac65eVI6NjeefbP0JjD97TluZr87jxWqhtArjowdbKpZN8DsX4HoKEZHjY71xKjLcX3EZW5aTnrbhi4jEf6Mn3qoxQURlbK++eOMF/bzth7DsWfAi/F6Zo9stMRbXsXX1Bdj8BSEuPOfgPC+BTW+Y6gOQiEjNuwjjXqQt8yIi+UTfclAJWrCsZHhT5mR68Vhr4PdYbeFD1yTTh4xRB18zcn8f50Db1zclNI1rsS4s4/b4bPeuirkOtoYHjrFQR3gxnYLrbSb1n8GyWWjcUDDV88Sgi+3q8tI/xHFCCCGEEPLE8J+aE0IIIYQQQgghM4QHb0IIIYQQQgghZIbw4E0IIYQQQgghhMwQHrwJIYQQQgghhJAZcmK5WlgYdsRci4IWXSy9ij0s6/ITbRAcT/Hzzi0twfj5y9qEuzXEkiXLRhcasi4HKG/jHNtn1xa0YVdExAef3j/Yxa/XweK27SMt3OpVsfHxQmSYHQ+1XE0muF/cFP9dZpLq9xhn2AJZAKmciEh1go2FO1ubuqxhQhyl+L1bkY4vvnwdlj0L+b5hhazo3I1dbP0NDTNxGCyomBsbdlzDNJyDvF1efxWWDbJnYfxgG8u6kEAxreD+yGI8ViYT/d7lCs4X15ipmq01FQvnDGP0Em6/EJiN+1Msk9ybfAzj9VU9VsoZlqtF0zqMe9k6jBfANbvb+QUsWwqw6XV+/mUVcxP8Hmdh8wjPae989I6KLV3Fpuk/+i//EMav3MBzq+PreT6KsDAyjrHA7sXXnlexhx9oYZ6IyL/9F9+H8TDGtuYESPNyQ/DZLOO5bmNNizWhZVZEhsZ4OzbW1G6kBZjWX+SDAD9zEOBnBi09th5vHsGyuwNcx+KFZRXb3sRm9DTBY9918DzbP9ZyxmmK3+NJ8SybONiHWBZq07aLrOanNAqj/ZCT473Q4zGOf97D+41Pjx6rWHMez1G5IWjt9vT4TjY/hWX94wcw/gd/rK3mB1vYgH61icexW9bv/c5DvE4YHmFphnoha5RwzpZCnLOOh8tHwKI9GeM9cG+K58ED42aGp83P330bxrce3VexwMeNORp2Ydwv4z1Lva7Xu/Nrev8gItLr4LqPgRC2UsEC4eMursM1JtcU3H4wMcTHnuDcOItp+//Gmibgfzil1dzi7G+N57fTzJun5Sx18BdvQgghhBBCCCFkhvDgTQghhBBCCCGEzBAevAkhhBBCCCGEkBnCgzchhBBCCCGEEDJD/v2YFAghhPz/ntWr52E8rWuR3quvvwLLXntlFcazYgjjSabFhXGGZU/iYRlMWNdL4YWXnoFlh9/7Kxj3Eyxb6Y+0rCv08d+8X33uCoxfuqzjvRFuj9E+FirtjnGb7I211MfzsHzJ87WMTESkvoqFT3/vd7+un/enP4dltxMsu/rHf/xbKvbX3/8JLPvTtx/C+JYhY0uiCyrmOPhbnhTPkPDkQCkUenhLlhpy2wgIRm3pjxEvdC46gvs/yvH4OTLEfSEYb40pFkZl2Dco9emhik2LPiybGO2UHu+o2O7jm7isIT588zd+R8UWDRnoch1L6DYWtKCtYggLyyUs0PKB2FREJANivjTCosD7u10Y/2c/eqBiO4aI7SzcvYklpZ1D3ddXrlyEZUtG209j3H9xrNeJwJiHrfz3gMBrYAjsCteQ5hnyt3Sk59YCyNxEROIcf2MOU8mypWGs2QPJyyxhoyly/P8IT0Ou5lqWvBNw4oN3ZaLtpCIi26k20y4bBuf2pItfYl9PiukA2yKfv6HtlCIiF57Vm6TOL/HEumYtrMYEGICFqTLEi4dvpG21qgfbrbsPYNnFEe7QK5fmVWwzNDZTd3SbiohUBh0Vc1LDgprhdpoCO31sJGE8whNEJ8MbuGp1TsUGhqV3FOH37mztqZh/AW/mz8KN86/BeFbVlssswAvxWgubmstN3Q6Osek5OHgE4x3Q9l75Giw7nbZgfJLgsVyu9FQMLWwiIpMRtvSPRnoMZcZCkxm7srkG2MjU8cK2daBzX0Rk6um5bWeEN+r1I5xzXls/M+k/gGWrLt5QtSuXYNwPdb+nEa6jVtI2fBGR86t6fgwEmLIJIYQQQshM4D81J4QQQgghhBBCZggP3oQQQgghhBBCyAzhwZsQQgghhBBCCJkhPHgTQgghhBBCCCEzhFZzQgghT4XWmhZAioj8F//Nf6ZiYQX/3TdxsXjRNUyzLljGKhUt3RMRKQpcR5prgeP6RSxkvP48tp1vfoSFfEWm6/YCLACMfWzq/fCutnXvd7XgUERk9wDbzg962iwvItIHslHXw6beehnLPN/4jW/C+Ff/wRsq9pNf3odlx3cew3itpUWCv/+H34Jlb33yPRj/8D1sUf7O7+u+XL3UhmWflDDA2yzH1bnYrGgxp4jI2BCgTvp6rFi/ppxG5Bt6uJbCMCT7hk38wpz+nhsrLVi2c9yF8d5AyzmTHI/j/T7O/R+8/baKvfj6m7BsqYT7q13XEs6NlSVYdsmwmreAeNV1cNtVy1ig6Rp9E8d6bHaHWGx68zG+QSADMlUnf7qWfxGRw80tGM8zkF857o9KtQXj+webMF6v1FVsMMQS5wAITUVEplPdPhM8rUoFiIJFRHo9/Mwi1f1XrdRg2f4E538O5gnXNIzjeGEIolHpp2UvP41l3DVs8aiOp2EvFzmd0f0knPjg3RvhBfcHPW0bTrFYV/5ejjO0sr+rYuUETxhfeu0tGF/f0LbmP/35R7BsL8L25czH35iAjUmlMAbmpv4WERFvXm9Ir7Sx0Xqa4Q2VX9MT8cvf+Cos28EicOm8v69iEb6DQHIfbwIm4NtrNaPTjYljEuLBky/oTc9UcNldw1Ld6+orKY4/vw3L/h6MnoyXX/kOjLtNvel367gdWmV8W4BX0m3vCV7MP7n5HowfPdJ29/u7eFwFPh4TlTpu+zABV18keKMw6uFNfFqAa5ZC/I3jIT6M3XtwV8XqxoYlMxbwYaLnpYPBESx7NbkE450tPXc8evAZLBvEuE1bdd1fIiLrl/TNEb0U537ewvk0H+hDYb2ED6eEEEIIIeTpw39qTgghhBBCCCGEzBAevAkhhBBCCCGEkBnCgzchhBBCCCGEEDJDePAmhBBCCCGEEEJmyInlanEfWxDvHGkh0MSQLLXOY5nYK4EWEzV8LW0TEbm8sQHjc3UtL4syLHOLxjgeBtgUOC10+dDF3xjG+L0nHS1Dcn3c/LmHZWd7R1rcdvzZp7BstYwFToMyMDtWsJApqmP50mg00s9bxDbjToylXYPUMBQnWsS1s4tNpW7ZMD4CWVatj4V1Z+Hay1+B8SLQZmJL3Od7ui1FRLxM1+FUcJ+OP8ZtufVYC8I6UywNa9R1XoiIpLv4vaslXX55fhmWXZjTcjARkeFYf3ts5EsyxWN22O2r2DTHY9A15I7DqbYpD406+jmWvDmuHrOBswLLfnpHC+FERJqLuO5jX4/DoIb7ZQikdyIiR8d6DF1eeR2WfW3lP4HxkzCK8PNr8zqfc8HfYJnHHcPmm0baClwUptsZRmNg822t4Pnv9/+DfwDj/9vun8D4uIusxXgsH7k4RxeX9RgapnhOixJct1/D83zF07m+vIRz9403b8D4137rNRh3Wrof1i/jtSLPsVjxzh1tQf/9f4ilos8+uwbj739wE8Y3H+yo2MVr67Dsk1Iz2t0D63zHMB6PY5y3WQbiLs5908ILjOSuYQ3PjHnxy+dbMP6tZ3Rf5xGuo2fsRrNUj4nxAOd+3VhrXnlNz3Wvf+0buA5gHhcRiSP9Hq4lNjbku0gNHQKRqohIkuD5cfMBtnb/9Xu/VLH3dvB8/FkX928v1nsq13865uq/S3+C1/kq2Dv1u11Y1q/gGyCqRhxdLhBNsYW4XsV7y+lU70+LyJAyg3ODiEgB8lkE3zqQGVbuNMMmfJRgjmPcUPAUjN9Pyxp+mro9Y37LQfksw3n+NMhzqw9+PfzFmxBCCCGEEEIImSE8eBNCCCGEEEIIITOEB29CCCGEEEIIIWSG8OBNCCGEEEIIIYTMEB68CSGEEEIIIYSQGXJiq/l3L2LL30FH243fvT+GZf/NA2yirFzRdVfr2PTY8LAhNBloS2LmYKPdKMJGxbKHmyNDNl3DFJgbxr3OSFuFiym2e4Yjw+zc1TbE4u4jWLZq/E0lrs6p2EcpNjs+ONyH8TKQ+YW5tj2KiARl3KZOgk2Z0662v48KbBf269iCmwW67ovtFix7FqpNbFBNc932mSUGDXAO5IUeQ+U6thUnowMY37utjfdFHY/jpdUXYPzOTXybwcSpqJgzwnnkn8N2SgcYpncePYBlR2NtLxcRGY/1uPIMk6VTYIO8lLsqVAQ4tx7vagO6iEi7qdt148J5WDaKdNuJiExibO+PIx1vzOP3mwLDt4hIDKz+JcF2dXkRh09CahhbwZAQMezlvmHlTg3LaQGWsaLA806S4rm1cHW7pQHO542XL8F4ZVXPrSIivc+2VMzxcf9tvHEZxv/RH31XxXb2tJFbRGR/vwvjgxG276aOnoPOreEbSC5cwDcXxMatDccTfYvC+YvYau67eG66d0u3X+0/wnn++pevwfgvPrgN45ORztcseXJbLaLfx3MXek6MtNciUhj7ivDEOziRwjD6o5o9B5e9toL76I+/jdePHtjLHPe6sGy7hD9ma6jnrpdfxHb9N77xFq57vq1iFWMMlgqcy+05bcsuGx0QunhdPzrUa/Unn2Pj/g9/8lMY//EPfwzjx35Lxea//nuw7DjF356jPbNhsj8Lkxi3sSf6WZ1DvAdZWlmF8XPreI4ql/RNRJ2jQ1j28ADf/pJn+r2rLv6W0MXr2PI6fu/dQ53nx328Jzid1fx0VnqrPIr/v2E1zwybuAvmSOtbLNs5qsPitO367zznif+XhBBCCCGEEEII+bXw4E0IIYQQQgghhMwQHrwJIYQQQgghhJAZwoM3IYQQQgghhBAyQ06h5iCEEEJsHEMOlSZaQOP7WD5juFNkPMayMyxSw5VkKRbhBGUtG4qNP0tXWvi96+stGN8dDVSs2cQituWrWgIlItK8pCWm5fWLsOw1B8eTCRbfDae6XfMMC5Vc1xIX4vYueVqSuri0AMs2gLxKRCQMgHy1gcWWr3z1GRhvf+9tGM9BOlQMydeTEhsinwK0me8bYiPPkK6BqlPj95TQkAEVqa5kpa5FVCIi/+SrV2D8fAuXHwM51EoLy1LbJTyuFmtvqtjzzz4Py841sbgvjnWOlzxDsGTI1Tr7Wmb48AEWVP78vQ9g/N0Pfqlid+7eg2UHQ0PKJ7id2m/8gYpNMjymHEOCGSCRcPH0f59LJ1i0nKPczfDznQLPUb6P56LVNS01W15cgWX/5d2/gPH1tXUVq2BPnYynuI1HCc67NNcyMdgeIuK6hmj0FK6z00jULHJjsbbEaHbdurz1KdYzTyNGs8pacfQ9ZxHLnXiFub6Oi/7n1QsqtlHSFlIRke/fxIa+v3ygJ7pXL+oEFxEZ3r0P412QoJ7RQd0YW9eXqnhByAo90SVoxRaRA2MDcljVG6epjyeOhoPbutbU75fHhnHyCE/apZLexGxOsZH8KMOJtQqMz9Wa/j4RkUYNW1CLCbYLH8b6XXwP95fXwfEXC70JqA9wf50FQ1opBdi0JgmehNMMt0Megs2w8Q3OEBs40+GeirWXsDU5OtBlRURG+9jineZ6Ak2MjcKRUbcHNlqTiT6kfBHHdQ/G+ts915jWPNzW5y/r8str+GBUxZctwEl4lOzCspcv6TlTRMTPzsH4OP5ExVx/E5aNM2xMr9W1Yd2YwgghhBBCyAzgPzUnhBBCCCGEEEJmCA/ehBBCCCGEEELIDOHBmxBCCCGEEEIImSE8eBNCCCGEEEIIITPkxHK1yBCSzZe1ZOnN64uw7OEIi8fe39KGw8/2jmHZZwwRWBzqTyly/HeFAbC4iogUETZzBmVUt2G0M+KVkrZLDgose+pfwKbFhReeUzHPMAB/9K+wxXUDfPv59hKuJMJCsDKwRvYS3C+jI5w3q0A2JyKyvqiNt6Ehywo62Ix5caAlfhutFix7FiYx7r94oq2VUyCNExHJChxP046OCe6PcQ8LydySHpt+Dbdl9xDLyw53DIkXyN00w31db63BeDrVcrXcmGfGkwMYn2b7KuaEWDPqB3hsLp7X73ftOpbQ7R5hUVwIXGyOi8vGI923IiKr7ZdgXFwtmizquL9ufo7nzbUlPafUSlX8vDMwiXEbe8CWG/o4F1PDZzo25qPJVOe/bTjFddc8PR9ljmU+xeO+tYaN5Kmn89ENsKVvfh7XkQBhYyzYjuemeH1zjPICTOWxIYN0CsOMbbRr6AHR5Ry2mrcX8bhdO6fzP3OxtHPhAn6PC1fxM4sMzJGnsPqeBMf08+o+daCh314Dm1XdvpF1s0CKRawesCyfr+Pcf9bI8YlhcHYynYu1Mu67i5exjd+9oqWTpRCPn8xYZweHWnT5/p07sOwnn2iZpYjIL36pjeR37xlG8oFhJAd9kBvWe89Im/IC3h82lnQ7FUaf5zmOF9CYbmwyz8CFRbz2LMzreKuNvzeoYgHqNMO5eHCo9woXz12FZTfOYQHq0mJLxdIMz6vbn3wG44ddvF+LQTM7xjrmONac8uSm7f+nhlPYum1LuWVMN2sCESvvzm5jt/YHnoeNydbc+aTwF29CCCGEEEIIIWSG8OBNCCGEEEIIIYTMEB68CSGEEEIIIYSQGcKDNyGEEEIIIYQQMkN48CaEEEIIIYQQQmbIia3mjoeLOsCgutbSBm8Rka9fbsJ4H9ihH3QNu7GHzXXLGxsq5oXYnDhNsbVvOsC2QR9YP8OgAsviLxRJ97SVeQ6YakVEoj7+9k6iLX+tNraMtgwjbzDVdZ+rYctoaPxdxqlpo6gT4DrcITZMrvi4b4AkX9wIWz/HRn81Pf2NVy/gnDwLWY5zEYnty2EDlk2iEYzH3R0V6yRdWLa60ILxb3/3myq2PcbW68edLRhfuortsTnIryzBeRuLtsyLiNTmtK14/7H+bhGRaYyt5s+8Oq+DFTy+j3pHMN5aBmPZwYblyRD3+fySzv+0wG29uIJniaUly6Ktb4noTvD4WWrhOkqeLr+/jQ3AZ2FqibNzPXclhqU/SQwrt2FyDUva7JyleM7IjVsnpsCYPkWaWRFJjFWz0cQ3NXihNqUGZbx+lAJ8I0g01u+Surid8giPQz/HxtYcNFVhmbETvGaNJ/iZkav7ptPBc97EuNGgWtNtdWjcaJGCtVpEpNbAY2400uXHYyOJn5ASsNqLiCCB9PX1ZVj06hq+eeTivF7XukPcvj0jHqZ6/9VI8NwVT3H7RhHOi0ZDzztV4zYFx5AY12r6G4+PtaFaROSv/uqHMP7OOz9Tsc8+vwvLHh4Z3w72uhmY1774Dye3TnvG3travwYL2LjtgPJubtjmjWcWhf6eoni6RmcRkasbeJ6rNvQcGtRasOzD7UMYPzKM8uORbouDC8YNI+fwTSwHB9qOf+/BY1h2axfvWcTB83AB4tbtSacxeD8tkO3cdU93y4UY4wV+jvGNeYHnoKJAex9rHBrtd5pmPUMX8BdvQgghhBBCCCFkhvDgTQghhBBCCCGEzBAevAkhhBBCCCGEkBnCgzchhBBCCCGEEDJDePAmhBBCCCGEEEJmyImt5kVh2OuAEjXMsW31xjx+3MGaNhmOIlxHOtEGThGRxQVt/SzXscm0a5gCkxjbTFMQjzz8Hq5hLJwDf+KwPNtxHxtbZaqfWexiu+d5Q7kXeNpQ2Zjg5y172Lx7DIzzpQa2q+cJ/ttOOu7CeB8YeQ2pueSGEXzthjbDXr6ArbBnITasxw4YVk5u/I0rw2MiKGubeLmFzej1EY4P7mnb5usv4Ha4+gLOW3FXYDie6O9596+x3fPwEFt9Kw393uMJNqA353EdL3/loord378Jy0oDj4n1C6sq1m5jq2m9pk3sIiKTdE/FBmPDOl3gb9k8/BjG51vaABuN8dzWrOBxmEz0IIqm+P3OwijGBtw00UZZP8BjYjDowngD2I1FRJYWFlSsCPAcj8ysIiKTqX6/yRhb3zMPj/ssx9/uhjrvukNs3n14HxuV22t6rHgVPFaKDK9jeYLH+GCqv3Ma49yw2i9JjLUT9MMj4+aCnmEjdkGe9If4291CW9RFRCZT/N637+jbHHr9p2s1//bLz8B4q6rf6erSHCxby/Ai2PR1ziU+7udJDc876Uivo9HYWK9cI27cOFANdfnAxWWHh9s4vq3z4i9/9gtY9n/+3/8cxg/3tWHaEpLnxu9ROdjbuQXOlUKMvUGg1/XQsLyHIe4vf/kcjIsP5kd0ZYGI5GLdHAHWSMMifRZqTeMWnFJLxcaZ0R8ejvsOngMqJd1/gxHe+46MG1ruPbivYp0OnrdS45xh6bAdELfmW+s3U1TequPUZnQwxo1jofiG7Tw3LOMFGIy51U7GjU0JuCUqA5Z+ERHj9cQ1jsT4va2++fXwF29CCCGEEEIIIWSG8OBNCCGEEEIIIYTMEB68CSGEEEIIIYSQGcKDNyGEEEIIIYQQMkNOLFfLjf9DeyZA5JFi4UTTx/+P9i9taHnQ0aADy8Z7WMySAEFIWMNysKn1f84vcNzN9fdkCRZOOBn+xhQ8Mw4suQGW9DipfmbmYZGEZQ/IUl13AaRtIiLlDMs9CiBK2i13YdmkhN8v144REREJgABmPNbPExEJDXHCEpBllX2jnc5AFuMcyEB7+r4huPCxwKkxp3M3m3Rh2a1Hn8H47Y/v6HrLz8Gy0/ldGJ+AvhYRWahcUDE3x3m01L4O46WKFqxECe7T5mILxpNUv99gcAjLnjuPxXJOpt/77e//DJYNqvj9li8AyaSHk3x3W4t+RETi7AjGO0MtdJsvY8FOs47lTKmv55/UsgudgYEhvQoDPf5KPp5fwhC3m+vg5coB8TjGuTgeY2lOguZzw51iKVWSAs/bXlm3fbeLJWp//hf/FsbnFn5XxS5d0VJSEZFMDNEZkM+IiIwnWrRk9WMK1g8RkcAQQbm5ju/s4TyPwfomIuKXQP8aZTNDCmfl+vYjLfQ6OsLf/qT80Vcuw3hY0pn0cAfPDe+8/UMYf2FZrxMOGGsiIrEhQLt7U0sdrz2D52zX2Jt0t+7C+OhYy6t2d7AQ9vZdXMfjQ50vaVWv8SIi8+dwWxdgLs4sEaTxc1QE1sJ0PIBlK8bezgWisukYS2Kzst4Xi4hU2loeK4KliqkhVyvE2L8C4VZmzBtnobmI++/Rjm5Pa0xkhhwsnuD3nU50/3VHeJ1wArzWRGCdsBxqvm+IuowzQo4EY9YS7Zx87bbkarZ0DdfjA5ldbuzBC+NoieSCIiJFpuvxjBfJDdFkmiGxnCFoM856aC/xRRx8p/Pk0kH+4k0IIYQQQgghhMwQHrwJIYQQQgghhJAZwoM3IYQQQgghhBAyQ3jwJoQQQgghhBBCZggP3oQQQgghhBBCyAw5sdU8BAZiERGvXFWxuIutoJYJfL2l63iph22Dn3X3YHx3+5GK9Sd9WHZoqAKnLv47RAC0hSmwU4qIuAVu0hEw9I0N455v/D0kj4D1MDKsjIbVHCkYpz7+ltww2I5QHSVskxUX11027IZ5ps2TtRzXfW2lAePtUL/f+KgLy+IaTkYQYHtwMtTmZD8E9n8RmWbYwL299zcq9vl7H8GyDQ/bjWtJWcU++8GHsGzpEs6XI8N4X73aUrFL5/U4FhHZ3MP9h6yyfoiNvCvAGi4ikhd6rsnHuI6qi3Pu/s3bKvbOzzZh2fM3DFNpQ4/ZIF2AZdM+fr/5JVz3g/va9vt5D9/68N3f+CaMr57X9uNRiu3SZ6Fi3GJQLut4GOB5rtxuwnjJuJlgMtE52utqm/IXZbHVvA5s8IVhBLbM6NafsWtNPS6+9JUvw7IPHutcFBH5p//j/6Ri3/7WV2HZ517egPHmimGULfTc5Ht67hARcQwbcmoYog96XRW7c/cBLGu1XwZs8VmO56tJjG9hqNSNtX2gx9wI2I/PwsTYE3SAUflzYHUWEfnxx5/C+Ca4ZWGhjm9zaQa4j+YaehWsNPAY3NzB69Xth3guef/DD3TZTW2SFxEZTA1Ts6/z9q0v3YBFf/f5KzAOLhaQsnF7wtY+tq5v7utv7w/xrSS3PtGmeBGRm++/o2KWpTlcewbGc+O2jGwM1gQH7ztcw3yPreZPbm+2iAxR+ua2bvvNXeMWEEsnnuOxjuaoag2fa/wU52KWAHO28R6usb4ZInBoNbdu0HCMydI1zjD4eaezmjvobQwzupUznovz0QHvHRrfWHj4BZGlHbWpiEgOLOoiIrlxK4YLOs31rN759fAXb0IIIYQQQgghZIbw4E0IIYQQQgghhMwQHrwJIYQQQgghhJAZwoM3IYQQQgghhBAyQ3jwJoQQQgghhBBCZsiJreZi2eicQFeKpZoydbEFOgAW6gtr2JB8fxMbR+NopGJZjst2Uxw/dHBzNDz97Y5h80NWSBGRHpDo7caGGd3Bfw/xDAs6rMOIB6K/ZS/H/dIzDLZD8C3nDIt6yzDZex1sb13xtU33tY1VWPbqBk606kSbriNgSxc5m9X8OHkM43GkTacjQ4S818Wm8u3jt1XscLcLy64GL8D4AjCa9ie4jmBXW51FRMIJ1o9uZrdU7Nm3LsKyRzl+5vG2Hm9LazhfXv6KYcCu6Xw5PLwAyx4cYBN4ra6z4Pnnz8Oyc+dxRxaZ7vMswfPJ7paeq0RERh1cPgY3F3SH2Nq99fwijNcayyq2c6jN+WclMOYMF4y/sofHb2G4XAvTUKrLl0rYyh0a1vwKuLVjMDBu58hwDpSr+Jmp6DF09Vk8Vq6/tALjf/4v9HzwvX/+Y1j2uyNsTH/9N/Ezc1fnXWrM246xNhXG2rS/r23XgyG+KWHjIh63g6FeK3b3senYB98iItJcwHE30ONiOMLj80n56fYxjEdTbdDd2cPrYhVvh6Qz1uXv72Ir93oD337xh3+gb0K48dIrsGxYwSvmwho26S8/96yK/YZhwF+exyb1VkX3XbOCG6RUxmOwBuKBYYAeRths3BnrOWyni3P5r5fwPDwBJuntI2yELwxr8riDrfAZGIKVKu7zwtzP60qQLfqsTIwNUZLovai1H84S6/YBvE74nq7HM77NNz45FN0+eQlb5uPUssFb+3hkDTdqMKpwwT7cWDZNUB0iIg5oV89a740XdzM8XjzwzIqP52zft3JXx1OQTyIiqWE1F8HlUU55hl39JPAXb0IIIYQQQgghZIbw4E0IIYQQQgghhMwQHrwJIYQQQgghhJAZwoM3IYQQQgghhBAyQ04uVyOEEEJ+BWmM5SlprGUrhiNFqlUsXQsCLEbzgFArNMpaoiAkusot+WWmhaIiImmEyyeJrrtzjIVKb37reRh/4xuvq9hP3/4Elr3/cBPGVx9jCVCprgVMzeY8LBsbQqN+HwvJBkMtUXrmxlVYttXCEs25tk6Ubq8Py3qGNOrCM+dgfDrWvz2M46crVzvuYLlaChxjToblPqGD8zl2dZ+uzuMcP3/tVRi/8spXVKzRwhI11xCSzdWxaGhlQcvVQksMVWDhkQNETY4hqMosEVimx2Cc4ue5QNIkIlIN9bhfaeIt9Buv6/EqIlKqt1Tsz77/l7Dso+2HMJ7lWuQpIpIGWiDneniu8gXnkwvGjyUMPgtTIEwUEUkn+tscQ4TlGQKvLMPyPiTfKsDcLCLiG4IxlHaFIfJMC1x3jAa+iBSmdE2TWaJRkP+ndeNZoswcvJ/1y23Vx+9XDXDdc1U9j1UNWakLZNciIj6QsVnzVWHNNUYXIDFfED7579YnP3jn+CHRRC+sln3bMZK5iPViU69py6yIyOIcXvg7B9rkOTDsnj3QiCIi7xh27zZI3DlgcxcRqRk9l7i6kn6KR8TUMAWimj0jsUIjOau4FljWd4zBA74lT/BkEiPVpohUjG9s1kE9Cd5kDY/x+/XndN84Ke5b7B49GcfDHRgf9XdVLJvgzVx3eBfG86legJpVw3LauwPjtXndr24d28uDMrafziXYNOuuaKtsewlPlHNNnAOPbnZVzDFysbNnzD/poYqtrGIj+eMtbFI9OtR9UwR4nlnGnyilkv5Ga8MSRThvd27hPK+BDdX1Vy/DskPDdn54rHMnKFnWVUIIIYQQ8rThPzUnhBBCCCGEEEJmCA/ehBBCCCGEEELIDOHBmxBCCCGEEEIImSE8eBNCCCGEEEIIITPkxHK1LMdipwLEHUNeFvqGaXYCxFeGiW+5huv44KOPVexo+wCWTR382QeGVbCfatFS1TAtVg0rXgm0SRFaZkncfkjW5PtY8pYZ1r4+sKamKZYsWeY/KPMz5Gq5kQuujzs4F/1+3WEXlvUK/MySq42sTv70Bf6TgZaoiYg4ns67oIFtz00jYaJ7Wl7WWMKCuGSxg98j0Gbi9fkXYdnNLfwtvdtY1nXj3A0Vq9dxn26cx6Kyo2393vc+xXVM+li65lW1MC2sYOvryjo2Ne9uakFblBtmY0MR6ogeK3MtbJG+fLUN4wd3HsN4mmi5Wr+Djam7O1jQFmVdFVtYbMGyZ2E0NnIUyA2TFM8NcYzHRLViWWzB/GUIPj0PzwMZMJgnaF0SkfEQzzt7W9hUvrKkFY7tZgvXbVh2L760pGLHUx0TEQl93K5DnBqSuPp7wgr+xswQgvolPV+JiKyc06LDS1fwuIhjw0YMPidO8HzQ6+P5qlbHpvxKGdj2q3hNfVLWmlgUm4C8TZwWLFuq4fgjkC5hEytDv/mt12B8vqHFmolh/M4LvFcY4uIwFxt422Pig7HsGvsKz7RRg/K5se/JDQkwmvuNfWprDlvhn72qpZif3lyDZbe2sNU8Nd4bGf0tQ7X13gWwZZ9Sin0i8hTvh+aBGNc3DNkRni6kyHGCBcDwHhr759C4HSHLdfmeYSkvB3itScu4T+JYf2eaGPtkY7wh27l1k4d1M4Dn4fKhr/OuWcO22ZV5LOVtVnCblEMgAjbWMUtai9Z263xk1eEAcfQXdev384w56CTwF29CCCGEEEIIIWSG8OBNCCGEEEIIIYTMEB68CSGEEEIIIYSQGcKDNyGEEEIIIYQQMkN48CaEEEIIIYQQQmbIiVXPboDtcAGQwDmGBtExjLIC7J7ZaAiLrjWwPXUh0HUEU2w3njOslVNkvhQRF8RTw7Q4MnSDE9QmwDAuIuIZ5lhkIXSBcV3ENhkWjn4/w3spgYPNjgHox4rRdnXjTzs1B5s5QTeKCC4bTbB5GqVO1cV5cxYmnc9h3Ctp1WwE2l1EJGxgK+TaC+sqliS4HdISbuS8N6di/X1tARcRGXZxfLKDx9BH795SsYU5PL7dQFtzRUS+9h3dJ5cur8Cy80vY9jy3rA3JlQXcpq67CuOHW9o0u9+5A8vmpUcwLgmYHw27aljFcQfLnqVR17mT5wNYdmgYt1Ngri6Xsen5LHR7OF8QWYbnrvEE57mT42+LwDxv2ctLZZwbYagbfzjG5t3EmJ8b89hk/Oa3tU36wiVsMnYD/I2NeW3GfvUr+mYBEZFqiOe6uTk9H4iIRALaz8Xt5xim2ZJhAUZK5GlstGuC18NyRedpo4HbOizhQeSF+HviSM8rVh1PypVF3O5ZrvO/a+wrxoYF/5m2viHh6muvwLLnzl2A8Ri0u+cZZm8Ytf9DDm69KQqcK75lKge/DzmWvdx4kdMYyS1ysLdD3yciUvLxN85V9fxz7QLul7v37sH4ZgdfT1D4um7XOZ3V2QXtim4uOisOuL1GRGRpXq+NSwv4G3LD7u6KMQcYcxqu27D6g/jcGK9jQQnfZoDaWEQkmurvifG2B9rLRXCeW2cB15izwwCPw0qo+6xexW1dreA1yDKBe+AmJ9eYg6x+dF2UJ/h5hTX4zZ+iwa1UZxgX/MWbEEIIIYQQQgiZITx4E0IIIYQQQgghM4QHb0IIIYQQQgghZIbw4E0IIYQQQgghhMwQHrwJIYQQQgghhJAZcnKruY+LegU4uxfYuCem1Vzb6HzD/Fd3sEHwW8AC3TNsg794dAjjhxE2yk6BvS4yXOC58Y05+BtHZljxXEMLj0SUrns6s54H7OO+UUXFsAdWgT2w4eP2aLg4FxaMVKiCjwwE90tofHuR6fJTw3B/FlYr+CPGJf0NvmCbcmFYgsO2ft/4GJt8x/v4/Y4/O9L1DrFhfC5agPHUMFxGhR5beYZNlsd72GI8SHQdVy4v4uclOAc6j/U3ukPcIGVDsX/5srYAr5zDxu/jKbZ4Hhxoy3ge4z73QjxWXnnjEi6fHeu6xbDQpzjPHZB/zinnjpOQCza2Bz4wjkILqchwhL8hMxSvo6G+3cAzxlW7hU2uHjACi2G3Llfxe68a5uzaor5modLA75flOO7n+l38Nn6PmmHTDYw1PJnodnUznKOpcbNCf9CD8Qj0mWVG9432Q9uJUhn3jW/cvjIa49xxXWCzH+D56klZbOC5JIn19w7HeJ6rvqjN+CIiG8CY/uyVJVg2NH5ncQP9HoEhDQ8Meb0h8YY3sfjG/sYSleN9j/EtRiXIQFwYt6UUuAskAf+hMJ7nCW6QWkXn28svPQ/LRoZ5+V//6D0Y3+/pvHUNeznaB36BLm8Z0M+EYdr2wdyAYiIiQYDX18CzbiUAxnbjPTJw05KISBzrHLAs2405vB/Kwd7pi7dDOYPzyHGNmz/g2ML9Z5rtrTisAxY163aMvEPlPQ/P5Z5hY0dWc8exDOjG+1nzB/r64snHBX/xJoQQQgghhBBCZggP3oQQQgghhBBCyAzhwZsQQgghhBBCCJkhPHgTQgghhBBCCCEz5MRyNQmxyECA+MoxhAViyF3SNFGx3Hg1JM4SEVkDHoPfe+UcLLsSYOHXnb0+jO+N9Psdp/j/WD/N8f/xPwJNkjr4WwpDQOB6um4PxEQsnYJIACQjvuHCqxmiuBJ4v5KDK5nzsASibcjYap6uuwzkLyK20CVJdH+NHfweZ2ExbcN4tKaFN/ubXVh2f3MPxtOqlgH5cROWdbfwt5U7IL+ATOiLB+p3FhGpXcOCkIWrOo884/1kvwvDu/f0t2fHWBq2fNn4djDeKtEaLNvpaQmXiEiQPVKxhZUVWHZ1/gaMZ9MtFXu8hfu2Usdt2l7CfZNO9dzrW/ajQzz3Rj2dI8nUsAidgTjBz0/BmJxMdExEZDTCOVAKsLjN87VMzPJ4Fo4xP6e6faIMz2lJjPPIkjWV5vTLpA4WeMVTXEcW6XeJRlgYFntY3gMFdyJy2NEywvl2C5bNjbX9cOcAxqexfpfFtVVYNjOEPJ2+lguKIZ5yjY7f2UZ1iORgPczyp7tWFCnup2mk4xVDZvnCtQswvt7Wc0PFEC+5niXaAm1pbOFco/8NXxoUNVn7w8Jo9hxIIC0pVpoZ0kIgy0oyXMcoxuN+ONX9NQHjUkQkK3AeTsA8kxkSqbXzF2F8of0Axo/6j1UM9q2IOIYA2YHCqKcvV3MMOR7az4Yhbp9yGcd9oz2R6C/Pjf4z5GoFKF8NsDwxMMZbatTtABEx2A6LyK+Sg+n/Afruv/0PGGMsoyFnydVcS4Bm2tjAh5oSNatuHTfLmvlnvB+QiDtn+N2av3gTQgghhBBCCCEzhAdvQgghhBBCCCFkhvDgTQghhBBCCCGEzBAevAkhhBBCCCGEkBnCgzchhBBCCCGEEDJDnMLSQxJCCCGEEEIIIeTM8BdvQgghhBBCCCFkhvDgTQghhBBCCCGEzBAevAkhhBBCCCGEkBnCgzchhBBCCCGEEDJDePAmhBBCCCGEEEJmCA/ehBBCCCGEEELIDOHBmxBCCCGEEEIImSE8eBNCCCGEEEIIITOEB29CCCGEEEIIIWSG/F/bkD2SXmnpXQAAAABJRU5ErkJggg==\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "The data has **10 classes** - ranging from different animals to automobiles.\n",
        "\n",
        "We can see that the **class distribution is uniform** - all classes are equally represented in the dataset.\n",
        "\n",
        "From visual analysis of the sample images we can make the following observations:\n",
        "\n",
        "- **Diversity**: The CIFAR-10 dataset includes a variety of object types, such as animals (e.g., frog, deer, bird), vehicles (truck, automobile, ship), and scenes that differ significantly in texture and background complexity. Most of the images have complex, real-world backgrounds, which require the model to effectively separate foreground objects from context noise.\n",
        "\n",
        "- **Low resolution**: Images are small (32x32 pixels), leading to visible blurring or pixelation. This may make it more difficult for the model to capture fine-grained details, such as distinguishing between a truck and an automobile.\n",
        "\n",
        "- **Centered objects**: In most images, the objects are in the center of the frame, which can make classification easier for CNNs.\n"
      ],
      "metadata": {
        "id": "2PquTjMv0byf"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Section 3: Analyse Data Quality"
      ],
      "metadata": {
        "id": "_d5hggRv4ZAH"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Check for missing values"
      ],
      "metadata": {
        "id": "OY6EEgSV4gWb"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"Training data shape:\", x_train.shape)\n",
        "print(\"Missing values in x_train:\", np.isnan(x_train).sum())\n",
        "print(\"Missing values in y_train:\", np.isnan(y_train).sum())"
      ],
      "metadata": {
        "id": "FLZtle9V0Urk",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e8453cc0-d0bb-405a-bfa5-409db5eb2be5"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Training data shape: (50000, 32, 32, 3)\n",
            "Missing values in x_train: 0\n",
            "Missing values in y_train: 0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "We can see that there are no missing values in the training data."
      ],
      "metadata": {
        "id": "1PLGzUst5Bba"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Check for outliers"
      ],
      "metadata": {
        "id": "NUHNKg_R4tqj"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"Min pixel value:\", x_train.min())\n",
        "print(\"Max pixel value:\", x_train.max())"
      ],
      "metadata": {
        "id": "yhZ5frnF4fAT",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "9866c816-f272-415f-cf7f-d047f1673413"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Min pixel value: 0.0\n",
            "Max pixel value: 1.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "We can see that there are no outliers in the training dataset as the minimum and maximum pixel values are 0 and 1 respectively (after normalization)."
      ],
      "metadata": {
        "id": "xbA-OUpN5GQx"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Check for label range"
      ],
      "metadata": {
        "id": "qEal7O7549Yx"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"Unique labels in y_train:\", np.unique(y_train))"
      ],
      "metadata": {
        "id": "Ilz_431M43xf",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "9b22bfd9-4011-4fab-83e5-b65177b95537"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Unique labels in y_train: [0 1 2 3 4 5 6 7 8 9]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "There are 10 labels as expected - one for each in the following categories:\n",
        "1. airplane\n",
        "2. automobile\n",
        "3. bird\n",
        "4. cat\n",
        "5. deer\n",
        "6. dog\n",
        "7. frog\n",
        "8. horse\n",
        "9. ship\n",
        "10. truck"
      ],
      "metadata": {
        "id": "EgITReIv5TxE"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Overall, we can conclude that the data quality is generally good - there are no missing values or outliers or out-of-range labels."
      ],
      "metadata": {
        "id": "YhB3aXig5ojj"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Step 4: Construct a CNN model"
      ],
      "metadata": {
        "id": "1Gupj-ib51YY"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "* We start with 3 convolutional layers to construct a moderately deep CNN as our data size is relatively small.\n",
        "\n",
        "* We will also introduce Pooling after each convolutional block to reduce overfitting, improve efficiency, and distill key features.\n",
        "\n",
        "* We will have just one hidden dense layer as it is sufficient when combined with convolutional layers. It balances model complexity vs. training time\n",
        "\n",
        "\n",
        "Step-by-step explanation:\n",
        "\n",
        "- Layer: Conv2d(32 filters)\n",
        "  - Applies 32 filters of size 3x3 over the image to extract low-level features like edges, textures, and colors.\n",
        "  - `Padding = same` spatial dimensions (32×32), which is useful for stacking layers without shrinking the image too quickly.\n",
        "  - Activation function: `ReLU` (to introduce non-linearity)\n",
        "\n",
        "- Layer: MaxPooling2D\n",
        "  - Reduces the spatial size (height and width) by taking the maximum value in each 2x2 patch.\n",
        "  - This Introduces spatial invariance, making the model more robust to shifts and distortions and it also prevents overfitting by reducing the feature map size.\n",
        "\n",
        "- Layer: Conv2D(64 filters) and MaxPooling2D\n",
        "  - Deeper layers learn more complex features (like shapes, object parts).\n",
        "  - Increasing filters from 32 → 64 gives the network greater capacity to learn richer representations.\n",
        "  - Two pooling layers help aggressively reduce spatial dimensions (from 32x32 to 8x8), which is important for final classification while retaining useful features.\n",
        "\n",
        "- Layer: Flatten\n",
        "  - Flattens the 3D feature maps (from previous layers) into a 1D vector so it can be fed into dense (fully connected) layers.\n",
        "\n",
        "- Layer: Dense(64)\n",
        "  - A fully connected layer with 64 neurons that combines all the extracted features to make sense of the patterns.\n",
        "  - 64 units is a balanced choice as it is small enough to avoid overfitting, large enough to allow meaningful combinations.\n",
        "\n",
        "- Layer: Dropout\n",
        "  - Randomly drops 30% of the neurons during training.\n",
        "  - Helps prevent overfitting.\n",
        "\n",
        "- Layer: Dense(10)\n",
        "  - Output layer with 10 neurons — one for each class in CIFAR-10.\n",
        "  - Activation function: `Softmax` (to convert logits to probabilities, for the multiclass classification)"
      ],
      "metadata": {
        "id": "5OZTluBc673G"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "cnn_model = models.Sequential([\n",
        "    layers.Conv2D(32, (3, 3), padding='same', input_shape=(32, 32, 3)),\n",
        "    layers.Activation('relu'),\n",
        "    layers.MaxPooling2D((2, 2)),\n",
        "\n",
        "    layers.Conv2D(64, (3, 3), padding='same'),\n",
        "    layers.Activation('relu'),\n",
        "    layers.MaxPooling2D((2, 2)),\n",
        "\n",
        "    layers.Conv2D(64, (3, 3), padding='same'),\n",
        "    layers.Activation('relu'),\n",
        "\n",
        "    layers.Flatten(),\n",
        "    layers.Dense(64, activation='relu'),\n",
        "    layers.Dropout(0.3),\n",
        "    layers.Dense(10, activation='softmax')  # Output layer\n",
        "])\n"
      ],
      "metadata": {
        "id": "a0_y7h-F48oZ",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "190ce749-33a7-4ec9-f649-27114489c65a"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.11/dist-packages/keras/src/layers/convolutional/base_conv.py:107: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n",
            "  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Step 5: Train the CNN and display its progress"
      ],
      "metadata": {
        "id": "7YzJoub69lcK"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "cnn_model.compile(optimizer='adam',\n",
        "                  loss='sparse_categorical_crossentropy',\n",
        "                  metrics=['accuracy'])\n",
        "\n",
        "history_cnn = cnn_model.fit(x_train, y_train, epochs=30,\n",
        "                            validation_data=(x_test, y_test))"
      ],
      "metadata": {
        "id": "ABFjKZJn6nRr",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "6d672e6a-c09e-4bf8-c3c4-aca63736d5cb"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/30\n",
            "\u001b[1m1563/1563\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m16s\u001b[0m 6ms/step - accuracy: 0.3347 - loss: 1.7947 - val_accuracy: 0.5943 - val_loss: 1.1417\n",
            "Epoch 2/30\n",
            "\u001b[1m1563/1563\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 4ms/step - accuracy: 0.5730 - loss: 1.2066 - val_accuracy: 0.6515 - val_loss: 0.9969\n",
            "Epoch 3/30\n",
            "\u001b[1m1563/1563\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 4ms/step - accuracy: 0.6402 - loss: 1.0322 - val_accuracy: 0.6843 - val_loss: 0.9060\n",
            "Epoch 4/30\n",
            "\u001b[1m1563/1563\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 4ms/step - accuracy: 0.6798 - loss: 0.9144 - val_accuracy: 0.6884 - val_loss: 0.8994\n",
            "Epoch 5/30\n",
            "\u001b[1m1563/1563\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 4ms/step - accuracy: 0.7076 - loss: 0.8436 - val_accuracy: 0.7068 - val_loss: 0.8598\n",
            "Epoch 6/30\n",
            "\u001b[1m1563/1563\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 5ms/step - accuracy: 0.7294 - loss: 0.7716 - val_accuracy: 0.7143 - val_loss: 0.8609\n",
            "Epoch 7/30\n",
            "\u001b[1m1563/1563\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 4ms/step - accuracy: 0.7455 - loss: 0.7174 - val_accuracy: 0.7126 - val_loss: 0.8794\n",
            "Epoch 8/30\n",
            "\u001b[1m1563/1563\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 5ms/step - accuracy: 0.7595 - loss: 0.6750 - val_accuracy: 0.7075 - val_loss: 0.9370\n",
            "Epoch 9/30\n",
            "\u001b[1m1563/1563\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 5ms/step - accuracy: 0.7773 - loss: 0.6205 - val_accuracy: 0.7049 - val_loss: 0.9591\n",
            "Epoch 10/30\n",
            "\u001b[1m1563/1563\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 4ms/step - accuracy: 0.7857 - loss: 0.5948 - val_accuracy: 0.7116 - val_loss: 0.9368\n",
            "Epoch 11/30\n",
            "\u001b[1m1563/1563\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 4ms/step - accuracy: 0.7982 - loss: 0.5547 - val_accuracy: 0.7050 - val_loss: 0.9872\n",
            "Epoch 12/30\n",
            "\u001b[1m1563/1563\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 4ms/step - accuracy: 0.8070 - loss: 0.5259 - val_accuracy: 0.7207 - val_loss: 0.9780\n",
            "Epoch 13/30\n",
            "\u001b[1m1563/1563\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 4ms/step - accuracy: 0.8175 - loss: 0.4899 - val_accuracy: 0.7242 - val_loss: 1.0029\n",
            "Epoch 14/30\n",
            "\u001b[1m1563/1563\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 5ms/step - accuracy: 0.8266 - loss: 0.4749 - val_accuracy: 0.7169 - val_loss: 1.0270\n",
            "Epoch 15/30\n",
            "\u001b[1m1563/1563\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 4ms/step - accuracy: 0.8285 - loss: 0.4644 - val_accuracy: 0.7262 - val_loss: 1.0315\n",
            "Epoch 16/30\n",
            "\u001b[1m1563/1563\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 5ms/step - accuracy: 0.8362 - loss: 0.4371 - val_accuracy: 0.7236 - val_loss: 1.1116\n",
            "Epoch 17/30\n",
            "\u001b[1m1563/1563\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 4ms/step - accuracy: 0.8442 - loss: 0.4149 - val_accuracy: 0.7240 - val_loss: 1.0807\n",
            "Epoch 18/30\n",
            "\u001b[1m1563/1563\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 4ms/step - accuracy: 0.8468 - loss: 0.4033 - val_accuracy: 0.7170 - val_loss: 1.1631\n",
            "Epoch 19/30\n",
            "\u001b[1m1563/1563\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 4ms/step - accuracy: 0.8543 - loss: 0.3875 - val_accuracy: 0.7150 - val_loss: 1.2193\n",
            "Epoch 20/30\n",
            "\u001b[1m1563/1563\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 4ms/step - accuracy: 0.8597 - loss: 0.3766 - val_accuracy: 0.7234 - val_loss: 1.2496\n",
            "Epoch 21/30\n",
            "\u001b[1m1563/1563\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 5ms/step - accuracy: 0.8612 - loss: 0.3650 - val_accuracy: 0.7229 - val_loss: 1.2038\n",
            "Epoch 22/30\n",
            "\u001b[1m1563/1563\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 5ms/step - accuracy: 0.8693 - loss: 0.3486 - val_accuracy: 0.7136 - val_loss: 1.3283\n",
            "Epoch 23/30\n",
            "\u001b[1m1563/1563\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 4ms/step - accuracy: 0.8684 - loss: 0.3500 - val_accuracy: 0.7190 - val_loss: 1.2880\n",
            "Epoch 24/30\n",
            "\u001b[1m1563/1563\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 4ms/step - accuracy: 0.8778 - loss: 0.3306 - val_accuracy: 0.7078 - val_loss: 1.3134\n",
            "Epoch 25/30\n",
            "\u001b[1m1563/1563\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 4ms/step - accuracy: 0.8785 - loss: 0.3273 - val_accuracy: 0.7178 - val_loss: 1.3273\n",
            "Epoch 26/30\n",
            "\u001b[1m1563/1563\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 4ms/step - accuracy: 0.8788 - loss: 0.3213 - val_accuracy: 0.7207 - val_loss: 1.3327\n",
            "Epoch 27/30\n",
            "\u001b[1m1563/1563\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 4ms/step - accuracy: 0.8833 - loss: 0.3117 - val_accuracy: 0.7263 - val_loss: 1.3938\n",
            "Epoch 28/30\n",
            "\u001b[1m1563/1563\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 5ms/step - accuracy: 0.8871 - loss: 0.2994 - val_accuracy: 0.7082 - val_loss: 1.4381\n",
            "Epoch 29/30\n",
            "\u001b[1m1563/1563\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 4ms/step - accuracy: 0.8907 - loss: 0.2972 - val_accuracy: 0.7216 - val_loss: 1.4510\n",
            "Epoch 30/30\n",
            "\u001b[1m1563/1563\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 4ms/step - accuracy: 0.8933 - loss: 0.2896 - val_accuracy: 0.7229 - val_loss: 1.4673\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "cnn_model.compile(optimizer='adam',\n",
        "                  loss='sparse_categorical_crossentropy',\n",
        "                  metrics=['accuracy'])"
      ],
      "metadata": {
        "id": "AwGRbnaM9rbs"
      },
      "execution_count": 12,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Set Up Data Augmentation\n",
        "datagen = ImageDataGenerator(\n",
        "    rotation_range=15,\n",
        "    width_shift_range=0.1,\n",
        "    height_shift_range=0.1,\n",
        "    horizontal_flip=True\n",
        ")\n",
        "datagen.fit(x_train)"
      ],
      "metadata": {
        "id": "rDs2J7pE_rVm"
      },
      "execution_count": 13,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "early_stop = EarlyStopping(monitor='val_loss', patience=3, restore_best_weights=True)\n",
        "\n",
        "history_cnn = cnn_model.fit(datagen.flow(x_train, y_train, batch_size=64),\n",
        "                            epochs=20,\n",
        "                            validation_data=(x_test, y_test),\n",
        "                            callbacks=[early_stop])"
      ],
      "metadata": {
        "id": "Adkaf66p_wrd",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "733da5c4-1ceb-4c6e-a22f-5bb4c6feff3c"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/20\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.11/dist-packages/keras/src/trainers/data_adapters/py_dataset_adapter.py:121: UserWarning: Your `PyDataset` class should call `super().__init__(**kwargs)` in its constructor. `**kwargs` can include `workers`, `use_multiprocessing`, `max_queue_size`. Do not pass these arguments to `fit()`, as they will be ignored.\n",
            "  self._warn_if_super_not_called()\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[1m782/782\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m35s\u001b[0m 41ms/step - accuracy: 0.6208 - loss: 1.2126 - val_accuracy: 0.7097 - val_loss: 0.8679\n",
            "Epoch 2/20\n",
            "\u001b[1m782/782\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m36s\u001b[0m 37ms/step - accuracy: 0.6621 - loss: 0.9956 - val_accuracy: 0.7219 - val_loss: 0.8489\n",
            "Epoch 3/20\n",
            "\u001b[1m782/782\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 39ms/step - accuracy: 0.6755 - loss: 0.9426 - val_accuracy: 0.7260 - val_loss: 0.8533\n",
            "Epoch 4/20\n",
            "\u001b[1m782/782\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 37ms/step - accuracy: 0.6926 - loss: 0.8979 - val_accuracy: 0.7328 - val_loss: 0.8027\n",
            "Epoch 5/20\n",
            "\u001b[1m782/782\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 37ms/step - accuracy: 0.7033 - loss: 0.8672 - val_accuracy: 0.7431 - val_loss: 0.7751\n",
            "Epoch 6/20\n",
            "\u001b[1m782/782\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m30s\u001b[0m 38ms/step - accuracy: 0.7099 - loss: 0.8428 - val_accuracy: 0.7551 - val_loss: 0.7199\n",
            "Epoch 7/20\n",
            "\u001b[1m782/782\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m32s\u001b[0m 41ms/step - accuracy: 0.7181 - loss: 0.8238 - val_accuracy: 0.7444 - val_loss: 0.7814\n",
            "Epoch 8/20\n",
            "\u001b[1m782/782\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m39s\u001b[0m 39ms/step - accuracy: 0.7177 - loss: 0.8117 - val_accuracy: 0.7443 - val_loss: 0.7648\n",
            "Epoch 9/20\n",
            "\u001b[1m782/782\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m30s\u001b[0m 38ms/step - accuracy: 0.7230 - loss: 0.8019 - val_accuracy: 0.7568 - val_loss: 0.7414\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.plot(history_cnn.history['accuracy'], label='Train Acc')\n",
        "plt.plot(history_cnn.history['val_accuracy'], label='Val Acc')\n",
        "plt.legend()\n",
        "plt.title(\"CNN Accuracy Over Epochs\")\n",
        "plt.xlabel(\"Epoch\")\n",
        "plt.ylabel(\"Accuracy\")\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "vov_yDug_1cs",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 472
        },
        "outputId": "7fbede77-2f5b-44f4-b9c9-f39c4d28aba1"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "We can make the following observation from the Accuracy curve:\n",
        "\n",
        "- Training accuracy is steadily improves"
      ],
      "metadata": {
        "id": "tYMk_Lj3QiBE"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "plt.plot(history_cnn.history[\"loss\"], label=\"Train Loss\")\n",
        "plt.plot(history_cnn.history[\"val_loss\"], label=\"Val Loss\")\n",
        "plt.title(\"CNN Loss Over Epochs\")\n",
        "plt.xlabel(\"Epoch\")\n",
        "plt.ylabel(\"Loss\")\n",
        "plt.legend()\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "4t5T4XYCEClJ",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 472
        },
        "outputId": "ceb27705-a383-4cd1-c3b4-485dfae5d497"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Step 6: Construct a VIT model"
      ],
      "metadata": {
        "id": "FgfMAtCkQrJy"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "We will construct a Vision Transformer (ViT) model based on the Keras official implementation and adapt it for the CIFAR-10 dataset:\n",
        "\n",
        "Patch Extraction: Images of size 32×32 are divided into smaller patches of size 4×4, resulting in 64 patches per image.\n",
        "\n",
        "Patch Encoding: Each patch is linearly projected into a feature vector and enriched with positional embeddings to retain spatial information.\n",
        "\n",
        "Transformer Encoder: The encoded patches are passed through a stack of 4 transformer blocks, each consisting of:\n",
        "\n",
        "  - Multi-Head Self Attention (2 heads)\n",
        "\n",
        "  - Layer Normalization\n",
        "\n",
        "  - Feedforward Neural Network (MLP)\n",
        "\n",
        "  - Residual Connections\n",
        "\n",
        "Key training decisions:\n",
        "\n",
        "  - Optimizer: AdamW (Adam with weight decay)\n",
        "\n",
        "  - Loss Function: Categorical crossentropy (with one-hot encoded labels)\n",
        "\n",
        "  - Learning Rate Schedule: ReduceLROnPlateau\n",
        "\n",
        "  - Regularization:\n",
        "\n",
        "    - Dropout (0.2 in transformer and classifier layers)\n",
        "\n",
        "    - EarlyStopping (to prevent unnecessary training after convergence)\n",
        "\n",
        "    - Weight Decay (L2 regularization via AdamW)\n"
      ],
      "metadata": {
        "id": "-4e05FjwstW8"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Configure hyperparameters"
      ],
      "metadata": {
        "id": "ED3JXN6QT66_"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# One-hot encode labels\n",
        "y_train = keras.utils.to_categorical(y_train, num_classes)\n",
        "y_test = keras.utils.to_categorical(y_test, num_classes)\n",
        "\n",
        "num_classes = 10\n",
        "input_shape = (32, 32, 3)\n",
        "\n",
        "learning_rate = 5e-4\n",
        "weight_decay = 1e-4\n",
        "batch_size = 128\n",
        "num_epochs = 25\n",
        "\n",
        "image_size = 32\n",
        "patch_size = 4\n",
        "num_patches = (image_size // patch_size) ** 2\n",
        "projection_dim = 32\n",
        "num_heads = 2\n",
        "transformer_units = [64, 32]       # Transformer MLP\n",
        "transformer_layers = 4\n",
        "mlp_head_units = [64, 32]          # Final classifier head\n",
        "dropout_rate = 0.2"
      ],
      "metadata": {
        "id": "qlU31LEvT132"
      },
      "execution_count": 40,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Use Data Augmentation"
      ],
      "metadata": {
        "id": "RJfmW00PT8_X"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data_augmentation = keras.Sequential([\n",
        "    layers.Rescaling(1.0, input_shape=input_shape),\n",
        "    layers.RandomFlip(\"horizontal\"),\n",
        "    layers.RandomRotation(0.02),\n",
        "    layers.RandomZoom(0.1)\n",
        "])\n"
      ],
      "metadata": {
        "id": "XF8beBXqUCux"
      },
      "execution_count": 41,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Implement Multiple Layer Perceptron (MLP)"
      ],
      "metadata": {
        "id": "8Ge2iKs6UFCJ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def mlp(x, hidden_units, dropout_rate):\n",
        "    for units in hidden_units:\n",
        "        x = layers.Dense(units, activation=\"gelu\")(x)\n",
        "        x = layers.Dropout(dropout_rate)(x)\n",
        "    return x\n"
      ],
      "metadata": {
        "id": "PoWgnVzNUIqI"
      },
      "execution_count": 42,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Patching and encoding layers"
      ],
      "metadata": {
        "id": "puMWLwHMUKdB"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "class Patches(layers.Layer):\n",
        "    def __init__(self, patch_size):\n",
        "        super().__init__()\n",
        "        self.patch_size = patch_size\n",
        "\n",
        "    def call(self, images):\n",
        "        batch_size = tf.shape(images)[0]\n",
        "        patches = tf.image.extract_patches(\n",
        "            images=images,\n",
        "            sizes=[1, self.patch_size, self.patch_size, 1],\n",
        "            strides=[1, self.patch_size, self.patch_size, 1],\n",
        "            rates=[1, 1, 1, 1],\n",
        "            padding=\"VALID\",\n",
        "        )\n",
        "        patch_dims = patches.shape[-1]\n",
        "        return tf.reshape(patches, [batch_size, -1, patch_dims])\n",
        "\n",
        "class PatchEncoder(layers.Layer):\n",
        "    def __init__(self, num_patches, projection_dim):\n",
        "        super().__init__()\n",
        "        self.projection = layers.Dense(units=projection_dim)\n",
        "        self.position_embedding = layers.Embedding(input_dim=num_patches, output_dim=projection_dim)\n",
        "\n",
        "    def call(self, patches):\n",
        "        positions = tf.range(start=0, limit=tf.shape(patches)[1], delta=1)\n",
        "        return self.projection(patches) + self.position_embedding(positions)\n"
      ],
      "metadata": {
        "id": "yeHIMYfcUN6W"
      },
      "execution_count": 43,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Build the ViT Classifier"
      ],
      "metadata": {
        "id": "a14xbtm-UXwK"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def create_vit_classifier():\n",
        "    inputs = keras.Input(shape=input_shape)\n",
        "    augmented = data_augmentation(inputs)\n",
        "    patches = Patches(patch_size)(augmented)\n",
        "    encoded_patches = PatchEncoder(num_patches, projection_dim)(patches)\n",
        "\n",
        "    # Transformer blocks\n",
        "    for _ in range(transformer_layers):\n",
        "        x1 = layers.LayerNormalization(epsilon=1e-6)(encoded_patches)\n",
        "        attention_output = layers.MultiHeadAttention(num_heads=num_heads, key_dim=projection_dim)(x1, x1)\n",
        "        x2 = layers.Add()([attention_output, encoded_patches])\n",
        "        x3 = layers.LayerNormalization(epsilon=1e-6)(x2)\n",
        "        x3 = mlp(x3, hidden_units=transformer_units, dropout_rate=dropout_rate)\n",
        "        encoded_patches = layers.Add()([x3, x2])\n",
        "\n",
        "    # Classification head\n",
        "    representation = layers.LayerNormalization(epsilon=1e-6)(encoded_patches)\n",
        "    representation = layers.GlobalAveragePooling1D()(representation)\n",
        "    representation = layers.Dropout(dropout_rate)(representation)\n",
        "    features = mlp(representation, hidden_units=mlp_head_units, dropout_rate=dropout_rate)\n",
        "    logits = layers.Dense(num_classes, activation=\"softmax\")(features)\n",
        "\n",
        "    model = keras.Model(inputs=inputs, outputs=logits)\n",
        "    return model\n"
      ],
      "metadata": {
        "id": "8oVRzufsUaFw"
      },
      "execution_count": 44,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Train the model"
      ],
      "metadata": {
        "id": "vsw7GMoNUdGP"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "vit_model = create_vit_classifier()\n",
        "\n",
        "optimizer = keras.optimizers.AdamW(\n",
        "    learning_rate=learning_rate,\n",
        "    weight_decay=weight_decay\n",
        ")\n",
        "\n",
        "vit_model.compile(\n",
        "    optimizer=optimizer,\n",
        "    loss=\"categorical_crossentropy\",\n",
        "    metrics=[\"accuracy\"]\n",
        ")\n",
        "\n",
        "callbacks = [\n",
        "    keras.callbacks.EarlyStopping(monitor=\"val_loss\", patience=5, restore_best_weights=True),\n",
        "    keras.callbacks.ReduceLROnPlateau(monitor=\"val_loss\", factor=0.5, patience=3)\n",
        "]\n",
        "\n",
        "history = vit_model.fit(\n",
        "    x_train, y_train,\n",
        "    batch_size=batch_size,\n",
        "    epochs=num_epochs,\n",
        "    validation_split=0.1,\n",
        "    callbacks=callbacks\n",
        ")\n"
      ],
      "metadata": {
        "id": "Yah0Ot28UfyY",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "32f57ad9-4e75-4d96-e752-4aa57d9f21af"
      },
      "execution_count": 45,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/25\n",
            "\u001b[1m352/352\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 42ms/step - accuracy: 0.1956 - loss: 2.1276 - val_accuracy: 0.3268 - val_loss: 1.7543 - learning_rate: 5.0000e-04\n",
            "Epoch 2/25\n",
            "\u001b[1m352/352\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 34ms/step - accuracy: 0.3066 - loss: 1.8206 - val_accuracy: 0.3784 - val_loss: 1.6668 - learning_rate: 5.0000e-04\n",
            "Epoch 3/25\n",
            "\u001b[1m352/352\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 34ms/step - accuracy: 0.3564 - loss: 1.7113 - val_accuracy: 0.4202 - val_loss: 1.5673 - learning_rate: 5.0000e-04\n",
            "Epoch 4/25\n",
            "\u001b[1m352/352\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m22s\u001b[0m 38ms/step - accuracy: 0.3951 - loss: 1.6321 - val_accuracy: 0.4382 - val_loss: 1.5249 - learning_rate: 5.0000e-04\n",
            "Epoch 5/25\n",
            "\u001b[1m352/352\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 36ms/step - accuracy: 0.4251 - loss: 1.5661 - val_accuracy: 0.4654 - val_loss: 1.4838 - learning_rate: 5.0000e-04\n",
            "Epoch 6/25\n",
            "\u001b[1m352/352\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m19s\u001b[0m 33ms/step - accuracy: 0.4433 - loss: 1.5236 - val_accuracy: 0.4820 - val_loss: 1.4390 - learning_rate: 5.0000e-04\n",
            "Epoch 7/25\n",
            "\u001b[1m352/352\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 33ms/step - accuracy: 0.4630 - loss: 1.4805 - val_accuracy: 0.4942 - val_loss: 1.4161 - learning_rate: 5.0000e-04\n",
            "Epoch 8/25\n",
            "\u001b[1m352/352\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 31ms/step - accuracy: 0.4674 - loss: 1.4647 - val_accuracy: 0.5100 - val_loss: 1.3600 - learning_rate: 5.0000e-04\n",
            "Epoch 9/25\n",
            "\u001b[1m352/352\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m22s\u001b[0m 34ms/step - accuracy: 0.4815 - loss: 1.4378 - val_accuracy: 0.5166 - val_loss: 1.3434 - learning_rate: 5.0000e-04\n",
            "Epoch 10/25\n",
            "\u001b[1m352/352\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 33ms/step - accuracy: 0.4910 - loss: 1.4090 - val_accuracy: 0.5182 - val_loss: 1.3438 - learning_rate: 5.0000e-04\n",
            "Epoch 11/25\n",
            "\u001b[1m352/352\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 34ms/step - accuracy: 0.4949 - loss: 1.3953 - val_accuracy: 0.5098 - val_loss: 1.3883 - learning_rate: 5.0000e-04\n",
            "Epoch 12/25\n",
            "\u001b[1m352/352\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 33ms/step - accuracy: 0.5020 - loss: 1.3771 - val_accuracy: 0.5222 - val_loss: 1.3605 - learning_rate: 5.0000e-04\n",
            "Epoch 13/25\n",
            "\u001b[1m352/352\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 34ms/step - accuracy: 0.5122 - loss: 1.3468 - val_accuracy: 0.5306 - val_loss: 1.3307 - learning_rate: 2.5000e-04\n",
            "Epoch 14/25\n",
            "\u001b[1m352/352\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 33ms/step - accuracy: 0.5236 - loss: 1.3354 - val_accuracy: 0.5424 - val_loss: 1.3058 - learning_rate: 2.5000e-04\n",
            "Epoch 15/25\n",
            "\u001b[1m352/352\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 34ms/step - accuracy: 0.5233 - loss: 1.3237 - val_accuracy: 0.5428 - val_loss: 1.3040 - learning_rate: 2.5000e-04\n",
            "Epoch 16/25\n",
            "\u001b[1m352/352\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m22s\u001b[0m 39ms/step - accuracy: 0.5261 - loss: 1.3228 - val_accuracy: 0.5492 - val_loss: 1.2949 - learning_rate: 2.5000e-04\n",
            "Epoch 17/25\n",
            "\u001b[1m352/352\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m19s\u001b[0m 34ms/step - accuracy: 0.5299 - loss: 1.3021 - val_accuracy: 0.5380 - val_loss: 1.3162 - learning_rate: 2.5000e-04\n",
            "Epoch 18/25\n",
            "\u001b[1m352/352\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 33ms/step - accuracy: 0.5344 - loss: 1.2963 - val_accuracy: 0.5484 - val_loss: 1.2830 - learning_rate: 2.5000e-04\n",
            "Epoch 19/25\n",
            "\u001b[1m352/352\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 33ms/step - accuracy: 0.5336 - loss: 1.2951 - val_accuracy: 0.5456 - val_loss: 1.3052 - learning_rate: 2.5000e-04\n",
            "Epoch 20/25\n",
            "\u001b[1m352/352\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 34ms/step - accuracy: 0.5428 - loss: 1.2885 - val_accuracy: 0.5472 - val_loss: 1.2846 - learning_rate: 2.5000e-04\n",
            "Epoch 21/25\n",
            "\u001b[1m352/352\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 31ms/step - accuracy: 0.5443 - loss: 1.2729 - val_accuracy: 0.5542 - val_loss: 1.2780 - learning_rate: 2.5000e-04\n",
            "Epoch 22/25\n",
            "\u001b[1m352/352\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 34ms/step - accuracy: 0.5449 - loss: 1.2694 - val_accuracy: 0.5632 - val_loss: 1.2513 - learning_rate: 2.5000e-04\n",
            "Epoch 23/25\n",
            "\u001b[1m352/352\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 35ms/step - accuracy: 0.5482 - loss: 1.2599 - val_accuracy: 0.5626 - val_loss: 1.2615 - learning_rate: 2.5000e-04\n",
            "Epoch 24/25\n",
            "\u001b[1m352/352\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 33ms/step - accuracy: 0.5500 - loss: 1.2524 - val_accuracy: 0.5570 - val_loss: 1.2728 - learning_rate: 2.5000e-04\n",
            "Epoch 25/25\n",
            "\u001b[1m352/352\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 34ms/step - accuracy: 0.5467 - loss: 1.2580 - val_accuracy: 0.5702 - val_loss: 1.2435 - learning_rate: 2.5000e-04\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Run the model and plot"
      ],
      "metadata": {
        "id": "3AuMWKnQTUdy"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Accuracy\n",
        "plt.plot(history.history[\"accuracy\"], label=\"Train Acc\")\n",
        "plt.plot(history.history[\"val_accuracy\"], label=\"Val Acc\")\n",
        "plt.xlabel(\"Epoch\")\n",
        "plt.ylabel(\"Accuracy\")\n",
        "plt.title(\"ViT Accuracy Over Epochs\")\n",
        "plt.legend()\n",
        "plt.show()\n",
        "\n",
        "# Loss\n",
        "plt.plot(history.history[\"loss\"], label=\"Train Loss\")\n",
        "plt.plot(history.history[\"val_loss\"], label=\"Val Loss\")\n",
        "plt.xlabel(\"Epoch\")\n",
        "plt.ylabel(\"Loss\")\n",
        "plt.title(\"ViT Loss Over Epochs\")\n",
        "plt.legend()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "XdT4C23oTX1J",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 927
        },
        "outputId": "2da94e19-33de-490d-a2e8-14d752d25627"
      },
      "execution_count": 46,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "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1JVWmZmZTJkyhaZNmxIeHg5c+e+if//+HDt2jHffffe8dv43VF1Obm5uqcAKlvDj7+9/2d+bSHmliQdFHCguLo62bdvy7bffAtg18MyZM6ekl+Bcw4YN4+mnn2b69On06NGDRx99lJCQEL744gv27dvHnDlzcHGx/FvppptuIjw8nHbt2lGtWjW2bdvGu+++y80334y/vz/p6elUr16d2267jYSEBPz8/Pjtt99YvXr1ZXsK4uPj+eKLLxg8eDCNGzc+b6blY8eOMX36dGrVqlXqde7u7vTr14+vv/6anJycC64bNWnSJK6//noaN27MfffdR82aNTl8+DDLly/n4MGDbNy48Ro+WVi3bh1ffvnledtr1apFmzZtSh7XqVOHESNGsHr1aqpVq8Znn33G4cOH+fzzz0v2udLfxdChQ5kyZQpjxoxh1apVtG/fnpycHH777TdGjhxJ7969r7j+nTt30qVLFwYMGECDBg1wc3Nj7ty5HD58mDvuuOMaPhkRB3LgFWIiYhjGpEmTDMBo2bLlBZ+31WXpF7udufx5z549xm233WYEBQUZXl5eRsuWLY0ffvih1LE+/PBDo0OHDkZoaKjh6elp1KpVy3jyySeNjIwMwzAMIz8/33jyySeNhIQEw9/f3/D19TUSEhKM995774rr3bRpkzFo0CAjIiLCcHd3N8LDw41BgwYZf//990Vfs2DBAgMwTCaTkZycfMF99uzZYwwdOtQIDw833N3djaioKOOWW24xZs+eXbLPmc9+9erVV1Tr5S5LP/f3VKNGDePmm2825s+fbzRp0sTw9PQ06tWrd8HpAq7kd2EYhpGbm2s888wzRlxcXMlnddtttxl79uwpVd+FLjcHjOeee84wDMM4duyYMWrUKKNevXqGr6+vERgYaLRq1cqYOXPmFX0OIuWRyTDK2NcpIiLXLDY2lkaNGvHDDz84uhSRSkFjeERERMTpKfCIiIiI01PgEREREaenMTwiIiLi9NTDIyIiIk5PgUdEREScXqWbeNBsNpOamoq/v/95i/aJiIhI+WQYBllZWURGRpZMuFkWlS7wpKamEh0d7egyRERE5CokJydTvXr1Mr+u0gWeM4sCJicnl6ywLCIiIuVbZmYm0dHRV724b6ULPGdOYwUEBCjwiIiIVDBXOxxFg5ZFRETE6SnwiIiIiNNT4BERERGnV+nG8IiIiHMpLi6msLDQ0WWIFXh4eFzVJedXQoFHREQqJMMwOHToEOnp6Y4uRazExcWFuLg4PDw8rH5sBR4REamQzoSdsLAwfHx8NJlsBXdmYuC0tDRiYmKs/vtU4BERkQqnuLi4JOyEhoY6uhyxkqpVq5KamkpRURHu7u5WPbYGLYuISIVzZsyOj4+PgysRazpzKqu4uNjqx1bgERGRCkunsZyLLX+fCjwiIiLi9BR4REREKrjY2FjefPNNR5dRrinwiIiI2InJZLrk7fnnn7+q465evZr777//mmrr1KkTo0ePvqZjlGe6SsuKMvMKOXjiFA0itSipiIicLy0treT+jBkzGDduHDt27CjZ5ufnV3LfMAyKi4txc7v8V3XVqlWtW6gTUg+PlWw/lEmT53/lzk9WYBiGo8sREZFyKDw8vOQWGBiIyWQqebx9+3b8/f35+eefadasGZ6envz555/s2bOH3r17U61aNfz8/GjRogW//fZbqeP+7yktk8nEJ598Qt++ffHx8SE+Pp7vvvvummqfM2cODRs2xNPTk9jYWF577bVSz7/33nvEx8fj5eVFtWrVuO2220qemz17No0bN8bb25vQ0FC6du1KTk7ONdVTVurhsZK4Kr64uZhIzy0kNSOPqCBvR5ckIlKpGIbBqULrX858JbzdXa12hdHTTz/Nq6++Ss2aNQkODiY5OZmePXvy3//+F09PT6ZMmUKvXr3YsWMHMTExFz3O+PHjmThxIq+88grvvPMOgwcP5sCBA4SEhJS5prVr1zJgwACef/55Bg4cyF9//cXIkSMJDQ1l+PDhrFmzhkcffZSpU6fStm1bTpw4wdKlSwFLr9agQYOYOHEiffv2JSsri6VLl9q9c8ChgWfChAl88803bN++HW9vb9q2bcvLL79M3bp1L/m6WbNm8eyzz7J//37i4+N5+eWX6dmzp52qvjBPN1fiq/mzLS2TLSkZCjwiInZ2qrCYBuPmO6TtrS90w8fDOl+pL7zwAjfeeGPJ45CQEBISEkoe/+c//2Hu3Ll89913PPzwwxc9zvDhwxk0aBAA//d//8fbb7/NqlWr6N69e5lrev311+nSpQvPPvssAHXq1GHr1q288sorDB8+nKSkJHx9fbnlllvw9/enRo0aJCYmApbAU1RURL9+/ahRowYAjRs3LnMN18qhp7QWL17MqFGjWLFiBQsWLKCwsJCbbrrpkt1cf/31F4MGDWLEiBGsX7+ePn360KdPHzZv3mzHyi+s4emxO5tTMx1ciYiIVFTNmzcv9Tg7O5snnniC+vXrExQUhJ+fH9u2bSMpKemSx2nSpEnJfV9fXwICAjhy5MhV1bRt2zbatWtXalu7du3YtWsXxcXF3HjjjdSoUYOaNWsyZMgQvvrqK3JzcwFISEigS5cuNG7cmNtvv52PP/6YkydPXlUd18KhPTy//PJLqceTJ08mLCyMtWvX0qFDhwu+5q233qJ79+48+eSTgCXpLliwgHfffZcPPvjA5jVfSqPIAGavha2pGQ6tQ0SkMvJ2d2XrC90c1ra1+Pr6lnr8xBNPsGDBAl599VVq166Nt7c3t912GwUFBZc8zv8uzWAymTCbzVar81z+/v6sW7eORYsW8euvvzJu3Dief/55Vq9eTVBQEAsWLOCvv/7i119/5Z133uGZZ55h5cqVxMXF2aSeCylXg5YzMixB4VLnF5cvX07Xrl1LbevWrRvLly+3aW1XomFUIABb1MMjImJ3JpMJHw83h9xsOUPwsmXLGD58OH379qVx48aEh4ezf/9+m7V3IfXr12fZsmXn1VWnTh1cXS1hz83Nja5duzJx4kQ2bdrE/v37+f333wHL76Zdu3aMHz+e9evX4+Hhwdy5c+36HsrNoGWz2czo0aNp164djRo1uuh+hw4dolq1aqW2VatWjUOHDl1w//z8fPLz80seZ2baLozUjwjAZIK0jDxO5BQQ4mv95e1FRKRyiY+P55tvvqFXr16YTCaeffZZm/XUHD16lA0bNpTaFhERweOPP06LFi34z3/+w8CBA1m+fDnvvvsu7733HgA//PADe/fupUOHDgQHB/PTTz9hNpupW7cuK1euZOHChdx0002EhYWxcuVKjh49Sv369W3yHi6m3PTwjBo1is2bN/P1119b9bgTJkwgMDCw5BYdHW3V45/Lz9ON2FBLV+QWndYSEREreP311wkODqZt27b06tWLbt26cd1119mkrWnTppGYmFjq9vHHH3Pdddcxc+ZMvv76axo1asS4ceN44YUXGD58OABBQUF888033HDDDdSvX58PPviA6dOn07BhQwICAliyZAk9e/akTp06/Pvf/+a1116jR48eNnkPF2MyysGkMQ8//DDffvstS5Ysuez5vJiYGMaMGVNq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wlFvocy83F2pXdWPHYez2JKaQXig1+VfJCIiItfEod0ia9asITExkcTERADGjBlDYmIi48aNAyAtLY2kpKSS/YuLi3nttddISEjgxhtvJC8vj7/++ovY2FhHlH/VzpzW2pyigcsiIiL24NAenk6dOl1yHMvkyZNLPa5fvz7r16+3cVW21yAygG/Wp2jgsoiIiJ1UjIEvTqZR1JkrtdTDIyIiYg8KPA5wZtX0lPRTpOcWOLgaERER56fA4wABXu7EhPgAWjldRETEHhR4HEQzLouIiNiPAo+DlFyppYHLIiIiNqfA4yANIzVwWURExF4UeBykYZSlh2fv0WxOFRQ7uBoRERHnpsDjIGH+XlT198RswLZD6uURERGxJQUeB9LAZREREftQ4HGgsyuna+CyiIiILSnwONCZgctaU0tERMS2FHgc6EwPz45DWRQWmx1cjYiIiPNS4HGgmBAf/L3cKCg2s/tItqPLERERcVoKPA5kMploEKGByyIiIramwONgZycg1MBlERERW1HgcbCSS9M1cFlERMRmFHgc7MyMy1vTMjGbDQdXIyIi4pwUeBysVlU/PNxcyM4vIulErqPLERERcUoKPA7m7upC/XB/QAOXRUREbEWBpxxooIHLIiIiNqXAUw5oTS0RERHbUuApB84GngwMQwOXRURErE2BpxyoFx6AiwmOZRdwJCvf0eWIiIg4HQWecsDbw5XaYX6AxvGIiIjYggJPOVEy47ImIBQREbE6BZ5yQgOXRUREbEeBp5xocCbwpOmUloiIiLUp8JQTDSMsp7SST5wiI7fQwdWIiIg4FwWeciLQx53qwd6AenlERESsTYGnHGl0euDyVo3jERERsSoFnnJEA5dFRERsQ4GnHGkYdXbGZREREbEeBZ5y5MxcPLuPZHOqoNjB1YiIiDgPhwaeJUuW0KtXLyIjIzGZTMybN++yr/nqq69ISEjAx8eHiIgI7rnnHo4fP277Yu0gzN+TKn4emA3YfkintURERKzFoYEnJyeHhIQEJk2adEX7L1u2jKFDhzJixAi2bNnCrFmzWLVqFffdd5+NK7UPk8lEgzMzLmscj4iIiNW4ObLxHj160KNHjyvef/ny5cTGxvLoo48CEBcXxwMPPMDLL79sqxLtrlFkAEt2HlXgERERsaIKNYanTZs2JCcn89NPP2EYBocPH2b27Nn07Nnz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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "- Accuracy Curve:\n",
        "\n",
        "Steady improvement in both training and validation accuracy.\n",
        "\n",
        "Final training accuracy: ~55%\n",
        "\n",
        "Final validation accuracy: ~55.5%\n",
        "\n",
        "The closeness of the two curves suggests the model is not overfitting.\n",
        "\n",
        "- Loss Curve:\n",
        "\n",
        "Both training and validation loss decrease smoothly and converge around 1.27–1.29.\n",
        "\n",
        "No divergence or sharp increase in validation loss, indicating stable generalization."
      ],
      "metadata": {
        "id": "_ayi8qBftGEa"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Step 7: Comparison of the CNN and ViT Models"
      ],
      "metadata": {
        "id": "0tCziW1TtQi4"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Performace Gap**\n",
        "\n",
        "- Final Train Accuracy: CNN (72.3%) >> ViT (55.2%)\n",
        "- Final Validation Accuracy: CNN (75.8%) >> ViT (55.5%)\n",
        "- Final Validation Loss: CNN (0.73) << ViT (1.28)\n",
        "\n",
        "The CNN model outperformed the ViT by over 20 percentage points in validation accuracy.\n",
        "\n",
        "CNNs are better suited for small datasets like CIFAR-10 due to their inductive bias (e.g., local spatial filtering), which allows them to generalize faster with fewer samples.\n",
        "\n",
        "**Training Efficiency**\n",
        "\n",
        "- Avg. Time per Epoch: CNN (6-8 seconds) << ViT (20-22 seconds)\n",
        "- Convergence Rate: Much faster for CNN than ViT. CNN achieved good accuracy in less than 10 epochs, whereas ViT accuracy plateaued near epoch 20.\n",
        "\n",
        "CNNs are more computationally efficient and reach higher accuracy faster.\n",
        "\n",
        "ViTs took longer per epoch and more epochs to plateau — typical for transformer-based models without pretraining.\n",
        "\n",
        "**Learning Pattern**\n",
        "\n",
        "- Training vs. Validation accuracy:\n",
        "  - CNN: Validation slightly higher - no overfit\n",
        "  - ViT: Very close - well regularized\n",
        "- Loss curve:\n",
        "  - CNN: Smooth, sharp drop, stable\n",
        "  - ViT: Smooth but plateaued early\n",
        "- Generalisation ability:\n",
        "  - CNN: Strong\n",
        "  - ViT: Limited on this dataset due to no inductive bias or pretraining\n",
        "\n",
        "CNN learned local features more quickly, helping it to generalise well.\n",
        "ViT lacked inductive biases, requiring more data to perform competitively. Its accuracy plateaued early, suggesting it learned some meaningful representations, but not enough to compete with CNN."
      ],
      "metadata": {
        "id": "2HoYJ8zQtrJt"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Final conclusion**\n",
        "\n",
        "While the ViT model was correctly implemented and trained with attention mechanisms, regularization, and learning rate scheduling, it was outperformed by the CNN in nearly all aspects due to the nature of the dataset. This outcome aligns with known behavior of ViTs: they perform best with large datasets or pretrained weights, while CNNs are highly effective even on small datasets like CIFAR-10."
      ],
      "metadata": {
        "id": "M6LsclZvvhlu"
      }
    }
  ]
}